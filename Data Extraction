{"cells":[{"cell_type":"markdown","metadata":{"id":"frAyQ1Fhsc2u"},"source":["## Deep Dive Project Team 20"]},{"cell_type":"markdown","metadata":{"id":"8PVgu4ngsqJi"},"source":["## Importing Dataset into notebook\n","\n","\n"]},{"cell_type":"code","execution_count":1,"metadata":{"id":"CXI0pyH_swIW","executionInfo":{"status":"ok","timestamp":1733711946490,"user_tz":360,"elapsed":1624,"user":{"displayName":"Zach Martin","userId":"15224724189394128547"}}},"outputs":[],"source":["import pandas as pd\n","from google.colab import drive\n","import gdown"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":635,"status":"ok","timestamp":1733711949083,"user":{"displayName":"Zach Martin","userId":"15224724189394128547"},"user_tz":360},"id":"sFxSgb6ws8kZ","outputId":"4771c8c0-7b56-4168-ed17-145b3dca4532"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":122},"executionInfo":{"elapsed":11941,"status":"ok","timestamp":1733711961589,"user":{"displayName":"Zach Martin","userId":"15224724189394128547"},"user_tz":360},"id":"JUXggAbxtzjf","outputId":"6524850c-215d-4752-e725-f851ff81de4d"},"outputs":[{"output_type":"stream","name":"stderr","text":["Downloading...\n","From (original): https://drive.google.com/uc?id=1TZpmxe30p6PuCXzE0I2a-NfyO2KxzAss\n","From (redirected): https://drive.google.com/uc?id=1TZpmxe30p6PuCXzE0I2a-NfyO2KxzAss&confirm=t&uuid=edbaf4df-e880-4211-b8d4-3b7d3c79f440\n","To: /content/Rodent_Inspection_20241022.csv\n","100%|██████████| 690M/690M [00:08<00:00, 85.8MB/s]\n"]},{"output_type":"execute_result","data":{"text/plain":["'Rodent_Inspection_20241022.csv'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":3}],"source":["#https://drive.google.com/file/d/1TZpmxe30p6PuCXzE0I2a-NfyO2KxzAss/view?usp=drive_link\n","#file_id = '1p9xdICTHVkXdfhl6ImBUGpbpKLA-1m-_'\n","file_id = '1TZpmxe30p6PuCXzE0I2a-NfyO2KxzAss'\n","destination = 'Rodent_Inspection_20241022.csv'\n","# Use the correct URL format for gdown\n","gdown.download(f'https://drive.google.com/uc?id={file_id}', destination, quiet=False)"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1733711961590,"user":{"displayName":"Zach Martin","userId":"15224724189394128547"},"user_tz":360},"id":"u7JOU-cCuhBI","outputId":"7656314c-9378-462f-e919-95ba606eba09"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'/content'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":4}],"source":["pwd"]},{"cell_type":"code","execution_count":5,"metadata":{"id":"jGXtd5sLr-XU","executionInfo":{"status":"ok","timestamp":1733711984757,"user_tz":360,"elapsed":19954,"user":{"displayName":"Zach Martin","userId":"15224724189394128547"}}},"outputs":[],"source":["df = pd.read_csv(\"Rodent_Inspection_20241022.csv\")"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1733711984757,"user":{"displayName":"Zach Martin","userId":"15224724189394128547"},"user_tz":360},"id":"PK95PsN3r-jo","outputId":"a4bb001d-87e3-42bc-97ff-aa74100416e8"},"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['INSPECTION_TYPE', 'JOB_TICKET_OR_WORK_ORDER_ID', 'JOB_ID',\n","       'JOB_PROGRESS', 'BBL', 'BORO_CODE', 'BLOCK', 'LOT', 'HOUSE_NUMBER',\n","       'STREET_NAME', 'ZIP_CODE', 'X_COORD', 'Y_COORD', 'LATITUDE',\n","       'LONGITUDE', 'BOROUGH', 'INSPECTION_DATE', 'RESULT', 'APPROVED_DATE',\n","       'LOCATION', 'COMMUNITY BOARD', 'COUNCIL DISTRICT', 'CENSUS TRACT',\n","       'BIN', 'NTA'],\n","      dtype='object')\n"]}],"source":["print(df.columns)"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"U6P9Lt2Cr-oP","executionInfo":{"status":"ok","timestamp":1733711984757,"user_tz":360,"elapsed":5,"user":{"displayName":"Zach Martin","userId":"15224724189394128547"}}},"outputs":[],"source":["label = 'RESULT'"]},{"cell_type":"markdown","metadata":{"id":"mDEvLwdZsm3M"},"source":["## Cleaning the dataset and setting up a debugging dataset"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1733711984757,"user":{"displayName":"Zach Martin","userId":"15224724189394128547"},"user_tz":360},"id":"Ouu4scA5saFD","outputId":"f6bde92c-9420-4a30-8dd1-210391481ffa"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["2654412"]},"metadata":{},"execution_count":8}],"source":["len(df)"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1733711984757,"user":{"displayName":"Zach Martin","userId":"15224724189394128547"},"user_tz":360},"id":"CSE_m5Miu49V","outputId":"0a84a7f5-73e1-4591-fd4d-9d5705422aae"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   INSPECTION_TYPE  JOB_TICKET_OR_WORK_ORDER_ID     JOB_ID  JOB_PROGRESS  \\\n","0          Initial                     11670593  PC6530234             1   \n","1          Initial                     11758853  PC6101553             1   \n","2          Initial                     12504178  PC7270050             1   \n","3          Initial                     12560587  PC6481130             1   \n","4          Initial                     12345229  PC6794074             1   \n","5          Initial                     12628612  PC7229376             1   \n","6             BAIT                      2631070  PC7376230             6   \n","7          Initial                     11928052  PC7552325             1   \n","8          Initial                     11238904  PC6543128             1   \n","9       Compliance                     12764261  PC6986296             2   \n","10         Initial                     12686562  PC6485181             1   \n","11      Compliance                     13049313  PC7303874             2   \n","12         Initial                     13411221  PC7877168             1   \n","13         Initial                     11759789  PC6661373             1   \n","14      Compliance                     13067314  PC6441885             2   \n","15            BAIT                      2585139  PC7507274             1   \n","16         Initial                     12011178  PC6658832             1   \n","17      Compliance                     12773030  PC7360087             2   \n","18         Initial                     13529505  PC7996864             1   \n","19            BAIT                      2384652  PC7369767             3   \n","20         Initial                     12272245  PC7364921             1   \n","21      Compliance                     13764038  PC8203313             2   \n","22            BAIT                      2790824  PC7587967             3   \n","23         Initial                     13168406  PC7593687             1   \n","24      Compliance                     13304268  PC7747707             2   \n","\n","             BBL  BORO_CODE  BLOCK   LOT HOUSE_NUMBER         STREET_NAME  \\\n","0   2.032890e+09          2   3289    25          326     EAST 198 STREET   \n","1   1.013290e+09          1   1329   121          245      EAST 55 STREET   \n","2            NaN          3   3141    20          NaN     MONTIETH STREET   \n","3   1.021110e+09          1   2111    15          470     WEST 165 STREET   \n","4   2.031490e+09          2   3149    90         2110         RYER AVENUE   \n","5   3.033350e+09          3   3335    26          308       LINDEN STREET   \n","6   4.034360e+09          4   3436     1         1712       GREENE AVENUE   \n","7   1.020610e+09          1   2061    36          402     WEST 147 STREET   \n","8   2.028610e+09          2   2861   114         1770     DAVIDSON AVENUE   \n","9   3.056430e+09          3   5643     1         1415           50 STREET   \n","10  1.015490e+09          1   1549   131          354      EAST 87 STREET   \n","11  3.009430e+09          3    943     9          346       BUTLER STREET   \n","12  1.021650e+09          1   2165    54          209    WADSWORTH AVENUE   \n","13  2.023290e+09          2   2329   162          328     EAST 148 STREET   \n","14  1.012030e+09          1   1203   154           46      WEST 90 STREET   \n","15  4.031718e+09          4   3171  7502       101-24    QUEENS BOULEVARD   \n","16  2.031570e+09          2   3157    20         2186     GRAND CONCOURSE   \n","17  4.097140e+09          4   9714    14       141-33   PERSHING CRESCENT   \n","18  3.017060e+09          3   1706    52           26  SCHENECTADY AVENUE   \n","19  3.072450e+09          3   7245    34          637       BANNER AVENUE   \n","20  4.033880e+09          4   3388    36         1940       HARMAN STREET   \n","21  2.030890e+09          2   3089    47         2337     BEAUMONT AVENUE   \n","22  1.018790e+09          1   1879    44          218     WEST 108 STREET   \n","23  2.033290e+09          2   3329    68         3605   BAINBRIDGE AVENUE   \n","24  3.017740e+09          3   1774    51          685       DEKALB AVENUE   \n","\n","    ...    BOROUGH         INSPECTION_DATE              RESULT  \\\n","0   ...      Bronx  08/30/2010 03:23:11 PM              Passed   \n","1   ...  Manhattan  08/18/2011 12:05:54 PM              Passed   \n","2   ...   Brooklyn  10/10/2018 12:57:02 PM              Passed   \n","3   ...  Manhattan  02/07/2019 12:48:34 PM              Passed   \n","4   ...      Bronx  10/16/2017 01:02:51 PM        Rat Activity   \n","5   ...   Brooklyn  06/20/2019 04:02:23 PM              Passed   \n","6   ...     Queens  08/01/2017 09:45:13 AM        Bait applied   \n","7   ...  Manhattan  07/18/2013 03:46:40 PM              Passed   \n","8   ...      Bronx  01/25/2012 02:45:24 PM        Rat Activity   \n","9   ...   Brooklyn  09/28/2010 10:25:40 AM  Failed for Other R   \n","10  ...  Manhattan  12/02/2019 10:05:25 AM              Passed   \n","11  ...   Brooklyn  12/18/2018 01:40:51 PM              Passed   \n","12  ...  Manhattan  06/15/2022 11:12:00 AM        Rat Activity   \n","13  ...      Bronx  08/23/2011 02:55:52 PM              Passed   \n","14  ...  Manhattan  05/17/2019 11:50:19 AM              Passed   \n","15  ...     Queens  09/21/2016 11:53:28 AM        Bait applied   \n","16  ...      Bronx  08/04/2014 12:03:59 PM        Rat Activity   \n","17  ...     Queens  12/14/2010 11:21:40 AM  Failed for Other R   \n","18  ...   Brooklyn  11/28/2022 09:07:34 AM              Passed   \n","19  ...   Brooklyn  05/19/2010 11:15:42 AM        Bait applied   \n","20  ...     Queens  04/07/2017 10:55:27 AM              Passed   \n","21  ...      Bronx  12/06/2023 04:05:40 PM  Failed for Other R   \n","22  ...  Manhattan  07/27/2020 09:00:58 AM        Bait applied   \n","23  ...      Bronx  07/20/2020 08:02:26 AM              Passed   \n","24  ...   Brooklyn  12/09/2021 04:02:22 PM              Passed   \n","\n","             APPROVED_DATE                               LOCATION  \\\n","0   09/03/2010 10:43:36 AM    (40.867726534028, -73.887461100839)   \n","1   08/19/2011 12:02:56 PM    (40.758511490599, -73.967433834067)   \n","2   10/11/2018 08:59:21 AM  (40.7014506131434, -73.9354065814951)   \n","3   02/13/2019 10:28:33 AM      (40.83764407994, -73.93777140242)   \n","4   10/27/2017 02:31:42 PM    (40.853455091584, -73.900632420841)   \n","5   06/26/2019 01:35:17 PM    (40.698368377396, -73.914503763762)   \n","6   08/02/2017 01:10:23 PM     (40.704564950325, -73.91300982197)   \n","7   07/24/2013 03:15:16 PM     (40.825433236613, -73.94408804711)   \n","8   01/26/2012 11:42:03 AM    (40.848765924602, -73.912722919925)   \n","9   09/30/2010 10:44:05 AM     (40.63280237264, -73.989937341775)   \n","10  12/03/2019 10:28:16 AM      (40.77800396516, -73.94998458153)   \n","11  12/19/2018 03:26:09 PM    (40.679800088274, -73.980967291917)   \n","12  06/21/2022 03:06:47 PM     (40.851349095923, -73.93384381347)   \n","13  08/24/2011 09:39:28 AM    (40.816079147777, -73.920753798353)   \n","14  05/20/2019 01:07:32 PM    (40.788698874377, -73.969491887357)   \n","15  10/04/2016 12:24:40 PM     (40.72635937367, -73.852245969818)   \n","16  08/08/2014 09:48:13 AM    (40.855456470448, -73.901175272632)   \n","17  12/22/2010 11:41:52 AM    (40.712056085847, -73.815997381523)   \n","18  11/29/2022 08:29:12 AM    (40.678456363261, -73.933006505011)   \n","19  05/26/2010 10:22:33 AM    (40.583203732627, -73.962047454077)   \n","20  04/17/2017 12:40:02 PM    (40.708367127171, -73.910314082221)   \n","21  12/11/2023 01:58:09 PM    (40.853144054034, -73.884973584878)   \n","22  08/02/2020 10:38:02 PM    (40.802061946684, -73.965555872021)   \n","23  07/20/2020 03:04:24 PM    (40.884917722321, -73.877656400647)   \n","24  12/13/2021 11:23:22 AM      (40.6916477637, -73.949032715749)   \n","\n","   COMMUNITY BOARD COUNCIL DISTRICT CENSUS TRACT        BIN  \\\n","0              7.0             15.0      40502.0  2016678.0   \n","1              6.0              4.0      10801.0  1038588.0   \n","2              NaN              NaN          NaN        NaN   \n","3             12.0             10.0      24301.0  1062635.0   \n","4              5.0             15.0        381.0  2013535.0   \n","5              4.0             37.0        433.0  3076324.0   \n","6              5.0             34.0        545.0  4082041.0   \n","7              9.0              9.0        231.0  1061400.0   \n","8              5.0             14.0        217.0  2008369.0   \n","9             12.0             44.0        236.0  3000000.0   \n","10             8.0              5.0      14602.0  1050043.0   \n","11             6.0             39.0        131.0  3000000.0   \n","12            12.0             10.0        271.0  1063953.0   \n","13             1.0              8.0         65.0  2113085.0   \n","14             7.0              6.0        173.0  1031594.0   \n","15             6.0             29.0      71305.0  4075148.0   \n","16             5.0             15.0        381.0  2013706.0   \n","17             8.0             24.0      22002.0  4207775.0   \n","18             3.0             36.0        271.0  3048138.0   \n","19            13.0             48.0        366.0  3196257.0   \n","20             5.0             30.0        591.0  4080799.0   \n","21             6.0             15.0        391.0  2012523.0   \n","22             7.0              7.0        195.0  1056664.0   \n","23             7.0             11.0      43101.0  2017848.0   \n","24             3.0             36.0        253.0  3338637.0   \n","\n","                                          NTA  \n","0                                Bedford Park  \n","1                     East Midtown-Turtle Bay  \n","2                                         NaN  \n","3                  Washington Heights (South)  \n","4                                  Mount Hope  \n","5                             Bushwick (East)  \n","6                                   Ridgewood  \n","7                 Hamilton Heights-Sugar Hill  \n","8   University Heights (South)-Morris Heights  \n","9                                Borough Park  \n","10                  Upper East Side-Yorkville  \n","11                                 Park Slope  \n","12                 Washington Heights (North)  \n","13                                    Melrose  \n","14                  Upper West Side (Central)  \n","15                               Forest Hills  \n","16                                 Mount Hope  \n","17                    Jamaica Hills-Briarwood  \n","18                  Bedford-Stuyvesant (East)  \n","19                             Brighton Beach  \n","20                                  Ridgewood  \n","21                                    Belmont  \n","22           Upper West Side-Manhattan Valley  \n","23                                    Norwood  \n","24                  Bedford-Stuyvesant (West)  \n","\n","[25 rows x 25 columns]"],"text/html":["\n","  <div id=\"df-f3d859d3-554a-4caa-8741-ec1c1587ef6c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>INSPECTION_TYPE</th>\n","      <th>JOB_TICKET_OR_WORK_ORDER_ID</th>\n","      <th>JOB_ID</th>\n","      <th>JOB_PROGRESS</th>\n","      <th>BBL</th>\n","      <th>BORO_CODE</th>\n","      <th>BLOCK</th>\n","      <th>LOT</th>\n","      <th>HOUSE_NUMBER</th>\n","      <th>STREET_NAME</th>\n","      <th>...</th>\n","      <th>BOROUGH</th>\n","      <th>INSPECTION_DATE</th>\n","      <th>RESULT</th>\n","      <th>APPROVED_DATE</th>\n","      <th>LOCATION</th>\n","      <th>COMMUNITY BOARD</th>\n","      <th>COUNCIL DISTRICT</th>\n","      <th>CENSUS TRACT</th>\n","      <th>BIN</th>\n","      <th>NTA</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Initial</td>\n","      <td>11670593</td>\n","      <td>PC6530234</td>\n","      <td>1</td>\n","      <td>2.032890e+09</td>\n","      <td>2</td>\n","      <td>3289</td>\n","      <td>25</td>\n","      <td>326</td>\n","      <td>EAST 198 STREET</td>\n","      <td>...</td>\n","      <td>Bronx</td>\n","      <td>08/30/2010 03:23:11 PM</td>\n","      <td>Passed</td>\n","      <td>09/03/2010 10:43:36 AM</td>\n","      <td>(40.867726534028, -73.887461100839)</td>\n","      <td>7.0</td>\n","      <td>15.0</td>\n","      <td>40502.0</td>\n","      <td>2016678.0</td>\n","      <td>Bedford Park</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Initial</td>\n","      <td>11758853</td>\n","      <td>PC6101553</td>\n","      <td>1</td>\n","      <td>1.013290e+09</td>\n","      <td>1</td>\n","      <td>1329</td>\n","      <td>121</td>\n","      <td>245</td>\n","      <td>EAST 55 STREET</td>\n","      <td>...</td>\n","      <td>Manhattan</td>\n","      <td>08/18/2011 12:05:54 PM</td>\n","      <td>Passed</td>\n","      <td>08/19/2011 12:02:56 PM</td>\n","      <td>(40.758511490599, -73.967433834067)</td>\n","      <td>6.0</td>\n","      <td>4.0</td>\n","      <td>10801.0</td>\n","      <td>1038588.0</td>\n","      <td>East Midtown-Turtle Bay</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Initial</td>\n","      <td>12504178</td>\n","      <td>PC7270050</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>3141</td>\n","      <td>20</td>\n","      <td>NaN</td>\n","      <td>MONTIETH STREET</td>\n","      <td>...</td>\n","      <td>Brooklyn</td>\n","      <td>10/10/2018 12:57:02 PM</td>\n","      <td>Passed</td>\n","      <td>10/11/2018 08:59:21 AM</td>\n","      <td>(40.7014506131434, -73.9354065814951)</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Initial</td>\n","      <td>12560587</td>\n","      <td>PC6481130</td>\n","      <td>1</td>\n","      <td>1.021110e+09</td>\n","      <td>1</td>\n","      <td>2111</td>\n","      <td>15</td>\n","      <td>470</td>\n","      <td>WEST 165 STREET</td>\n","      <td>...</td>\n","      <td>Manhattan</td>\n","      <td>02/07/2019 12:48:34 PM</td>\n","      <td>Passed</td>\n","      <td>02/13/2019 10:28:33 AM</td>\n","      <td>(40.83764407994, -73.93777140242)</td>\n","      <td>12.0</td>\n","      <td>10.0</td>\n","      <td>24301.0</td>\n","      <td>1062635.0</td>\n","      <td>Washington Heights (South)</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Initial</td>\n","      <td>12345229</td>\n","      <td>PC6794074</td>\n","      <td>1</td>\n","      <td>2.031490e+09</td>\n","      <td>2</td>\n","      <td>3149</td>\n","      <td>90</td>\n","      <td>2110</td>\n","      <td>RYER AVENUE</td>\n","      <td>...</td>\n","      <td>Bronx</td>\n","      <td>10/16/2017 01:02:51 PM</td>\n","      <td>Rat Activity</td>\n","      <td>10/27/2017 02:31:42 PM</td>\n","      <td>(40.853455091584, -73.900632420841)</td>\n","      <td>5.0</td>\n","      <td>15.0</td>\n","      <td>381.0</td>\n","      <td>2013535.0</td>\n","      <td>Mount Hope</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Initial</td>\n","      <td>12628612</td>\n","      <td>PC7229376</td>\n","      <td>1</td>\n","      <td>3.033350e+09</td>\n","      <td>3</td>\n","      <td>3335</td>\n","      <td>26</td>\n","      <td>308</td>\n","      <td>LINDEN STREET</td>\n","      <td>...</td>\n","      <td>Brooklyn</td>\n","      <td>06/20/2019 04:02:23 PM</td>\n","      <td>Passed</td>\n","      <td>06/26/2019 01:35:17 PM</td>\n","      <td>(40.698368377396, -73.914503763762)</td>\n","      <td>4.0</td>\n","      <td>37.0</td>\n","      <td>433.0</td>\n","      <td>3076324.0</td>\n","      <td>Bushwick (East)</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>BAIT</td>\n","      <td>2631070</td>\n","      <td>PC7376230</td>\n","      <td>6</td>\n","      <td>4.034360e+09</td>\n","      <td>4</td>\n","      <td>3436</td>\n","      <td>1</td>\n","      <td>1712</td>\n","      <td>GREENE AVENUE</td>\n","      <td>...</td>\n","      <td>Queens</td>\n","      <td>08/01/2017 09:45:13 AM</td>\n","      <td>Bait applied</td>\n","      <td>08/02/2017 01:10:23 PM</td>\n","      <td>(40.704564950325, -73.91300982197)</td>\n","      <td>5.0</td>\n","      <td>34.0</td>\n","      <td>545.0</td>\n","      <td>4082041.0</td>\n","      <td>Ridgewood</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Initial</td>\n","      <td>11928052</td>\n","      <td>PC7552325</td>\n","      <td>1</td>\n","      <td>1.020610e+09</td>\n","      <td>1</td>\n","      <td>2061</td>\n","      <td>36</td>\n","      <td>402</td>\n","      <td>WEST 147 STREET</td>\n","      <td>...</td>\n","      <td>Manhattan</td>\n","      <td>07/18/2013 03:46:40 PM</td>\n","      <td>Passed</td>\n","      <td>07/24/2013 03:15:16 PM</td>\n","      <td>(40.825433236613, -73.94408804711)</td>\n","      <td>9.0</td>\n","      <td>9.0</td>\n","      <td>231.0</td>\n","      <td>1061400.0</td>\n","      <td>Hamilton Heights-Sugar Hill</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Initial</td>\n","      <td>11238904</td>\n","      <td>PC6543128</td>\n","      <td>1</td>\n","      <td>2.028610e+09</td>\n","      <td>2</td>\n","      <td>2861</td>\n","      <td>114</td>\n","      <td>1770</td>\n","      <td>DAVIDSON AVENUE</td>\n","      <td>...</td>\n","      <td>Bronx</td>\n","      <td>01/25/2012 02:45:24 PM</td>\n","      <td>Rat Activity</td>\n","      <td>01/26/2012 11:42:03 AM</td>\n","      <td>(40.848765924602, -73.912722919925)</td>\n","      <td>5.0</td>\n","      <td>14.0</td>\n","      <td>217.0</td>\n","      <td>2008369.0</td>\n","      <td>University Heights (South)-Morris Heights</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Compliance</td>\n","      <td>12764261</td>\n","      <td>PC6986296</td>\n","      <td>2</td>\n","      <td>3.056430e+09</td>\n","      <td>3</td>\n","      <td>5643</td>\n","      <td>1</td>\n","      <td>1415</td>\n","      <td>50 STREET</td>\n","      <td>...</td>\n","      <td>Brooklyn</td>\n","      <td>09/28/2010 10:25:40 AM</td>\n","      <td>Failed for Other R</td>\n","      <td>09/30/2010 10:44:05 AM</td>\n","      <td>(40.63280237264, -73.989937341775)</td>\n","      <td>12.0</td>\n","      <td>44.0</td>\n","      <td>236.0</td>\n","      <td>3000000.0</td>\n","      <td>Borough Park</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Initial</td>\n","      <td>12686562</td>\n","      <td>PC6485181</td>\n","      <td>1</td>\n","      <td>1.015490e+09</td>\n","      <td>1</td>\n","      <td>1549</td>\n","      <td>131</td>\n","      <td>354</td>\n","      <td>EAST 87 STREET</td>\n","      <td>...</td>\n","      <td>Manhattan</td>\n","      <td>12/02/2019 10:05:25 AM</td>\n","      <td>Passed</td>\n","      <td>12/03/2019 10:28:16 AM</td>\n","      <td>(40.77800396516, -73.94998458153)</td>\n","      <td>8.0</td>\n","      <td>5.0</td>\n","      <td>14602.0</td>\n","      <td>1050043.0</td>\n","      <td>Upper East Side-Yorkville</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Compliance</td>\n","      <td>13049313</td>\n","      <td>PC7303874</td>\n","      <td>2</td>\n","      <td>3.009430e+09</td>\n","      <td>3</td>\n","      <td>943</td>\n","      <td>9</td>\n","      <td>346</td>\n","      <td>BUTLER STREET</td>\n","      <td>...</td>\n","      <td>Brooklyn</td>\n","      <td>12/18/2018 01:40:51 PM</td>\n","      <td>Passed</td>\n","      <td>12/19/2018 03:26:09 PM</td>\n","      <td>(40.679800088274, -73.980967291917)</td>\n","      <td>6.0</td>\n","      <td>39.0</td>\n","      <td>131.0</td>\n","      <td>3000000.0</td>\n","      <td>Park Slope</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Initial</td>\n","      <td>13411221</td>\n","      <td>PC7877168</td>\n","      <td>1</td>\n","      <td>1.021650e+09</td>\n","      <td>1</td>\n","      <td>2165</td>\n","      <td>54</td>\n","      <td>209</td>\n","      <td>WADSWORTH AVENUE</td>\n","      <td>...</td>\n","      <td>Manhattan</td>\n","      <td>06/15/2022 11:12:00 AM</td>\n","      <td>Rat Activity</td>\n","      <td>06/21/2022 03:06:47 PM</td>\n","      <td>(40.851349095923, -73.93384381347)</td>\n","      <td>12.0</td>\n","      <td>10.0</td>\n","      <td>271.0</td>\n","      <td>1063953.0</td>\n","      <td>Washington Heights (North)</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Initial</td>\n","      <td>11759789</td>\n","      <td>PC6661373</td>\n","      <td>1</td>\n","      <td>2.023290e+09</td>\n","      <td>2</td>\n","      <td>2329</td>\n","      <td>162</td>\n","      <td>328</td>\n","      <td>EAST 148 STREET</td>\n","      <td>...</td>\n","      <td>Bronx</td>\n","      <td>08/23/2011 02:55:52 PM</td>\n","      <td>Passed</td>\n","      <td>08/24/2011 09:39:28 AM</td>\n","      <td>(40.816079147777, -73.920753798353)</td>\n","      <td>1.0</td>\n","      <td>8.0</td>\n","      <td>65.0</td>\n","      <td>2113085.0</td>\n","      <td>Melrose</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Compliance</td>\n","      <td>13067314</td>\n","      <td>PC6441885</td>\n","      <td>2</td>\n","      <td>1.012030e+09</td>\n","      <td>1</td>\n","      <td>1203</td>\n","      <td>154</td>\n","      <td>46</td>\n","      <td>WEST 90 STREET</td>\n","      <td>...</td>\n","      <td>Manhattan</td>\n","      <td>05/17/2019 11:50:19 AM</td>\n","      <td>Passed</td>\n","      <td>05/20/2019 01:07:32 PM</td>\n","      <td>(40.788698874377, -73.969491887357)</td>\n","      <td>7.0</td>\n","      <td>6.0</td>\n","      <td>173.0</td>\n","      <td>1031594.0</td>\n","      <td>Upper West Side (Central)</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>BAIT</td>\n","      <td>2585139</td>\n","      <td>PC7507274</td>\n","      <td>1</td>\n","      <td>4.031718e+09</td>\n","      <td>4</td>\n","      <td>3171</td>\n","      <td>7502</td>\n","      <td>101-24</td>\n","      <td>QUEENS BOULEVARD</td>\n","      <td>...</td>\n","      <td>Queens</td>\n","      <td>09/21/2016 11:53:28 AM</td>\n","      <td>Bait applied</td>\n","      <td>10/04/2016 12:24:40 PM</td>\n","      <td>(40.72635937367, -73.852245969818)</td>\n","      <td>6.0</td>\n","      <td>29.0</td>\n","      <td>71305.0</td>\n","      <td>4075148.0</td>\n","      <td>Forest Hills</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Initial</td>\n","      <td>12011178</td>\n","      <td>PC6658832</td>\n","      <td>1</td>\n","      <td>2.031570e+09</td>\n","      <td>2</td>\n","      <td>3157</td>\n","      <td>20</td>\n","      <td>2186</td>\n","      <td>GRAND CONCOURSE</td>\n","      <td>...</td>\n","      <td>Bronx</td>\n","      <td>08/04/2014 12:03:59 PM</td>\n","      <td>Rat Activity</td>\n","      <td>08/08/2014 09:48:13 AM</td>\n","      <td>(40.855456470448, -73.901175272632)</td>\n","      <td>5.0</td>\n","      <td>15.0</td>\n","      <td>381.0</td>\n","      <td>2013706.0</td>\n","      <td>Mount Hope</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Compliance</td>\n","      <td>12773030</td>\n","      <td>PC7360087</td>\n","      <td>2</td>\n","      <td>4.097140e+09</td>\n","      <td>4</td>\n","      <td>9714</td>\n","      <td>14</td>\n","      <td>141-33</td>\n","      <td>PERSHING CRESCENT</td>\n","      <td>...</td>\n","      <td>Queens</td>\n","      <td>12/14/2010 11:21:40 AM</td>\n","      <td>Failed for Other R</td>\n","      <td>12/22/2010 11:41:52 AM</td>\n","      <td>(40.712056085847, -73.815997381523)</td>\n","      <td>8.0</td>\n","      <td>24.0</td>\n","      <td>22002.0</td>\n","      <td>4207775.0</td>\n","      <td>Jamaica Hills-Briarwood</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Initial</td>\n","      <td>13529505</td>\n","      <td>PC7996864</td>\n","      <td>1</td>\n","      <td>3.017060e+09</td>\n","      <td>3</td>\n","      <td>1706</td>\n","      <td>52</td>\n","      <td>26</td>\n","      <td>SCHENECTADY AVENUE</td>\n","      <td>...</td>\n","      <td>Brooklyn</td>\n","      <td>11/28/2022 09:07:34 AM</td>\n","      <td>Passed</td>\n","      <td>11/29/2022 08:29:12 AM</td>\n","      <td>(40.678456363261, -73.933006505011)</td>\n","      <td>3.0</td>\n","      <td>36.0</td>\n","      <td>271.0</td>\n","      <td>3048138.0</td>\n","      <td>Bedford-Stuyvesant (East)</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>BAIT</td>\n","      <td>2384652</td>\n","      <td>PC7369767</td>\n","      <td>3</td>\n","      <td>3.072450e+09</td>\n","      <td>3</td>\n","      <td>7245</td>\n","      <td>34</td>\n","      <td>637</td>\n","      <td>BANNER AVENUE</td>\n","      <td>...</td>\n","      <td>Brooklyn</td>\n","      <td>05/19/2010 11:15:42 AM</td>\n","      <td>Bait applied</td>\n","      <td>05/26/2010 10:22:33 AM</td>\n","      <td>(40.583203732627, -73.962047454077)</td>\n","      <td>13.0</td>\n","      <td>48.0</td>\n","      <td>366.0</td>\n","      <td>3196257.0</td>\n","      <td>Brighton Beach</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>Initial</td>\n","      <td>12272245</td>\n","      <td>PC7364921</td>\n","      <td>1</td>\n","      <td>4.033880e+09</td>\n","      <td>4</td>\n","      <td>3388</td>\n","      <td>36</td>\n","      <td>1940</td>\n","      <td>HARMAN STREET</td>\n","      <td>...</td>\n","      <td>Queens</td>\n","      <td>04/07/2017 10:55:27 AM</td>\n","      <td>Passed</td>\n","      <td>04/17/2017 12:40:02 PM</td>\n","      <td>(40.708367127171, -73.910314082221)</td>\n","      <td>5.0</td>\n","      <td>30.0</td>\n","      <td>591.0</td>\n","      <td>4080799.0</td>\n","      <td>Ridgewood</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>Compliance</td>\n","      <td>13764038</td>\n","      <td>PC8203313</td>\n","      <td>2</td>\n","      <td>2.030890e+09</td>\n","      <td>2</td>\n","      <td>3089</td>\n","      <td>47</td>\n","      <td>2337</td>\n","      <td>BEAUMONT AVENUE</td>\n","      <td>...</td>\n","      <td>Bronx</td>\n","      <td>12/06/2023 04:05:40 PM</td>\n","      <td>Failed for Other R</td>\n","      <td>12/11/2023 01:58:09 PM</td>\n","      <td>(40.853144054034, -73.884973584878)</td>\n","      <td>6.0</td>\n","      <td>15.0</td>\n","      <td>391.0</td>\n","      <td>2012523.0</td>\n","      <td>Belmont</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>BAIT</td>\n","      <td>2790824</td>\n","      <td>PC7587967</td>\n","      <td>3</td>\n","      <td>1.018790e+09</td>\n","      <td>1</td>\n","      <td>1879</td>\n","      <td>44</td>\n","      <td>218</td>\n","      <td>WEST 108 STREET</td>\n","      <td>...</td>\n","      <td>Manhattan</td>\n","      <td>07/27/2020 09:00:58 AM</td>\n","      <td>Bait applied</td>\n","      <td>08/02/2020 10:38:02 PM</td>\n","      <td>(40.802061946684, -73.965555872021)</td>\n","      <td>7.0</td>\n","      <td>7.0</td>\n","      <td>195.0</td>\n","      <td>1056664.0</td>\n","      <td>Upper West Side-Manhattan Valley</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Initial</td>\n","      <td>13168406</td>\n","      <td>PC7593687</td>\n","      <td>1</td>\n","      <td>2.033290e+09</td>\n","      <td>2</td>\n","      <td>3329</td>\n","      <td>68</td>\n","      <td>3605</td>\n","      <td>BAINBRIDGE AVENUE</td>\n","      <td>...</td>\n","      <td>Bronx</td>\n","      <td>07/20/2020 08:02:26 AM</td>\n","      <td>Passed</td>\n","      <td>07/20/2020 03:04:24 PM</td>\n","      <td>(40.884917722321, -73.877656400647)</td>\n","      <td>7.0</td>\n","      <td>11.0</td>\n","      <td>43101.0</td>\n","      <td>2017848.0</td>\n","      <td>Norwood</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>Compliance</td>\n","      <td>13304268</td>\n","      <td>PC7747707</td>\n","      <td>2</td>\n","      <td>3.017740e+09</td>\n","      <td>3</td>\n","      <td>1774</td>\n","      <td>51</td>\n","      <td>685</td>\n","      <td>DEKALB AVENUE</td>\n","      <td>...</td>\n","      <td>Brooklyn</td>\n","      <td>12/09/2021 04:02:22 PM</td>\n","      <td>Passed</td>\n","      <td>12/13/2021 11:23:22 AM</td>\n","      <td>(40.6916477637, -73.949032715749)</td>\n","      <td>3.0</td>\n","      <td>36.0</td>\n","      <td>253.0</td>\n","      <td>3338637.0</td>\n","      <td>Bedford-Stuyvesant (West)</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>25 rows × 25 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f3d859d3-554a-4caa-8741-ec1c1587ef6c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f3d859d3-554a-4caa-8741-ec1c1587ef6c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f3d859d3-554a-4caa-8741-ec1c1587ef6c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-10ce43c9-e793-4982-be5a-96b34cbdfa96\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-10ce43c9-e793-4982-be5a-96b34cbdfa96')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-10ce43c9-e793-4982-be5a-96b34cbdfa96 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":9}],"source":["df.head(25)"]},{"cell_type":"markdown","metadata":{"id":"qwG8nycYURrY"},"source":["Removing an data entries that contain an NaN"]},{"cell_type":"code","execution_count":10,"metadata":{"id":"hn0iY7xNw6ND","executionInfo":{"status":"ok","timestamp":1733711991567,"user_tz":360,"elapsed":1720,"user":{"displayName":"Zach Martin","userId":"15224724189394128547"}}},"outputs":[],"source":["df = df.dropna()"]},{"cell_type":"markdown","metadata":{"id":"twYYnaA5UVjh"},"source":["Looking at the data entries for a particular address"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"75qpLCfkxwBz"},"outputs":[],"source":["house_number_to_search  =\"1770\"\n","street_name_to_search = \"DAVIDSON AVENUE\"\n","\n","result = df[(df['HOUSE_NUMBER'] == house_number_to_search) & (df['STREET_NAME'] == street_name_to_search)]\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":620},"executionInfo":{"elapsed":180,"status":"ok","timestamp":1733711765170,"user":{"displayName":"Divyansh Chamria","userId":"15997290894504102173"},"user_tz":360},"id":"tExVXEUKygjF","outputId":"9aef278a-1188-42bf-997f-c51fc8721f99"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"result"},"text/html":["\n","  <div id=\"df-a05ff088-414d-4ebc-8da0-6bec69ca9e9e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>INSPECTION_TYPE</th>\n","      <th>JOB_TICKET_OR_WORK_ORDER_ID</th>\n","      <th>JOB_ID</th>\n","      <th>JOB_PROGRESS</th>\n","      <th>BBL</th>\n","      <th>BORO_CODE</th>\n","      <th>BLOCK</th>\n","      <th>LOT</th>\n","      <th>HOUSE_NUMBER</th>\n","      <th>STREET_NAME</th>\n","      <th>...</th>\n","      <th>BOROUGH</th>\n","      <th>INSPECTION_DATE</th>\n","      <th>RESULT</th>\n","      <th>APPROVED_DATE</th>\n","      <th>LOCATION</th>\n","      <th>COMMUNITY BOARD</th>\n","      <th>COUNCIL DISTRICT</th>\n","      <th>CENSUS TRACT</th>\n","      <th>BIN</th>\n","      <th>NTA</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>8</th>\n","      <td>Initial</td>\n","      <td>11238904</td>\n","      <td>PC6543128</td>\n","      <td>1</td>\n","      <td>2.028610e+09</td>\n","      <td>2</td>\n","      <td>2861</td>\n","      <td>114</td>\n","      <td>1770</td>\n","      <td>DAVIDSON AVENUE</td>\n","      <td>...</td>\n","      <td>Bronx</td>\n","      <td>01/25/2012 02:45:24 PM</td>\n","      <td>Rat Activity</td>\n","      <td>01/26/2012 11:42:03 AM</td>\n","      <td>(40.848765924602, -73.912722919925)</td>\n","      <td>5.0</td>\n","      <td>14.0</td>\n","      <td>217.0</td>\n","      <td>2008369.0</td>\n","      <td>University Heights (South)-Morris Heights</td>\n","    </tr>\n","    <tr>\n","      <th>20271</th>\n","      <td>BAIT</td>\n","      <td>2435351</td>\n","      <td>PC6543487</td>\n","      <td>3</td>\n","      <td>2.028610e+09</td>\n","      <td>2</td>\n","      <td>2861</td>\n","      <td>114</td>\n","      <td>1770</td>\n","      <td>DAVIDSON AVENUE</td>\n","      <td>...</td>\n","      <td>Bronx</td>\n","      <td>12/31/2011 03:35:31 PM</td>\n","      <td>Bait applied</td>\n","      <td>01/03/2012 09:53:08 AM</td>\n","      <td>(40.848765924602, -73.912722919925)</td>\n","      <td>5.0</td>\n","      <td>14.0</td>\n","      <td>217.0</td>\n","      <td>2008369.0</td>\n","      <td>University Heights (South)-Morris Heights</td>\n","    </tr>\n","    <tr>\n","      <th>54912</th>\n","      <td>BAIT</td>\n","      <td>2522479</td>\n","      <td>PC6674947</td>\n","      <td>3</td>\n","      <td>2.028610e+09</td>\n","      <td>2</td>\n","      <td>2861</td>\n","      <td>114</td>\n","      <td>1770</td>\n","      <td>DAVIDSON AVENUE</td>\n","      <td>...</td>\n","      <td>Bronx</td>\n","      <td>12/18/2014 10:10:34 AM</td>\n","      <td>Bait applied</td>\n","      <td>12/19/2014 12:40:42 PM</td>\n","      <td>(40.848765924602, -73.912722919925)</td>\n","      <td>5.0</td>\n","      <td>14.0</td>\n","      <td>217.0</td>\n","      <td>2008369.0</td>\n","      <td>University Heights (South)-Morris Heights</td>\n","    </tr>\n","    <tr>\n","      <th>83170</th>\n","      <td>Initial</td>\n","      <td>13156487</td>\n","      <td>PC7596502</td>\n","      <td>1</td>\n","      <td>2.028610e+09</td>\n","      <td>2</td>\n","      <td>2861</td>\n","      <td>114</td>\n","      <td>1770</td>\n","      <td>DAVIDSON AVENUE</td>\n","      <td>...</td>\n","      <td>Bronx</td>\n","      <td>05/18/2020 08:55:40 AM</td>\n","      <td>Passed</td>\n","      <td>05/19/2020 12:17:17 PM</td>\n","      <td>(40.848765924602, -73.912722919925)</td>\n","      <td>5.0</td>\n","      <td>14.0</td>\n","      <td>217.0</td>\n","      <td>2008369.0</td>\n","      <td>University Heights (South)-Morris Heights</td>\n","    </tr>\n","    <tr>\n","      <th>109099</th>\n","      <td>Compliance</td>\n","      <td>13301690</td>\n","      <td>PC7764948</td>\n","      <td>2</td>\n","      <td>2.028610e+09</td>\n","      <td>2</td>\n","      <td>2861</td>\n","      <td>114</td>\n","      <td>1770</td>\n","      <td>DAVIDSON AVENUE</td>\n","      <td>...</td>\n","      <td>Bronx</td>\n","      <td>12/01/2021 03:33:51 PM</td>\n","      <td>Failed for Other R</td>\n","      <td>12/08/2021 10:45:00 AM</td>\n","      <td>(40.848765924602, -73.912722919925)</td>\n","      <td>5.0</td>\n","      <td>14.0</td>\n","      <td>217.0</td>\n","      <td>2008369.0</td>\n","      <td>University Heights (South)-Morris Heights</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 25 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a05ff088-414d-4ebc-8da0-6bec69ca9e9e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a05ff088-414d-4ebc-8da0-6bec69ca9e9e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a05ff088-414d-4ebc-8da0-6bec69ca9e9e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7579c7d1-9887-4c81-9e1d-c26f6ecd642b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7579c7d1-9887-4c81-9e1d-c26f6ecd642b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7579c7d1-9887-4c81-9e1d-c26f6ecd642b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["       INSPECTION_TYPE  JOB_TICKET_OR_WORK_ORDER_ID     JOB_ID  JOB_PROGRESS  \\\n","8              Initial                     11238904  PC6543128             1   \n","20271             BAIT                      2435351  PC6543487             3   \n","54912             BAIT                      2522479  PC6674947             3   \n","83170          Initial                     13156487  PC7596502             1   \n","109099      Compliance                     13301690  PC7764948             2   \n","\n","                 BBL  BORO_CODE  BLOCK  LOT HOUSE_NUMBER      STREET_NAME  \\\n","8       2.028610e+09          2   2861  114         1770  DAVIDSON AVENUE   \n","20271   2.028610e+09          2   2861  114         1770  DAVIDSON AVENUE   \n","54912   2.028610e+09          2   2861  114         1770  DAVIDSON AVENUE   \n","83170   2.028610e+09          2   2861  114         1770  DAVIDSON AVENUE   \n","109099  2.028610e+09          2   2861  114         1770  DAVIDSON AVENUE   \n","\n","        ...  BOROUGH         INSPECTION_DATE              RESULT  \\\n","8       ...    Bronx  01/25/2012 02:45:24 PM        Rat Activity   \n","20271   ...    Bronx  12/31/2011 03:35:31 PM        Bait applied   \n","54912   ...    Bronx  12/18/2014 10:10:34 AM        Bait applied   \n","83170   ...    Bronx  05/18/2020 08:55:40 AM              Passed   \n","109099  ...    Bronx  12/01/2021 03:33:51 PM  Failed for Other R   \n","\n","                 APPROVED_DATE                             LOCATION  \\\n","8       01/26/2012 11:42:03 AM  (40.848765924602, -73.912722919925)   \n","20271   01/03/2012 09:53:08 AM  (40.848765924602, -73.912722919925)   \n","54912   12/19/2014 12:40:42 PM  (40.848765924602, -73.912722919925)   \n","83170   05/19/2020 12:17:17 PM  (40.848765924602, -73.912722919925)   \n","109099  12/08/2021 10:45:00 AM  (40.848765924602, -73.912722919925)   \n","\n","       COMMUNITY BOARD COUNCIL DISTRICT CENSUS TRACT        BIN  \\\n","8                  5.0             14.0        217.0  2008369.0   \n","20271              5.0             14.0        217.0  2008369.0   \n","54912              5.0             14.0        217.0  2008369.0   \n","83170              5.0             14.0        217.0  2008369.0   \n","109099             5.0             14.0        217.0  2008369.0   \n","\n","                                              NTA  \n","8       University Heights (South)-Morris Heights  \n","20271   University Heights (South)-Morris Heights  \n","54912   University Heights (South)-Morris Heights  \n","83170   University Heights (South)-Morris Heights  \n","109099  University Heights (South)-Morris Heights  \n","\n","[5 rows x 25 columns]"]},"execution_count":14,"metadata":{},"output_type":"execute_result"}],"source":["result.head(5)"]},{"cell_type":"markdown","metadata":{"id":"fsMub6RCUBMQ"},"source":["Learning about the possible outputs for the results"]},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":89,"status":"ok","timestamp":1733712017805,"user":{"displayName":"Zach Martin","userId":"15224724189394128547"},"user_tz":360},"id":"6S6eyuJDzLzn","outputId":"4833fdfa-5093-44fc-a28b-ca8110c45a74"},"outputs":[{"output_type":"stream","name":"stdout","text":["['Passed' 'Rat Activity' 'Bait applied' 'Failed for Other R'\n"," 'Monitoring visit']\n"]}],"source":["unique_type = df['RESULT'].unique()\n","print(unique_type)"]},{"cell_type":"code","execution_count":12,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":141},"executionInfo":{"elapsed":173,"status":"error","timestamp":1733712018811,"user":{"displayName":"Zach Martin","userId":"15224724189394128547"},"user_tz":360},"id":"7VGBLkwHzbSj","outputId":"2e59465a-a273-408c-9884-4b629df8f4da"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'result' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-12-7074e4e63de6>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mresult\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'INSPECTION_TYPE'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'INSPECTION_DATE'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'result' is not defined"]}],"source":["result[['INSPECTION_TYPE', 'INSPECTION_DATE']].head(5)"]},{"cell_type":"code","execution_count":13,"metadata":{"id":"PytpB9bjMoBH","executionInfo":{"status":"ok","timestamp":1733712038625,"user_tz":360,"elapsed":86,"user":{"displayName":"Zach Martin","userId":"15224724189394128547"}}},"outputs":[],"source":["inspect_2024 = pd.to_datetime(df['INSPECTION_DATE'], format='%m/%d/%Y %I:%M:%S %p')"]},{"cell_type":"code","source":["inspect_2024.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"ehAMaOpYT__d","executionInfo":{"status":"ok","timestamp":1733712451159,"user_tz":360,"elapsed":82,"user":{"displayName":"Zach Martin","userId":"15224724189394128547"}},"outputId":"97cda84b-a141-4b2c-f536-26e33f4df438"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0   2010-08-30 15:23:11\n","1   2011-08-18 12:05:54\n","3   2019-02-07 12:48:34\n","4   2017-10-16 13:02:51\n","5   2019-06-20 16:02:23\n","Name: INSPECTION_DATE, dtype: datetime64[ns]"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>INSPECTION_DATE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2010-08-30 15:23:11</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2011-08-18 12:05:54</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2019-02-07 12:48:34</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2017-10-16 13:02:51</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2019-06-20 16:02:23</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> datetime64[ns]</label>"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["from datetime import datetime\n","\n","filtered_matrix = [row for row in inspect_2024 if row.year == 2017]"],"metadata":{"id":"OaYotUaXSoBm","executionInfo":{"status":"ok","timestamp":1733714881451,"user_tz":360,"elapsed":8773,"user":{"displayName":"Zach Martin","userId":"15224724189394128547"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","execution_count":52,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1733714881452,"user":{"displayName":"Zach Martin","userId":"15224724189394128547"},"user_tz":360},"id":"bKfNCpLqNLy4","outputId":"bfc73bc5-4a45-4d32-82ec-a62ab1ef7b77"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["233858"]},"metadata":{},"execution_count":52}],"source":["len(filtered_matrix)"]},{"cell_type":"code","source":["plt.plot([2020,2021,2022,2023],[240097,235665,25353,33934,48646,42417])"],"metadata":{"id":"ptAC_MfRcsk9"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Ll3Sha0hUL5B"},"source":["Setting up a debugging dataset that has 200 random points"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"blpmtgl20rN5"},"outputs":[],"source":["debugging_df = df.sample(n=10000, random_state=0)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":791},"executionInfo":{"elapsed":114,"status":"ok","timestamp":1733711772981,"user":{"displayName":"Divyansh Chamria","userId":"15997290894504102173"},"user_tz":360},"id":"Gr05gJpi0wEk","outputId":"f2466670-a008-4452-b914-1242a2a304b6"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"debugging_df"},"text/html":["\n","  <div id=\"df-e56f5e81-f012-40fd-bb1d-740d3fc5a981\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>INSPECTION_TYPE</th>\n","      <th>JOB_TICKET_OR_WORK_ORDER_ID</th>\n","      <th>JOB_ID</th>\n","      <th>JOB_PROGRESS</th>\n","      <th>BBL</th>\n","      <th>BORO_CODE</th>\n","      <th>BLOCK</th>\n","      <th>LOT</th>\n","      <th>HOUSE_NUMBER</th>\n","      <th>STREET_NAME</th>\n","      <th>...</th>\n","      <th>BOROUGH</th>\n","      <th>INSPECTION_DATE</th>\n","      <th>RESULT</th>\n","      <th>APPROVED_DATE</th>\n","      <th>LOCATION</th>\n","      <th>COMMUNITY BOARD</th>\n","      <th>COUNCIL DISTRICT</th>\n","      <th>CENSUS TRACT</th>\n","      <th>BIN</th>\n","      <th>NTA</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>536064</th>\n","      <td>BAIT</td>\n","      <td>2832593</td>\n","      <td>PC7756451</td>\n","      <td>4</td>\n","      <td>1.021750e+09</td>\n","      <td>1</td>\n","      <td>2175</td>\n","      <td>53</td>\n","      <td>200</td>\n","      <td>DYCKMAN STREET</td>\n","      <td>...</td>\n","      <td>Manhattan</td>\n","      <td>02/22/2022 09:34:21 AM</td>\n","      <td>Bait applied</td>\n","      <td>02/23/2022 01:06:57 PM</td>\n","      <td>(40.864879136848, -73.926863356194)</td>\n","      <td>12.0</td>\n","      <td>10.0</td>\n","      <td>287.0</td>\n","      <td>1064228.0</td>\n","      <td>Washington Heights (North)</td>\n","    </tr>\n","    <tr>\n","      <th>1859354</th>\n","      <td>Initial</td>\n","      <td>12315028</td>\n","      <td>PC6345551</td>\n","      <td>1</td>\n","      <td>1.010750e+09</td>\n","      <td>1</td>\n","      <td>1075</td>\n","      <td>29</td>\n","      <td>653</td>\n","      <td>10 AVENUE</td>\n","      <td>...</td>\n","      <td>Manhattan</td>\n","      <td>08/14/2017 10:37:45 AM</td>\n","      <td>Passed</td>\n","      <td>08/21/2017 06:03:46 PM</td>\n","      <td>(40.762229590327, -73.993585311625)</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>12902.0</td>\n","      <td>1026966.0</td>\n","      <td>Hell's Kitchen</td>\n","    </tr>\n","    <tr>\n","      <th>1212009</th>\n","      <td>Initial</td>\n","      <td>12697377</td>\n","      <td>PC6508362</td>\n","      <td>1</td>\n","      <td>1.014470e+09</td>\n","      <td>1</td>\n","      <td>1447</td>\n","      <td>41</td>\n","      <td>318</td>\n","      <td>EAST 73 STREET</td>\n","      <td>...</td>\n","      <td>Manhattan</td>\n","      <td>12/12/2019 03:40:16 PM</td>\n","      <td>Passed</td>\n","      <td>12/19/2019 09:47:21 AM</td>\n","      <td>(40.769190732098, -73.957211667445)</td>\n","      <td>8.0</td>\n","      <td>5.0</td>\n","      <td>12601.0</td>\n","      <td>1044894.0</td>\n","      <td>Upper East Side-Lenox Hill-Roosevelt Island</td>\n","    </tr>\n","    <tr>\n","      <th>712519</th>\n","      <td>Initial</td>\n","      <td>11877284</td>\n","      <td>PC6075406</td>\n","      <td>1</td>\n","      <td>1.008820e+09</td>\n","      <td>1</td>\n","      <td>882</td>\n","      <td>60</td>\n","      <td>138</td>\n","      <td>EAST 27 STREET</td>\n","      <td>...</td>\n","      <td>Manhattan</td>\n","      <td>10/12/2012 03:57:01 PM</td>\n","      <td>Passed</td>\n","      <td>10/15/2012 11:03:10 AM</td>\n","      <td>(40.741881542272, -73.982605898239)</td>\n","      <td>6.0</td>\n","      <td>2.0</td>\n","      <td>68.0</td>\n","      <td>1018151.0</td>\n","      <td>Gramercy</td>\n","    </tr>\n","    <tr>\n","      <th>1114648</th>\n","      <td>Initial</td>\n","      <td>12399641</td>\n","      <td>PC6753266</td>\n","      <td>1</td>\n","      <td>2.028420e+09</td>\n","      <td>2</td>\n","      <td>2842</td>\n","      <td>47</td>\n","      <td>110</td>\n","      <td>EAST 170 STREET</td>\n","      <td>...</td>\n","      <td>Bronx</td>\n","      <td>02/06/2018 12:16:54 PM</td>\n","      <td>Passed</td>\n","      <td>02/12/2018 10:25:59 AM</td>\n","      <td>(40.839348027763, -73.915449469958)</td>\n","      <td>4.0</td>\n","      <td>16.0</td>\n","      <td>22102.0</td>\n","      <td>2008084.0</td>\n","      <td>Mount Eden-Claremont (West)</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1664749</th>\n","      <td>Initial</td>\n","      <td>11239334</td>\n","      <td>PC6103880</td>\n","      <td>1</td>\n","      <td>1.019430e+09</td>\n","      <td>1</td>\n","      <td>1943</td>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>MORNINGSIDE AVENUE</td>\n","      <td>...</td>\n","      <td>Manhattan</td>\n","      <td>01/31/2012 10:24:37 AM</td>\n","      <td>Passed</td>\n","      <td>02/02/2012 11:01:09 AM</td>\n","      <td>(40.805690769701, -73.958102001827)</td>\n","      <td>10.0</td>\n","      <td>9.0</td>\n","      <td>20102.0</td>\n","      <td>1081519.0</td>\n","      <td>Harlem (South)</td>\n","    </tr>\n","    <tr>\n","      <th>2285746</th>\n","      <td>Initial</td>\n","      <td>13369401</td>\n","      <td>PC7843187</td>\n","      <td>1</td>\n","      <td>1.015630e+09</td>\n","      <td>1</td>\n","      <td>1563</td>\n","      <td>1</td>\n","      <td>401</td>\n","      <td>EAST   83 STREET</td>\n","      <td>...</td>\n","      <td>Manhattan</td>\n","      <td>04/18/2022 01:37:00 PM</td>\n","      <td>Rat Activity</td>\n","      <td>04/19/2022 02:47:52 PM</td>\n","      <td>(40.774787317085, -73.950456375083)</td>\n","      <td>8.0</td>\n","      <td>5.0</td>\n","      <td>13604.0</td>\n","      <td>1050449.0</td>\n","      <td>Upper East Side-Yorkville</td>\n","    </tr>\n","    <tr>\n","      <th>1770224</th>\n","      <td>Initial</td>\n","      <td>12211346</td>\n","      <td>PC6793548</td>\n","      <td>1</td>\n","      <td>2.031130e+09</td>\n","      <td>2</td>\n","      <td>3113</td>\n","      <td>37</td>\n","      <td>2297</td>\n","      <td>SOUTHERN BOULEVARD</td>\n","      <td>...</td>\n","      <td>Bronx</td>\n","      <td>11/15/2016 03:55:06 PM</td>\n","      <td>Passed</td>\n","      <td>11/21/2016 03:10:04 PM</td>\n","      <td>(40.850495618006, -73.882491300966)</td>\n","      <td>6.0</td>\n","      <td>15.0</td>\n","      <td>393.0</td>\n","      <td>2013028.0</td>\n","      <td>Belmont</td>\n","    </tr>\n","    <tr>\n","      <th>1018612</th>\n","      <td>Initial</td>\n","      <td>12649611</td>\n","      <td>PC6947507</td>\n","      <td>1</td>\n","      <td>2.027920e+09</td>\n","      <td>2</td>\n","      <td>2792</td>\n","      <td>7</td>\n","      <td>1654</td>\n","      <td>WEEKS AVENUE</td>\n","      <td>...</td>\n","      <td>Bronx</td>\n","      <td>08/14/2019 03:20:01 PM</td>\n","      <td>Passed</td>\n","      <td>08/23/2019 12:34:18 PM</td>\n","      <td>(40.843170969101, -73.907695634859)</td>\n","      <td>4.0</td>\n","      <td>15.0</td>\n","      <td>22902.0</td>\n","      <td>2007357.0</td>\n","      <td>Mount Eden-Claremont (West)</td>\n","    </tr>\n","    <tr>\n","      <th>2113301</th>\n","      <td>Compliance</td>\n","      <td>12843959</td>\n","      <td>PC7118587</td>\n","      <td>12</td>\n","      <td>3.032180e+09</td>\n","      <td>3</td>\n","      <td>3218</td>\n","      <td>58</td>\n","      <td>677</td>\n","      <td>HART STREET</td>\n","      <td>...</td>\n","      <td>Brooklyn</td>\n","      <td>03/22/2013 10:46:22 AM</td>\n","      <td>Passed</td>\n","      <td>03/27/2013 10:47:58 AM</td>\n","      <td>(40.698947074387, -73.925672049852)</td>\n","      <td>4.0</td>\n","      <td>34.0</td>\n","      <td>423.0</td>\n","      <td>3073152.0</td>\n","      <td>Bushwick (West)</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10000 rows × 25 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e56f5e81-f012-40fd-bb1d-740d3fc5a981')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e56f5e81-f012-40fd-bb1d-740d3fc5a981 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e56f5e81-f012-40fd-bb1d-740d3fc5a981');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ae8fe830-0cea-45e7-81d6-52f2c135ad99\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ae8fe830-0cea-45e7-81d6-52f2c135ad99')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ae8fe830-0cea-45e7-81d6-52f2c135ad99 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_e821505b-1a94-443b-81a5-366e60000110\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('debugging_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e821505b-1a94-443b-81a5-366e60000110 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('debugging_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["        INSPECTION_TYPE  JOB_TICKET_OR_WORK_ORDER_ID     JOB_ID  JOB_PROGRESS  \\\n","536064             BAIT                      2832593  PC7756451             4   \n","1859354         Initial                     12315028  PC6345551             1   \n","1212009         Initial                     12697377  PC6508362             1   \n","712519          Initial                     11877284  PC6075406             1   \n","1114648         Initial                     12399641  PC6753266             1   \n","...                 ...                          ...        ...           ...   \n","1664749         Initial                     11239334  PC6103880             1   \n","2285746         Initial                     13369401  PC7843187             1   \n","1770224         Initial                     12211346  PC6793548             1   \n","1018612         Initial                     12649611  PC6947507             1   \n","2113301      Compliance                     12843959  PC7118587            12   \n","\n","                  BBL  BORO_CODE  BLOCK  LOT HOUSE_NUMBER         STREET_NAME  \\\n","536064   1.021750e+09          1   2175   53          200      DYCKMAN STREET   \n","1859354  1.010750e+09          1   1075   29          653           10 AVENUE   \n","1212009  1.014470e+09          1   1447   41          318      EAST 73 STREET   \n","712519   1.008820e+09          1    882   60          138      EAST 27 STREET   \n","1114648  2.028420e+09          2   2842   47          110     EAST 170 STREET   \n","...               ...        ...    ...  ...          ...                 ...   \n","1664749  1.019430e+09          1   1943    1           20  MORNINGSIDE AVENUE   \n","2285746  1.015630e+09          1   1563    1          401    EAST   83 STREET   \n","1770224  2.031130e+09          2   3113   37         2297  SOUTHERN BOULEVARD   \n","1018612  2.027920e+09          2   2792    7         1654        WEEKS AVENUE   \n","2113301  3.032180e+09          3   3218   58          677         HART STREET   \n","\n","         ...    BOROUGH         INSPECTION_DATE        RESULT  \\\n","536064   ...  Manhattan  02/22/2022 09:34:21 AM  Bait applied   \n","1859354  ...  Manhattan  08/14/2017 10:37:45 AM        Passed   \n","1212009  ...  Manhattan  12/12/2019 03:40:16 PM        Passed   \n","712519   ...  Manhattan  10/12/2012 03:57:01 PM        Passed   \n","1114648  ...      Bronx  02/06/2018 12:16:54 PM        Passed   \n","...      ...        ...                     ...           ...   \n","1664749  ...  Manhattan  01/31/2012 10:24:37 AM        Passed   \n","2285746  ...  Manhattan  04/18/2022 01:37:00 PM  Rat Activity   \n","1770224  ...      Bronx  11/15/2016 03:55:06 PM        Passed   \n","1018612  ...      Bronx  08/14/2019 03:20:01 PM        Passed   \n","2113301  ...   Brooklyn  03/22/2013 10:46:22 AM        Passed   \n","\n","                  APPROVED_DATE                             LOCATION  \\\n","536064   02/23/2022 01:06:57 PM  (40.864879136848, -73.926863356194)   \n","1859354  08/21/2017 06:03:46 PM  (40.762229590327, -73.993585311625)   \n","1212009  12/19/2019 09:47:21 AM  (40.769190732098, -73.957211667445)   \n","712519   10/15/2012 11:03:10 AM  (40.741881542272, -73.982605898239)   \n","1114648  02/12/2018 10:25:59 AM  (40.839348027763, -73.915449469958)   \n","...                         ...                                  ...   \n","1664749  02/02/2012 11:01:09 AM  (40.805690769701, -73.958102001827)   \n","2285746  04/19/2022 02:47:52 PM  (40.774787317085, -73.950456375083)   \n","1770224  11/21/2016 03:10:04 PM  (40.850495618006, -73.882491300966)   \n","1018612  08/23/2019 12:34:18 PM  (40.843170969101, -73.907695634859)   \n","2113301  03/27/2013 10:47:58 AM  (40.698947074387, -73.925672049852)   \n","\n","        COMMUNITY BOARD COUNCIL DISTRICT CENSUS TRACT        BIN  \\\n","536064             12.0             10.0        287.0  1064228.0   \n","1859354             4.0              3.0      12902.0  1026966.0   \n","1212009             8.0              5.0      12601.0  1044894.0   \n","712519              6.0              2.0         68.0  1018151.0   \n","1114648             4.0             16.0      22102.0  2008084.0   \n","...                 ...              ...          ...        ...   \n","1664749            10.0              9.0      20102.0  1081519.0   \n","2285746             8.0              5.0      13604.0  1050449.0   \n","1770224             6.0             15.0        393.0  2013028.0   \n","1018612             4.0             15.0      22902.0  2007357.0   \n","2113301             4.0             34.0        423.0  3073152.0   \n","\n","                                                 NTA  \n","536064                    Washington Heights (North)  \n","1859354                               Hell's Kitchen  \n","1212009  Upper East Side-Lenox Hill-Roosevelt Island  \n","712519                                      Gramercy  \n","1114648                  Mount Eden-Claremont (West)  \n","...                                              ...  \n","1664749                               Harlem (South)  \n","2285746                    Upper East Side-Yorkville  \n","1770224                                      Belmont  \n","1018612                  Mount Eden-Claremont (West)  \n","2113301                              Bushwick (West)  \n","\n","[10000 rows x 25 columns]"]},"execution_count":20,"metadata":{},"output_type":"execute_result"}],"source":["debugging_df"]},{"cell_type":"markdown","metadata":{"id":"JzWxwQK0UbHz"},"source":["Sorting the debugging dataset by the inspection date"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CzkcO9-j1V8r"},"outputs":[],"source":["debugging_df['INSPECTION_DATE'] = pd.to_datetime(debugging_df['INSPECTION_DATE'], format='%m/%d/%Y %I:%M:%S %p')\n","debugging_df_sorted = debugging_df.sort_values(by='INSPECTION_DATE')\n","debugging_df_sorted.reset_index(drop=True, inplace=True)\n","\n"]},{"cell_type":"markdown","metadata":{"id":"845v_9BiUfAl"},"source":["Sorting the entire dataset by inspection date"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JDE1ipxP9Fth"},"outputs":[],"source":["df['INSPECTION_DATE'] = pd.to_datetime(df['INSPECTION_DATE'], format='%m/%d/%Y %I:%M:%S %p')\n","df_sorted = df.sort_values(by='INSPECTION_DATE')\n","df_sorted.reset_index(drop=True, inplace=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":774},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1733711787717,"user":{"displayName":"Divyansh Chamria","userId":"15997290894504102173"},"user_tz":360},"id":"E1IrRUQp1qHG","outputId":"9143a73e-cf2a-4254-a662-9051b306be95"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"debugging_df_sorted"},"text/html":["\n","  <div id=\"df-4343bb2e-f29d-48e9-b611-3a6e4ba5f8ef\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>INSPECTION_TYPE</th>\n","      <th>JOB_TICKET_OR_WORK_ORDER_ID</th>\n","      <th>JOB_ID</th>\n","      <th>JOB_PROGRESS</th>\n","      <th>BBL</th>\n","      <th>BORO_CODE</th>\n","      <th>BLOCK</th>\n","      <th>LOT</th>\n","      <th>HOUSE_NUMBER</th>\n","      <th>STREET_NAME</th>\n","      <th>...</th>\n","      <th>BOROUGH</th>\n","      <th>INSPECTION_DATE</th>\n","      <th>RESULT</th>\n","      <th>APPROVED_DATE</th>\n","      <th>LOCATION</th>\n","      <th>COMMUNITY BOARD</th>\n","      <th>COUNCIL DISTRICT</th>\n","      <th>CENSUS TRACT</th>\n","      <th>BIN</th>\n","      <th>NTA</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Initial</td>\n","      <td>11175666</td>\n","      <td>PC7323296</td>\n","      <td>1</td>\n","      <td>4.001330e+09</td>\n","      <td>4</td>\n","      <td>133</td>\n","      <td>70</td>\n","      <td>39-88</td>\n","      <td>HEISER STREET</td>\n","      <td>...</td>\n","      <td>Queens</td>\n","      <td>2009-09-14 12:06:37</td>\n","      <td>Failed for Other R</td>\n","      <td>09/15/2009 04:09:47 PM</td>\n","      <td>(40.746616406385, -73.915167014802)</td>\n","      <td>2.0</td>\n","      <td>26.0</td>\n","      <td>169.0</td>\n","      <td>4001129.0</td>\n","      <td>Sunnyside</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Initial</td>\n","      <td>11175744</td>\n","      <td>PC6099540</td>\n","      <td>1</td>\n","      <td>1.022260e+09</td>\n","      <td>1</td>\n","      <td>2226</td>\n","      <td>11</td>\n","      <td>119</td>\n","      <td>VERMILYEA AVENUE</td>\n","      <td>...</td>\n","      <td>Manhattan</td>\n","      <td>2009-09-15 12:16:15</td>\n","      <td>Rat Activity</td>\n","      <td>09/16/2009 02:09:45 PM</td>\n","      <td>(40.866420876592, -73.921492606038)</td>\n","      <td>12.0</td>\n","      <td>10.0</td>\n","      <td>293.0</td>\n","      <td>1064840.0</td>\n","      <td>Inwood</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Initial</td>\n","      <td>11490323</td>\n","      <td>PC6967350</td>\n","      <td>1</td>\n","      <td>3.009580e+09</td>\n","      <td>3</td>\n","      <td>958</td>\n","      <td>26</td>\n","      <td>622A</td>\n","      <td>PRESIDENT STREET</td>\n","      <td>...</td>\n","      <td>Brooklyn</td>\n","      <td>2009-09-17 13:26:19</td>\n","      <td>Rat Activity</td>\n","      <td>09/21/2009 10:58:51 AM</td>\n","      <td>(40.676232062966, -73.982103942276)</td>\n","      <td>6.0</td>\n","      <td>39.0</td>\n","      <td>133.0</td>\n","      <td>3020235.0</td>\n","      <td>Park Slope</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Initial</td>\n","      <td>11176185</td>\n","      <td>PC6963361</td>\n","      <td>1</td>\n","      <td>3.005200e+09</td>\n","      <td>3</td>\n","      <td>520</td>\n","      <td>1</td>\n","      <td>389</td>\n","      <td>COLUMBIA STREET</td>\n","      <td>...</td>\n","      <td>Brooklyn</td>\n","      <td>2009-09-18 09:28:58</td>\n","      <td>Failed for Other R</td>\n","      <td>09/21/2009 10:40:39 AM</td>\n","      <td>(40.678706359903, -74.005728826485)</td>\n","      <td>6.0</td>\n","      <td>38.0</td>\n","      <td>59.0</td>\n","      <td>3008322.0</td>\n","      <td>Carroll Gardens-Cobble Hill-Gowanus-Red Hook</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Initial</td>\n","      <td>11176449</td>\n","      <td>PC6060598</td>\n","      <td>1</td>\n","      <td>1.008768e+09</td>\n","      <td>1</td>\n","      <td>876</td>\n","      <td>21</td>\n","      <td>36</td>\n","      <td>GRAMERCY PARK</td>\n","      <td>...</td>\n","      <td>Manhattan</td>\n","      <td>2009-09-21 13:35:28</td>\n","      <td>Rat Activity</td>\n","      <td>09/22/2009 09:06:18 AM</td>\n","      <td>(40.737827869085, -73.985031882266)</td>\n","      <td>6.0</td>\n","      <td>2.0</td>\n","      <td>50.0</td>\n","      <td>1017954.0</td>\n","      <td>Gramercy</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9995</th>\n","      <td>BAIT</td>\n","      <td>2990259</td>\n","      <td>PC8291583</td>\n","      <td>4</td>\n","      <td>1.018200e+09</td>\n","      <td>1</td>\n","      <td>1820</td>\n","      <td>17</td>\n","      <td>131</td>\n","      <td>WEST  110 STREET</td>\n","      <td>...</td>\n","      <td>Manhattan</td>\n","      <td>2024-10-13 11:03:50</td>\n","      <td>Bait applied</td>\n","      <td>10/18/2024 03:02:00 PM</td>\n","      <td>(40.798750339185, -73.953656612366)</td>\n","      <td>10.0</td>\n","      <td>9.0</td>\n","      <td>216.0</td>\n","      <td>1054921.0</td>\n","      <td>Harlem (South)</td>\n","    </tr>\n","    <tr>\n","      <th>9996</th>\n","      <td>Initial</td>\n","      <td>13964374</td>\n","      <td>PC8426846</td>\n","      <td>1</td>\n","      <td>1.007410e+09</td>\n","      <td>1</td>\n","      <td>741</td>\n","      <td>39</td>\n","      <td>306</td>\n","      <td>WEST   18 STREET</td>\n","      <td>...</td>\n","      <td>Manhattan</td>\n","      <td>2024-10-15 10:15:12</td>\n","      <td>Rat Activity</td>\n","      <td>10/16/2024 07:11:00 AM</td>\n","      <td>(40.742470233192, -74.001255850843)</td>\n","      <td>4.0</td>\n","      <td>3.0</td>\n","      <td>83.0</td>\n","      <td>1013082.0</td>\n","      <td>Chelsea-Hudson Yards</td>\n","    </tr>\n","    <tr>\n","      <th>9997</th>\n","      <td>Initial</td>\n","      <td>13964083</td>\n","      <td>PC8388809</td>\n","      <td>1</td>\n","      <td>4.067978e+09</td>\n","      <td>4</td>\n","      <td>6797</td>\n","      <td>7501</td>\n","      <td>71-18</td>\n","      <td>162 STREET</td>\n","      <td>...</td>\n","      <td>Queens</td>\n","      <td>2024-10-15 10:36:37</td>\n","      <td>Passed</td>\n","      <td>10/18/2024 10:39:18 AM</td>\n","      <td>(40.729816786928, -73.807198539052)</td>\n","      <td>8.0</td>\n","      <td>24.0</td>\n","      <td>122704.0</td>\n","      <td>4449880.0</td>\n","      <td>Pomonok-Electchester-Hillcrest</td>\n","    </tr>\n","    <tr>\n","      <th>9998</th>\n","      <td>Compliance</td>\n","      <td>13965593</td>\n","      <td>PC8397846</td>\n","      <td>2</td>\n","      <td>1.011290e+09</td>\n","      <td>1</td>\n","      <td>1129</td>\n","      <td>59</td>\n","      <td>50</td>\n","      <td>WEST   77 STREET</td>\n","      <td>...</td>\n","      <td>Manhattan</td>\n","      <td>2024-10-16 10:00:16</td>\n","      <td>Rat Activity</td>\n","      <td>10/17/2024 10:41:48 AM</td>\n","      <td>(40.780435956063, -73.975933802171)</td>\n","      <td>7.0</td>\n","      <td>6.0</td>\n","      <td>161.0</td>\n","      <td>1028822.0</td>\n","      <td>Upper West Side (Central)</td>\n","    </tr>\n","    <tr>\n","      <th>9999</th>\n","      <td>BAIT</td>\n","      <td>2991014</td>\n","      <td>PC8379998</td>\n","      <td>4</td>\n","      <td>3.027360e+09</td>\n","      <td>3</td>\n","      <td>2736</td>\n","      <td>36</td>\n","      <td>51</td>\n","      <td>WITHERS STREET</td>\n","      <td>...</td>\n","      <td>Brooklyn</td>\n","      <td>2024-10-18 10:41:39</td>\n","      <td>Bait applied</td>\n","      <td>10/18/2024 02:27:06 PM</td>\n","      <td>(40.716809801682, -73.950680006534)</td>\n","      <td>1.0</td>\n","      <td>33.0</td>\n","      <td>515.0</td>\n","      <td>3000000.0</td>\n","      <td>Williamsburg</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10000 rows × 25 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4343bb2e-f29d-48e9-b611-3a6e4ba5f8ef')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4343bb2e-f29d-48e9-b611-3a6e4ba5f8ef button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4343bb2e-f29d-48e9-b611-3a6e4ba5f8ef');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-23911b92-997d-4f1e-bc10-4173ac359cc6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-23911b92-997d-4f1e-bc10-4173ac359cc6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-23911b92-997d-4f1e-bc10-4173ac359cc6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_09ba04ba-eec1-4103-a4c7-267c9f233c83\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('debugging_df_sorted')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_09ba04ba-eec1-4103-a4c7-267c9f233c83 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('debugging_df_sorted');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"text/plain":["     INSPECTION_TYPE  JOB_TICKET_OR_WORK_ORDER_ID     JOB_ID  JOB_PROGRESS  \\\n","0            Initial                     11175666  PC7323296             1   \n","1            Initial                     11175744  PC6099540             1   \n","2            Initial                     11490323  PC6967350             1   \n","3            Initial                     11176185  PC6963361             1   \n","4            Initial                     11176449  PC6060598             1   \n","...              ...                          ...        ...           ...   \n","9995            BAIT                      2990259  PC8291583             4   \n","9996         Initial                     13964374  PC8426846             1   \n","9997         Initial                     13964083  PC8388809             1   \n","9998      Compliance                     13965593  PC8397846             2   \n","9999            BAIT                      2991014  PC8379998             4   \n","\n","               BBL  BORO_CODE  BLOCK   LOT HOUSE_NUMBER       STREET_NAME  \\\n","0     4.001330e+09          4    133    70        39-88     HEISER STREET   \n","1     1.022260e+09          1   2226    11          119  VERMILYEA AVENUE   \n","2     3.009580e+09          3    958    26         622A  PRESIDENT STREET   \n","3     3.005200e+09          3    520     1          389   COLUMBIA STREET   \n","4     1.008768e+09          1    876    21           36     GRAMERCY PARK   \n","...            ...        ...    ...   ...          ...               ...   \n","9995  1.018200e+09          1   1820    17          131  WEST  110 STREET   \n","9996  1.007410e+09          1    741    39          306  WEST   18 STREET   \n","9997  4.067978e+09          4   6797  7501        71-18        162 STREET   \n","9998  1.011290e+09          1   1129    59           50  WEST   77 STREET   \n","9999  3.027360e+09          3   2736    36           51    WITHERS STREET   \n","\n","      ...    BOROUGH     INSPECTION_DATE              RESULT  \\\n","0     ...     Queens 2009-09-14 12:06:37  Failed for Other R   \n","1     ...  Manhattan 2009-09-15 12:16:15        Rat Activity   \n","2     ...   Brooklyn 2009-09-17 13:26:19        Rat Activity   \n","3     ...   Brooklyn 2009-09-18 09:28:58  Failed for Other R   \n","4     ...  Manhattan 2009-09-21 13:35:28        Rat Activity   \n","...   ...        ...                 ...                 ...   \n","9995  ...  Manhattan 2024-10-13 11:03:50        Bait applied   \n","9996  ...  Manhattan 2024-10-15 10:15:12        Rat Activity   \n","9997  ...     Queens 2024-10-15 10:36:37              Passed   \n","9998  ...  Manhattan 2024-10-16 10:00:16        Rat Activity   \n","9999  ...   Brooklyn 2024-10-18 10:41:39        Bait applied   \n","\n","               APPROVED_DATE                             LOCATION  \\\n","0     09/15/2009 04:09:47 PM  (40.746616406385, -73.915167014802)   \n","1     09/16/2009 02:09:45 PM  (40.866420876592, -73.921492606038)   \n","2     09/21/2009 10:58:51 AM  (40.676232062966, -73.982103942276)   \n","3     09/21/2009 10:40:39 AM  (40.678706359903, -74.005728826485)   \n","4     09/22/2009 09:06:18 AM  (40.737827869085, -73.985031882266)   \n","...                      ...                                  ...   \n","9995  10/18/2024 03:02:00 PM  (40.798750339185, -73.953656612366)   \n","9996  10/16/2024 07:11:00 AM  (40.742470233192, -74.001255850843)   \n","9997  10/18/2024 10:39:18 AM  (40.729816786928, -73.807198539052)   \n","9998  10/17/2024 10:41:48 AM  (40.780435956063, -73.975933802171)   \n","9999  10/18/2024 02:27:06 PM  (40.716809801682, -73.950680006534)   \n","\n","     COMMUNITY BOARD COUNCIL DISTRICT CENSUS TRACT        BIN  \\\n","0                2.0             26.0        169.0  4001129.0   \n","1               12.0             10.0        293.0  1064840.0   \n","2                6.0             39.0        133.0  3020235.0   \n","3                6.0             38.0         59.0  3008322.0   \n","4                6.0              2.0         50.0  1017954.0   \n","...              ...              ...          ...        ...   \n","9995            10.0              9.0        216.0  1054921.0   \n","9996             4.0              3.0         83.0  1013082.0   \n","9997             8.0             24.0     122704.0  4449880.0   \n","9998             7.0              6.0        161.0  1028822.0   \n","9999             1.0             33.0        515.0  3000000.0   \n","\n","                                               NTA  \n","0                                        Sunnyside  \n","1                                           Inwood  \n","2                                       Park Slope  \n","3     Carroll Gardens-Cobble Hill-Gowanus-Red Hook  \n","4                                         Gramercy  \n","...                                            ...  \n","9995                                Harlem (South)  \n","9996                          Chelsea-Hudson Yards  \n","9997                Pomonok-Electchester-Hillcrest  \n","9998                     Upper West Side (Central)  \n","9999                                  Williamsburg  \n","\n","[10000 rows x 25 columns]"]},"execution_count":23,"metadata":{},"output_type":"execute_result"}],"source":["debugging_df_sorted"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1733711787845,"user":{"displayName":"Divyansh Chamria","userId":"15997290894504102173"},"user_tz":360},"id":"xp7JJktKXc2k","outputId":"bcbf877d-b62c-405f-8944-6690e597daed"},"outputs":[{"name":"stdout","output_type":"stream","text":["(9559,)\n"]}],"source":["debugging_df_sorted['STREET_ADDRESS'] = debugging_df_sorted['HOUSE_NUMBER'].astype(str) + ' ' + debugging_df_sorted['STREET_NAME']\n","unique_address = debugging_df_sorted['STREET_ADDRESS'].unique()\n","print(unique_address.shape)"]},{"cell_type":"markdown","metadata":{"id":"3BdsjKLnHK9q"},"source":["Here, we were looking at street address data in order to implement data embedding to not lose this data. However, this resulted in our model overfitting a lot."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":211},"executionInfo":{"elapsed":141,"status":"error","timestamp":1733711892527,"user":{"displayName":"Divyansh Chamria","userId":"15997290894504102173"},"user_tz":360},"id":"r1wYIhUcIotj","outputId":"e6e3b05e-ca2c-470e-bfaa-aeb2086c8dde"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'LabelEncoder' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-29-7c110589da8d>\u001b[0m in \u001b[0;36m<cell line: 5>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# Integer encode the address data\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mlabel_encoder\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mLabelEncoder\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0minteger_encoded_address\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlabel_encoder\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit_transform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdebugging_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'STREET_ADDRESS'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minteger_encoded_address\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'LabelEncoder' is not defined"]}],"source":["debugging_df['STREET_ADDRESS'] = debugging_df['HOUSE_NUMBER'].astype(str) + ' ' + debugging_df['STREET_NAME']\n","\n","# Integer encode the address data\n","\n","label_encoder = LabelEncoder()\n","integer_encoded_address = label_encoder.fit_transform(debugging_df['STREET_ADDRESS'])\n","print(integer_encoded_address)\n","\n","# define vocabulary size (number of unique words)\n","vocab_size = len(label_encoder.classes_)\n","\n","# define the length of the embedded vector for each word\n","embedding_dim = 8  # Adjust this based on your data and model complexity\n","\n","# create an embedding layer\n","embedding_layer = Embedding(vocab_size, embedding_dim, input_length=1)\n","\n","# Reshape the encoded addresses to fit the embedding layer (samples, word_index)\n","integer_encoded_address = integer_encoded_address.reshape(-1, 1)\n","\n","# Get the embedded representations of the addresses\n","embedded_addresses = embedding_layer(tf.constant(integer_encoded_address))\n","print(\"Embedded Addresses Shape:\", embedded_addresses.shape)\n","\n","# Convert the embedded addresses to a NumPy array and add to the DataFrame\n","embedded_addresses_array = embedded_addresses.numpy()\n","\n","# Create new columns in the dataframe for the embedding vectors\n","for i in range(embedding_dim):\n","    debugging_df[f'ADDRESS_EMBEDDING_{i}'] = embedded_addresses_array[:, 0, i]\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qsy8I_zROGYX"},"outputs":[],"source":["print(debugging_df.columns)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"d_uHAh5sIOtj"},"outputs":[],"source":["df[df['HOUSE_NUMBER'] == 5 and df['STREET_NAME'] == 'DAVIDSON AVENUE']"]},{"cell_type":"markdown","metadata":{"id":"L98p1XO3UkyG"},"source":["Saving the sorted debugging and working dataset into pickle"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"krZ6Zq8v2uyP"},"outputs":[],"source":["debugging_df_sorted.to_pickle('debugging_dataset_beforeadding.pkl')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EDAR98yy9V6d"},"outputs":[],"source":["df_sorted.to_pickle(\"full_sorted_dataset_beforeadding.pkl\")"]},{"cell_type":"markdown","metadata":{"id":"OZcsFGpgDJJD"},"source":["When trying to merge datasets, we ran into using too much RAM and the google colab notebook crashing. We are removing columns here that will likely be irrelevant features to training."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EaoyoKmzDE8G"},"outputs":[],"source":["df_sorted.drop('JOB_TICKET_OR_WORK_ORDER_ID', axis=1, inplace=True)\n","df_sorted.drop('JOB_ID', axis=1, inplace=True)\n","df_sorted.drop('JOB_PROGRESS', axis=1, inplace=True)\n","df_sorted.drop('APPROVED_DATE', axis=1, inplace=True)\n","df_sorted.drop('BIN', axis=1, inplace=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Cu2Cj9ZCDJd4"},"outputs":[],"source":["df_sorted.columns"]},{"cell_type":"markdown","metadata":{"id":"9IVuqGxyEd4S"},"source":["In order to try to prevent crashing, we are also removing all entries were Inspection_Type = BAIT because we are only going to predict results from Compliance and Initial Inspections."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"D-CD8STFFdEI"},"outputs":[],"source":["rows, columns = df_sorted.shape\n","print(\"Number of rows:\", rows)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FYHZYdlEFDWa"},"outputs":[],"source":["df_sorted = df_sorted[df_sorted['INSPECTION_TYPE'] != 'BAIT']"]},{"cell_type":"markdown","metadata":{"id":"vVbKRfy39LSq"},"source":["We have decided we will be predicting an outcome of \"Passed\", \"Rat Activity\", or \"Failed for other R(easons)\" so we are removing entries with a result of Bait Applied and Monitoring visit."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YeQJag6Q72ja"},"outputs":[],"source":["#df_sorted = df_sorted[df_sorted['RESULT'] != 'Failed for Other R']\n","df_sorted = df_sorted[df_sorted['RESULT'] != 'Bait applied']\n","df_sorted = df_sorted[df_sorted['RESULT'] != 'Monitoring visit']\n","\n"]},{"cell_type":"markdown","metadata":{"id":"EmxSPsAjPeAO"},"source":["Despite this we still had issues with RAM, so we are randomly reducing the dataset."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fypPAYrJFff2"},"outputs":[],"source":["rows, columns = df_sorted.shape\n","half_rows = rows // 3\n","df_sorted = df_sorted.sample(half_rows, random_state=0)\n","\n"]},{"cell_type":"markdown","metadata":{"id":"-sFFAF8NaK1X"},"source":["# *Adding more features to our dataset *"]},{"cell_type":"markdown","metadata":{"id":"DnKSHeT5aQWi"},"source":["# Sanitation Data"]},{"cell_type":"markdown","metadata":{"id":"ibugPbbHT2QI"},"source":["Loading sanitation data into notebook"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"txcbiv-iw7dU"},"outputs":[],"source":["#https://drive.google.com/file/d/1-aWaWfF9vwPGJOJe5PgOfOSkQMIFJ5d-/view?usp=drive_link\n","file_id = '1-aWaWfF9vwPGJOJe5PgOfOSkQMIFJ5d-'\n","destination = 'DSNY_Monthly_Tonnage_Data_20241022.csv'\n","# Use the correct URL format for gdown\n","gdown.download(f'https://drive.google.com/uc?id={file_id}', destination, quiet=False)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ACri41iacaLh"},"outputs":[],"source":["pwd"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4L2csvCotBnz"},"outputs":[],"source":["sanitationdf = pd.read_csv(\"DSNY_Monthly_Tonnage_Data_20241022.csv\")\n","\n"]},{"cell_type":"markdown","metadata":{"id":"QI67bk7zXcnU"},"source":["Boro code matches between the two datasets\n","*   In sanitation = BOROUGH_ID\n","*   In rodent inspection = BORO_CODE\n","\n","1.   Manhattan\n","2.   Bronx\n","3.   Brooklyn\n","4.   Queens\n","5.   Staten Island\n","\n","Dates also need to be matched up:\n","* In sanitation = yyyy/mm\n","* In rodent inspection = yyyy-mm-dd\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"_vPkNFOpZ5ka"},"source":["Adding a temp column with the date format to maindf that matches the sanitation df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YeQP74aqT4FI"},"outputs":[],"source":["df_sorted['Year_Month'] = pd.to_datetime(df_sorted['INSPECTION_DATE']).dt.strftime('%Y/%m')"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":1120,"status":"ok","timestamp":1733711879582,"user":{"displayName":"Divyansh Chamria","userId":"15997290894504102173"},"user_tz":360},"id":"JuMF7ncrKZ6z","colab":{"base_uri":"https://localhost:8080/","height":718},"outputId":"a23a3a02-d835-4c11-e614-56660255bda7"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x800 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAA20AAAK9CAYAAAC3u4RRAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguMCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy81sbWrAAAACXBIWXMAAA9hAAAPYQGoP6dpAAD5t0lEQVR4nOzdeXhU1f3H8fedmcwkk2QSCAlhCRAIkABCUBTRqlgREG3V4gaoYNEqghYVqVoX3EqloLhbN7AV1OpPrXWhIu6CKEtEhACBIFGWkEAyCUlmJnPv749pRoaETclGPq/nyRPmnnPvPXPvZJjvnHO+x7Asy0JERERERESaJFtjN0BERERERET2T0GbiIiIiIhIE6agTUREREREpAlT0CYiIiIiItKEKWgTERERERFpwhS0iYiIiIiINGEK2kRERERERJowBW0iIiIiIiJNmII2ERERERGRJkxBm4iIRNi8eTOGYTB37tzwtmnTpmEYRuM1ShpMly5dGDdu3AHr1LxGZs6c2TCNEhFp4RS0iYg0kI0bN3L11VfTtWtXoqOj8Xg8nHzyyTz88MNUVlY2dvMa3Zo1a5g2bRqbN29utDasWrWKK664gvT0dKKjo4mLiyM7O5upU6eyadOmRmtXSzV37lwMwwj/OBwOOnTowLhx4/jxxx9r1R88eHBE/b1/MjMzI+p+++23XHDBBXTu3Jno6Gg6dOjAmWeeyaOPPhpRzzAMJk2aVGf7XnvtNQzD4OOPPw5vGzduHHFxcRH1Pv744/22a98fEZG6OBq7ASIiLcE777zDhRdeiMvl4vLLL6dPnz74/X4+//xzbr75Zr777juefvrpxm7mft1+++3ccsst9XqONWvWcPfddzN48GC6dOlSr+eqyzPPPMOECRNo06YNY8aMITMzk+rqalavXs0//vEPZs+eTWVlJXa7vcHb1tLdc889pKenU1VVxZdffsncuXP5/PPPWb16NdHR0RF1O3bsyPTp02sdIyEhIfzvxYsXc/rpp9OpUyeuuuoqUlNTKSgo4Msvv+Thhx/muuuuO6Ltz8rK4p///GfEtltvvZW4uDj+/Oc/H9FzicjRSUGbiEg9y8/P55JLLqFz5858+OGHtGvXLlw2ceJE8vLyeOeddxq0TRUVFbjd7kOu73A4cDiO3v8yFi9ezIQJEzj55JN5++23iY+PjyifNWsW999//0GPc7jXVQ7NWWedxYABAwC48soradOmDQ888ABvvfUWF110UUTdhIQELr300gMe7/777ychIYGvv/6axMTEiLLCwsIj2naAtm3b1mrTX//6V9q0aXPQtoqIgIZHiojUuxkzZlBeXs5zzz0XEbDVyMjI4I9//GP4cXV1Nffeey/dunXD5XLRpUsXbrvtNnw+X619n3jiCXr37o3L5aJ9+/ZMnDiRkpKSiDqDBw+mT58+LF++nFNPPRW3281tt90GQElJCePGjSMhIYHExETGjh1ba3+oe05bzbCxN998kz59+uByuejduzcLFiyIqPf9999z7bXX0rNnT2JiYkhKSuLCCy+MGAY5d+5cLrzwQgBOP/308FCxvYedvffee5xyyinExsYSHx/P2WefzXfffRdxru3bt3PFFVfQsWNHXC4X7dq149xzzz3okMu7774bwzCYN29erYANIDo6mnvvvTeil+1A17WwsJDx48fTtm1boqOj6devHy+88ELEMWuGzO39HKHuOYU1Q+42bdrEsGHDiI2NpX379txzzz1YlhWxv2mazJ49m969exMdHU3btm25+uqr2b17d0Q9y7K477776NixI263m9NPP73W9TwUDz30EJ07dyYmJobTTjuN1atXh8vmzJmDYRisXLmy1n5/+ctfsNvtdQ5zPJhTTjkFCA05/jk2btxI7969awVsACkpKT/rmCIi9eno/dpURKSJ+M9//kPXrl056aSTDqn+lVdeyQsvvMAFF1zATTfdxNKlS5k+fTpr167ljTfeCNebNm0ad999N0OGDGHChAmsW7eOJ598kq+//povvviCqKiocN3i4mLOOussLrnkEi699FLatm2LZVmce+65fP7551xzzTVkZWXxxhtvMHbs2EN+bp9//jmvv/461157LfHx8TzyyCOMHDmSLVu2kJSUBMDXX3/N4sWLueSSS+jYsSObN2/mySefZPDgwaxZswa3282pp57K9ddfzyOPPMJtt91GVlYWQPj3P//5T8aOHcuwYcN44IEHqKio4Mknn+RXv/oVK1euDA+nHDlyJN999x3XXXcdXbp0obCwkIULF7Jly5b9DrmsqKjgww8/ZPDgwXTs2PGQn/v+rmtlZSWDBw8mLy+PSZMmkZ6ezquvvsq4ceMoKSmJCNAPRzAYZPjw4Zx44onMmDGDBQsWcNddd1FdXc0999wTrnf11Vczd+5crrjiCq6//nry8/N57LHHWLlyZcTr4s477+S+++5jxIgRjBgxghUrVjB06FD8fv8ht+kf//gHZWVlTJw4kaqqKh5++GF+/etf8+2339K2bVsuuOACJk6cyLx58+jfv3/EvvPmzWPw4MF06NDhsK9FTRDeqlWrOq9TUVFRre0xMTHExsYC0LlzZ5YsWcLq1avp06fPYZ9fRKTBWSIiUm9KS0stwDr33HMPqX5OTo4FWFdeeWXE9ilTpliA9eGHH1qWZVmFhYWW0+m0hg4dagWDwXC9xx57zAKs559/PrzttNNOswDrqaeeijjmm2++aQHWjBkzwtuqq6utU045xQKsOXPmhLffdddd1r7/ZQCW0+m08vLywtu++eYbC7AeffTR8LaKiopaz3PJkiUWYP3jH/8Ib3v11VctwProo48i6paVlVmJiYnWVVddFbF9+/btVkJCQnj77t27LcD629/+Vut8B1LT5smTJ9cqKy4utnbu3Bn+8fl84bL9XdfZs2dbgPXiiy+Gt/n9fmvQoEFWXFyc5fV6LcuyrI8++qjO55ufn1/r+o8dO9YCrOuuuy68zTRN6+yzz7acTqe1c+dOy7Is67PPPrMAa968eRHHXLBgQcT2mtfP2WefbZmmGa532223WYA1duzYA16zmjbGxMRYP/zwQ3j70qVLLcC64YYbwttGjRpltW/fPuJ1umLFilrPsS5z5syxAOuDDz6wdu7caRUUFFivvfaalZycbLlcLqugoCCifs09qevn6quvDtd7//33LbvdbtntdmvQoEHW1KlTrf/+97+W3++v1QbAmjhxYp3tq+s1O3bsWCs2NvaAz8uyLKt3797WaaeddtB6IiKWZVkaHikiUo+8Xi9AnUPu6vLuu+8CcOONN0Zsv+mmmwDCc98++OAD/H4/kydPxmb76a38qquuwuPx1Joj53K5uOKKK2qdy+FwMGHChPA2u91+WEkYhgwZQrdu3cKP+/bti8fjici0GBMTE/53IBCguLiYjIwMEhMTWbFixUHPsXDhQkpKShg1ahRFRUXhH7vdzsCBA/noo4/C53E6nXz88ce1hgIeSM092jfjH0DXrl1JTk4O/7z11lsR5fu7rqmpqYwaNSq8LSoqiuuvv57y8nI++eSTQ27bvvbOYlgzPNXv9/PBBx8A8Oqrr5KQ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iztHR0ezYMECxo4dy8CBA3nvvfd45513uO2228LDHk877TSuvvpqpk+fTk5ODkOHDiUqKooNGzbw6quv8vDDD3PBBReQnJzMlClTmD59Oueccw4jRoxg5cqVvPfee7Rp0+ZQbisQGlr6q1/9igkTJuDz+Zg9ezZJSUlMnTq1Vt3LL788PC/wSCwoffPNN3PhhRcyd+5crrnmmvD20tLS/faq1pz3uuuuo6KigvPPPz98nxcvXswrr7xCly5dIpLL3HLLLbz66quceuqpXH311WRmZrJ161bmzp3Ltm3bmDNnTq3zBAIB7rvvvlrbW7duzbXXXvtLn7qItESNl7hSRKRlWb9+vXXVVVdZXbp0sZxOpxUfH2+dfPLJ1qOPPmpVVVWF6wUCAevuu++20tPTraioKCstLc269dZbI+rUeOyxx6zMzEwrKirKatu2rTVhwgRr9+7dEXVOO+00q3fv3nW2qbi42Lrsssssj8djJSQkWJdddpm1cuXKQ075X1cq9M6dO0ekjN+9e7d1xRVXWG3atLHi4uKsYcOGWbm5ubXqWZZlPfPMM1bXrl0tu91eK5X6Rx99ZA0bNsxKSEiwoqOjrW7dulnjxo2zli1bZlmWZRUVFVkTJ060MjMzrdjYWCshIcEaOHCg9a9//avO516XlStXWpdffrnVqVMny+l0WrGxsVbfvn2tm266KWJpA8s68HXdsWNH+Dk7nU7rmGOOqTO9/c6dO62RI0dabrfbatWqlXX11Vdbq1evrjPlf2xsrLVx40Zr6NChltvtttq2bWvdddddEan0azz99NPWcccdZ8XExFjx8fHWMcccY02dOtXaunVruE4wGLTuvvtuq127dlZMTIw1ePBga/Xq1XXel33VpPz/29/+Zs2aNctKS0uzXC6Xdcopp1jffPNNnfts27bNstvtVo8ePQ547L3VpPz/+uuva5UFg0GrW7duVrdu3azq6mrLsg6c8n/v1+97771n/f73v7cyMzOtuLg4y+l0WhkZGdZ1111n7dixo9a5fvjhB+vKK6+0OnToYDkcDqt169bWOeecY3355Ze16tYsz1DXT7du3cL1lPJfRA6HYVmHMeZDREREGty4ceN47bXX6hy62VwUFRXRrl077rzzTu64447Gbo6ISLOiOW0iIiJS7+bOnUswGOSyyy5r7KaIiDQ7mtMmIiIi9ebDDz9kzZo13H///Zx33nm1MkuKiMjBKWgTERGRenPPPfewePFiTj755COemVREpKXQnDYREREREZEmTHPaREREREREmjAFbSIiIiIiIk2Y5rQ1INM02bp1K/Hx8RiG0djNERERERGRRmJZFmVlZbRv3x6b7cB9aQraGtDWrVtJS0tr7GaIiIiIiEgTUVBQQMeOHQ9YR0FbA4qPjwdCN8bj8TRya1qOQCDA+++/z9ChQ4mKimrs5sg+dH+aLt2bpk33p2nT/WnadH+arpZ0b7xeL2lpaeEY4UAUtDWgmiGRHo9HQVsDCgQCuN1uPB7PUf/H3xzp/jRdujdNm+5P06b707Tp/jRdLfHeHMq0KSUiERERERERacIUtImIiIiIiDRhCtpERERERESaMM1pExEREZFmx7IsqqurCQaDh71vIBDA4XBQVVX1s/aX+nM03Ru73Y7D4TgiS30paBMRERGRZsXv97Nt2zYqKip+1v6WZZGamkpBQYHWzm1ijrZ743a7adeuHU6n8xcdR0GbiIiIiDQbpmmSn5+P3W6nffv2OJ3Ow/5wb5om5eXlxMXFHXRRY2lYR8u9sSwLv9/Pzp07yc/Pp3v37r/o+ShoExEREZFmw+/3Y5omaWlpuN3un3UM0zTx+/1ER0c368DgaHQ03ZuYmBiioqL4/vvvw8/p52reV0JEREREWqTm/oFeWoYj9TrVq11ERERERKQJU9AmIiIiIiLShCloExERERERacIUtImIiIiINAPjxo3DMAwMwyAqKor09HSmTp1KVVVVuE5N+b4/L7/8crjOM888Q79+/YiLiyMxMZH+/fszffr0iPOcd955tc7/8ccfYxgGJSUlAMydO5fExMSIOl26dNlvGwzDYNy4cUfykrQYyh4pIiIiItJMDB8+nDlz5hAIBFi+fDljx47FMAweeOCBcJ05c+YwfPjwiP1qgqvnn3+eyZMn88gjj3Daaafh8/lYtWoVq1evPiLt+/rrr8OLYi9evJiRI0eybt06PB4PEMqoKIdPQZuIiIiISDPhcrlITU0FIC0tjSFDhrBw4cKIoC0xMTFcZ19vvfUWF110EePHjw9v69279xFrX3JycvjfrVu3BiAlJaVWj5wcHg2PFBERERFphlavXs3ixYtxOp2HvE9qaipffvkl33//fT22TI40BW0iIiIiIs3E22+/TVxcHNHR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uHHjmvR0nX3bK4dPQZuIiIiItEimaZG73cvSTcXkbvdimoc2CuyXGD58ONu2bWPbtm0sWrQIh8PBOeecc1jHiIuLIykpqZ5aeOQ1t/Y2RQraRERERKTFyfnByw3/+oYbX/mGP7/xLTe+8g2TX8lh+fe76vW8LpeL1NRUUlNTyc7O5pZbbqGgoICdO3eG6/zpT3+iR48euN1uunbtyh133BGRBX3atGnhIYLTpk3jhRde4N///ne4B+/jjz+u89wLFizgV7/6FYmJiSQlJXHOOeewcePGcPnmzZsxDIOXX36Zk046iejoaPr06cMnn3wSrvPxxx9jGAbvvPMOffv2JTo6mhNPPJHVq1fv9znv3d4azz77LFlZWURHR5OZmckTTzwRUf7VV1/Rv39/oqOjGTBgACtXrjzYpT2qKWgTERERkRZl+fe7efDDzXy31Ysn2kHHVm480Q6+21rK/e+srffArUZ5eTkvvvgiGRkZET1R8fHxzJ07lzVr1vDwww/zzDPP8NBDD9V5jClTpnDRRRdF9OCddNJJddbds2cPN954I8uWLWPRokXYbDbOP//88NpoNW6++WZuuukmVq5cyaBBg/jNb35DcXFxrTqzZs3i66+/Jjk5md/85jcRgeWBzJs3jzvvvJP777+ftWvX8pe//IU77riDF154IXxdfvvb39KrVy+WL1/OtGnTmDJlyiEd+2jVJBbXFhERERFpCKZp8Y8l3+OtqiY9ORabEerDiHU5cDvtfL+rgn8s/p7+aa2w2YyDHO3wvf3228TFxQGhIKpdu3a8/fbbEQtJ33777eF/d+nShSlTpvDyyy8zderUWseLi4sjJiYGn89HamrqAc89cuTIiMfPP/88ycnJrFmzJiJj+qRJk8J1n3zySRYsWMBzzz0Xcf677rqLM888E4AXXniBjh078sYbb3DRRRcd9BrcddddzJo1i9/97ndAaD3kNWvW8Pe//53LLruM1157DdM0ee6554iOjqZ379788MMPTJgw4aDHPlqpp01EREREWoz1hWVs3FlOm9goDCMyKDMMg+Q4FxsKy1lfWFYv5z/99NPJyckhJyeHr776imHDhnHWWWfx/fffh+u88sornHzyyaSmphIXF8ftt9/Oli1bfvG5N2zYwKhRo+jatSsej4cuXboA1Dr2oEGDwv92OBwMGDCAtWvX7rdO69at6dmzZ606ddmzZw8bN25k/PjxxMXFhX/uu+++8FDN9evXh4de1nW+lkg9bSIiIiLSYpRWBPBVm7SOjqqzPDrKTlG5j9KKQxvqd7hiY2PJyMgIP3722WdJSEjgmWee4b777mPJkiWMGTOGu+++m2HDhpGQkMDLL7/MrFmzfvG5f/Ob39C5c2eeeeYZ2rdvj2ma9OnTB7/f/4uPfajKy8sBeOaZZxg4cGBEmd1ub7B2NDfqaRMRERGRFiPBHYXLYaOq2qyzvCoQxOmwk+CuO6g70gzDwGazUVlZCcDixYvp3Lkzf/7znxkwYADdu3eP6IWri9PpJBgMHrBOcXEx69at4/bbb+eMM84gKyuL3bt311n3yy+/DP+7urqa5cuXk5WVtd86u3fvZv369bXq1KVt27a0b9+eTZs2kZGREfGTnp4OQI8ePVi1ahVVVVV1nq8lUk+biIiIiLQYPVLi6ZYcx7c/lBDvdkYMkbQsi53lPvq0T6BHSny9nN/n87F9+3YgFOw89thjlJeX85vf/AaA7t27s2XLFl5++WWOP/543nnnHd54440DHrNLly7897//Zd26dSQlJZGQkEBUVGTQ2apVK5KSknj66adp164dW7Zs4ZZbbqnzeI8//jjdu3cnKyuLhx56iN27d/P73/8+os4999xDUlISbdu25c9//jNt2rQ55LXi7r77bq6//noSEhIYPnw4Pp+PZcuWsXv3biZPnswFF1zA/fffz1VXXcWtt97K5s2bmTlz5iEd+2ilnjYRERERaTFsNoPLB3XGE+1gS3Ele3zVBE2LPb5qvt9VQUJMFJef1LlekpBAKO1+u3btaNeuHQMHDuTrr7/m1VdfZfDgwQD89re/5YYbbmDSpElkZ2ezePFi7rjjjgMe86qrrqJnz54MGDCA5ORkvvjii1p1bDYbL7/8MsuXL6dPnz7ccMMN/O1vf6vzeH/961/561//Sr9+/fj888956623aNOmTa06f/zjHznuuOPYvn07//nPf3A6nYd0Da688kqeffZZ5syZwzHHHMNpp53G3Llzwz1tcXFx/Pvf/+bbb7+lf//+/PnPf+aBBx44pGMfrQzLsup/FUEBwOv1kpCQQGlpKR6Pp7Gb02IEAgHeffddRowYUetbJ2l8uj9Nl+5N06b707Tp/tSfqqoq8vPzSU9Pj0hUcThM0+TTNT/wf6uK2LhzD/7q0JDI7ilxXH5SZ47r3PoIt7p52Lx5M+np6axcubLWumo1Pv74Y04//XR2795NYmLiEW+DaZp4vV48Hk9ERs3m6kCv18OJDTQ8UkRERERanOyOHn6V2YG8oj2UVgRIcEfRIyW+3nrYRH4JBW0iIiIi0iLZbAaZqRr9JE2fgjYREREREaFLly4cbObU4MGDD1pHjrzmP1BURERERETkKKagTUREREREpAlT0CYiIiIiItKEKWgTERERERFpwhS0iYiIiIiINGEK2kRERERERJowBW0iIiIiIk3c3LlzSUxMDD+eNm0a2dnZv+iYmzdvxjAMcnJy9lunoqKCkSNH4vF4MAyDkpKSX3TOI61Lly7Mnj27sZtR7xS0iYiIiEjLZJmw4zvY/EXot2nW6+nGjRuHYRi1fvLy8g6678UXX8z69evrtX11eeGFF/jss89YvHgx27ZtIyEhoV7Ocfzxx+N2u0lISODss8/m7bffjqizb9DaGObOnRu+ZzabjXbt2nHxxRezZcuWej+3gjYRERERaXHsW5dhvP4HeONqeHty6PfrV8GWpfV63uHDh7Nt27aIn/T09IPuFxMTQ0pKSr22rS4bN24kKyuLPn36kJqaimEYh32MYDCIuZ+AeMqUKVx99dVcfPHFrFq1ii+//JITTzyR888/n8cee+yXNv9n8fv9+y3zeDxs27aNH3/8kf/7v/9j3bp1XHjhhfXeJgVtIiIiItKyFCwl5tP7YfsqiE6AxM6h39tWwft/rtfAzeVykZqaGvFjt9t58MEHOeaYY4iNjSUtLY1rr72W8vLy8H6H0tP07LPPkpWVRXR0NJmZmTzxxBMR5V999RX9+/cnOjqaAQMGsHLlygMeb/DgwcyaNYtPP/0UwzAYPHgwALt37+byyy+nVatWuN1uzjrrLDZs2FCrrW+99Ra9evXC5XLV2Rv15ZdfMmvWLP72t78xZcoUMjIyyMrK4o477uCPf/wjN954IwUFBXz88cdcccUVlJaWhnu6pk2bFj5ORUUFv//974mPj6dTp048/fTTEecpKCjgoosuIjExkdatW3PuueeyefPmcPm4ceM477zzuP/++2nfvj09e/bc7zUxDIPU1FTatWvHSSedxPjx4/nqq6/wer0HvJa/lII2EREREWk5TBPjq2cwfKXQKh2ccWCzh363TofKUvj6mXof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yiuvcP/999eqf/HFF7N69WoWLFjABx98AEBCQgI9evTg1FNPZdu2bcTGxgLw9ttvU1FRwcUXX3y4l/aoo542ERERqTcVK1ZSOGMGVWvW7NOjsYbv/3I3Kz6Yz/rd6zEt9bxJw/BtyMO/aRO21q0xDCOizDAMHElJ+DZuxLchr17O//bbbxMXF0d0dDTHHHMMhYWF3HzzzeHyDh06MGXKFLKzs+natSvXXXcdw4cP51//+hcQCnCcTidut5vU1FRSU1PrDKYATNNk7ty5XHrppQBccsklfP755+Tn54fr3Hfffdx000388Y9/pEePHhx//PHh+XI1wWBiYiKpqal1Bod2u51LLrmE+fPnh7ctWrSIkpISRo4cWat+TEwMcXFxOByOcPtjYmI46aST6NmzJy+++GK47pw5c7jwwgsPayjm0UpBm4iIiBxxpmWyrjiXvOcepXL3Thyd0rC53Rh2O2WOavJi97BzRz65z8zm9k9u45bPbiGnMKexmy0tgOktDfX47mdelxEdjeX3Y3pL6+X8p59+Ojk5OSxdupSxY8dyxRVXRAQ3wWCQe++9l2OOOYbWrVsTFxfHf//7X7Zs2XLY51q4cCF79uxhxIgRALRp04YzzzyT559/HoDCwkK2bt3KGWec8Yue05gxY/j444/ZunUrAPPmzePss88+7IyRV155JXPnzgVgx44dvPfee/z+97//RW07WihoExERkSMqpzCHWz67hUdeu5nCNSvYZC8hd/c6Sv1eSv1eNpVspDxQTkVCNB2LLbrsspNbnMvMZTMVuEm9s3kSMJxOrP1kbLSqqjCcTmyehHo5f2xsLBkZGfTr14/nn3+epUuXRszZ+tvf/sbDDz/Mn/70Jz766CNycnIYNmwYfr//sM/13HPPsWvXLmJiYnA4HDgcDt59911eeOEFTNM8YslBjj/+eLp168bLL79MZWUlb7zxBmPGjDns41x++eVs2rSJr776innz5pGens4pp5xyRNrY3CloExERkSMmpzCHmctmsrZ4LUnVLmJMO5YrinJ/ORtL8thcmk/ADBDjiMFyRmEPmCT4HaTFp+H1eXkp9yUNlZR65eqegbNrV8xdu7AsK6LMsiyqi4txdeuGq3tGvbfFZrNx2223cfvtt1NZWQnAF198wbnnnsull15Kv3796Nq1a0S6fACn00kwGDzgsYuLi/n3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mTJgCplJmZT5y9havpUyfxlZSVlMGTClXnr4RESkedHwSBERafEisjgakeuiGYZR71kcs1Oy6Zvct8Hm0omISPOioE1ERFq8Q8niWFxVXK9ZHG2GTWn9RUSkTvoKT0REWry9szjWRVkcRUSkMSloExGRFq8mi2NRZRGWZUWU1WRx7JrYVVkcRUSkUShoExGRFk9ZHEVEpCnT/z4iIiIoi6OIiDRdSkQiIiLyP8riKCIiTZGCNhERkb0oi6OIiDQ1CtpEREQOwLRM9byJiEijUtAmIiKyHzmFOczPnU9+ST5+04/T5iQ9MZ3RmaM1x01ERBqMvioUERGpQ05hDjOXzWRt8VrinfF0iOtAvDOe3OJcZi6bSU5hTmM3UUREWggFbSIiIvswLZP5ufMp9ZXSKb4T7ig3NsOGO8pNWnwaXp+Xl3JfwrTMxm6qiIi0AAraRERE9pFXkkd+ST7JMckYhhFRZhgGbWLasKlkE3kleY3UQhERaUkUtImIiOzD6/PiN/1EO6LrLHc5XPhNP16ft4FbJiIiLZGCNhERkX14XB6cNidV1VV1lvuqfThtTjwuTwO3TEREWiIFbSIiIvvISMwgPTGdosoiLMuKKLMsi6LKIromdiUjMaORWigiIi2JgjYREZF92AwbozNH43F5KCgroCJQQdAKUhGooKCsAI/Lw6jMUVqvTUREGoT+txEREalDdko2UwZMITMpkzJ/GVvLt1LmLyMrKYspA6ZonTYREWkwWlxbRERkP7JTsumb3Je8kjy8Pi8el4eMxAz1sImISINS0CYiInIANsNGj1Y9GrsZIiLSgumrQhERERERkSZMQZuIiIiIiEgTpqBNRERERESkCVPQJiIiIiIi0oQpaBMREREREWnCFLSJiIiIiIg0YQraREREREREmjAFbSIiIiIiIk2YgjYREREREZEmTEGbiIiIiIhIE6agTUREREREpAlT0CYiIiIiItKEKWgTERERERFpwhS0iYiIiIiINGEK2kRERERERJowBW0iIiIiIiJNWKMGbdOnT+f4448nPj6elJQUzjvvPNatWxcu37VrF9dddx09e/YkJiaGTp06cf3111NaWhpxnC1btnD22WfjdrtJSUnh5ptvprq6OqLOxx9/zLHHHovL5SIjI4O5c+fWas/jjz9Oly5diI6OZuDAgXz11VcR5VVVVUycOJGkpCTi4uIYOXIkO3bsOHIXREREREREZB+NGrR98sknTJw4kS+//JKFCxcSCAQYOnQoe/bsAWDr1q1s3bqVmTNnsnr1aubOncuCBQsYP358+BjBYJCzzz4bv9/P4sWLeeGFF5g7dy533nlnuE5+fj5nn302p59+Ojk5OUyePJkrr7yS//73v+E6r7zyCjfeeCN33XUXK1asoF+/fgwbNozCwsJwnRtuuIH//Oc/vPrqq3zyySds3bqV3/3udw1wpUREpCkwLZP1u9ezbPsy1u9ej2mZjd0kERFpARyNefIFCxZEPJ47dy4pKSksX76cU089lT59+vB///d/4fJu3bpx//33c+mll1JdXY3D4eD9999nzZo1fPDBB7Rt25bs7Gzuvfde/vSnPzFt2jScTidPPfUU6enpzJo1C4CsrCw+//xzHnroIYYNGwbAgw8+yFVXXcUVV1wBwFNPPcU777zD888/zy233EJpaSnPPfcc8+fP59e//jUAc+bMISsriy+//JITTzyxIS6ZiIg0kpzCHObnzie/JB+/6cdpc5KemM7ozNFkp2Q3dvNEROQo1qhB275qhj22bt36gHU8Hg8OR6jpS5Ys4ZhjjqFt27bhOsOGDWPChAl899139O/fnyVLljBkyJCI4wwbNozJkycD4Pf7Wb58Obfeemu43GazMWTIEJYsWQLA8uXLCQQCEcfJzMykU6dOLFmypM6gzefz4fP5wo+9Xi8AgUCAQCBwSNdEfrmaa61r3jTp/jRdujc/+Xbntzyy8hG8fi9totvgcrjwVfvYWLyR2V/P5vr+13NM8jEN2ibdn6ZN96dp0/1pulrSvTmc59hkgjbTNJk8eTInn3wyffr0qbNOUVER9957L3/4wx/C27Zv3x4RsAHhx9u3bz9gHa/XS2VlJbt37yYYDNZZJzc3N3wMp9NJYmJirTo159nX9OnTufvuu2ttf//993G73XXuI/Vn4cKFjd0EOQDdn6ZL9ybkfM4PTSrw/+8HQo+roeDrAgooaJR26f40bbo/TZvuT9PVEu5NRUXFIddtMkHbxIkTWb16NZ9//nmd5V6vl7PPPptevXoxbdq0hm3cz3Trrbdy4403hh97vV7S0tIYOnQoHo+nEVvWsgQCARYuXMiZZ55JVFRUYzdH9qH703Tp3oTkleRx7+J7iXPGERMVU6u8MlBJub+cO066g4zEjAZrl+5P06b707Tp/jRdLene1IzCOxRNImibNGkSb7/9Np9++ikdO3asVV5WVsbw4cOJj4/njTfeiLiBqamptbI81mR0TE1NDf/eN8vjjh078Hg8xMTEYLfbsdvtddbZ+xh+v5+SkpKI3ra96+zL5XLhcrlqbY+KijrqX4RNka5706b703S19HuzJ7iHPdYeEqMSCRrBWuX2KDt7fHvYE9zTKNeppd+fpk73p2nT/Wm6WsK9OZzn16jZIy3LYtKkSbzxxht8+OGHpKen16rj9XoZOnQoTqeTt956i+jo6IjyQYMG8e2330ZkeVy4cCEej4devXqF6yxatChiv4ULFzJo0CAAnE4nxx13XEQd0zRZtGhRuM5xxx1HVFRURJ1169axZcuWcB0RETn6eFwenDYnVdVVdZb7qn04bU48Lo2gEBGR+tGoPW0TJ05k/vz5/Pvf/yY+Pj48NywhIYGYmJhwwFZRUcGLL76I1+sNdyMmJydjt9sZOnQovXr14rLLLmPGjBls376d22+/nYkTJ4Z7ua655hoee+wxpk6dyu9//3s+/PBD/vWvf/HOO++E23LjjTcyduxYBgwYwAknnMDs2bPZs2dPOJtkQkIC48eP58Ybb6R169Z4PB6uu+46Bg0apMyRIiJHsYzEDNIT08ktziXNkYZhGOEyy7IoqiwiKymrQYdGiohIy9KoQduTTz4JwODBgyO2z5kzh3HjxrFixQqWLl0KQEZG5H+G+fn5dOnSBbvdzttvv82ECRMYNGgQsbGxjB07lnvuuSdcNz09nXfeeYcbbriBhx9+mI4dO/Lss8+G0/0DXHzxxezcuZM777yT7du3k52dzYIFCyKSkzz00EPYbDZGjhyJz+dj2LBhPPHEE0f6soiISBNiM2yMzhzNzGUzKSgroE3MT9kjiyqL8Lg8jMochc1o1MErIiJyFGvUoM2yrAOWDx48+KB1ADp37sy777570GOtXLnygHUmTZrEpEmT9lseHR3N448/zuOPP37QNomIyNEjOyWbKQOmhNdpK64qxmlzkpWUxajMUVqnTURE6lWTSEQiIiLS1GWnZNM3uS95JXl4fV48Lg8ZiRnqYTtKmZapey0iTYaCNhERkUNkM2z0aNWjsZsh9SynMCfcq+o3/ThtTtIT0xmdOVq9qiLSKPSVkYiIiMj/5BTmMHPZTNYWryXeGU+HuA7EO+PJLc5l5rKZ5BTmNHYTRaQFUtAmIiIiQmhI5Pzc+ZT6SukU3wl3lBubYcMd5SYtPg2vz8tLuS9hWmZjN1VEWhgNjxQREREB8kryyC/JJzkmOWJpBwDDMGgT04ZNJZvIK8mre5isacLOtVBZAlFat09EjhwFbSIiIvuz94fwmERIzgKbBqkcrbw+L37TT7Qjus5yl8NFcVUxXp+3duGWpfDV01C0Dqp9EBUPqX+EH5ZB+qB6brmIHO0UtImIiNRl3w/hDhe06Qkn/AE6DWzs1kk98Lg8OG1OqqqrcEe5a5X7qn04bU48rn160bYshff/HAru49uCIwaqq0NlH94DZ07Ta0ZEfhF9XSgiIrKvmg/h276B6ARI7Bz6vW1VaPuWpY3dQqkHGYkZpCemU1RZVGudWMuyKKosomtiVzISM34qMM1QcF9ZAq27gjMObHZwxobKK73w9TOhevuwTJOqdeup+Pprqtatx6qjjogIqKdNREQk0r4fwmvmNjnjoHUs7MoPfQjveLyGSh5lbIaN0ZmjmblsJgVlBbSJaYPL4cJX7aOosgiPy8OozFGR67XtXBvqjY1v+9NrZW9xybAzN1Svbe/w5ooVK9n94ov41q/B8vkwXC5cPXrR6tJLcR/bvwGerYg0J/rfRkREZG8H+hBuGBCf8tOHcDnqZKdkM2XAFDKTMinzl7G1fCtl/jKykrKYMmBK7XXaKkv+N3w2pu4DOmJC5ZUl4U0VK1ZSeO8dVH31IfbKH4gydmCv/IGqrz6i8N47qFixsr6enog0U+ppExER2dshfQgvjPgQLg2oAZLDZKdk0ze5L3kleXh9XjwuDxmJGZE9bDViEkPzHasrQ72x+6quDJXHJAKhIZG7n3mY4PbvifKYGI5osNkwTJMoRxWBHd+z+5lHiHn8OQz15IrI/yhoExER2dthfgiXBtSAyWFshq3utP77Ss4KtWHbqtDw2X17Z8t3QrusUD3At349vrXf4nCbGDXz3gBsdgxnLI7oPfhyv8W3fj3RmZlH8BmJSHOmr3BERET2VvMhvKwQ9klGgWWFtidnhj+ESwNpqslhbLZQ0BiTEJrv6C8HMwj+PaHymAQ4/qpwb6C55VssXxWG01Xn4QyXC6uqEnPLtw31DESkGVDQJiIisrf9fggvDz2OSYz4EC4NYL8ZGuOgdTpUlu43Q2OD6DQQht4P7fpCVSmUfA81a7n9+o6IXkBblIlhB8usI2kJoe2GPVRPRKSGhkeKiIjsq+ZDeHgoXmFoKF77fqGATWtuNazDSQ6zV4bGBtVpYCijaM18uygPLNsEHQdEVHNl9sLV2kFVUYCo1jaMvZ6PZVlUlwWITnbgyuzVwE/gKNQA8x9FGoqCNhERkbrs+yFcH/oaT3NJDmOz/RQ0BgLAplpVjLa9aTW4B4X/XkNgdwBHnB3DYcOqNqkuD2J3Bml1Wm+Mxgo+jxYNOP9RpCEoaBMRkSbDMk18G/IwvaXYPAk4u3XFv3FT+LGre0bDZtTb+0O4NJ6jKTmMzYb7gimklE1h97Ld+EotLBMMG0S3DtJqQBLuC27SlwO/RM38x8qSUO+sIyb0GqmZ/zj0fmh3bGO3UuSwKGgTEZEmoWLFSnbPm4dv00Ysvx+ruhorUI0RFYXhsGM4nbi6dqPVmDFafLilOUCGRss08W3ehhnXDdtuO65ks+mnyu80EPcVM4nJ+ju+9Wsw9/ixxTpx9eyNMVA9Qb/IvvMfa14rzrjQa2dXfmj+4zmPN2ozRQ6XgjYREWl0FStWUjhjBsHSUhzJyZg+H/68PEy/PxSsZWRgc7moWruWwhkzSJk6VYFbS1KTHOb9P4c+dMengCOGis272b10B74SG1Z0McYXtzafwL7TQIyOxxOt4bdH1qHOfyxa3zjtE/mZ9M4gIiKNyjJNds+bR7C0lKhOnTBiYghs24Zlmtji4sCyqN62DcMdQ1RaGkGvl93z52E1VqZAaRz7ZGisWLuJwg8KqdrtxN6uK1FdMrDHe8KBfcWKlY3d4oOrGX7b5eTQbwVsv9whzX/0QVVJQ7ZK5BfTu4OIiDQq34Y8fJs24khOxjAMzD17sPbswXC5MGw2jKgozIo9mHsqMAwDR1ISvo0b8W3Ia+ymS0PrNBB+9wzWuU+yu/gYgs4Uonofj611Owy7HZvbrcC+pdt7/mNdauY/Ric2ZKtEfjEFbSIi0qhMbymW34/h+t9iw9XVWJYV7nUw7HYs0/pfNj4woqOx/H5Mb2ljNVkak82Gz+vCt8OLI7UjhhH5UUaBfQtXM/+xrBAsK7LMskLbkzOhTY/GaZ/Iz6SgTUREGpXNk4DhdGL5fKENDkdo7ar/9ZJYwSCGzYCoqNDjqioMpxObJ6GxmiyNrFagvw8F9i1YzfzHmITQ/Ed/OZjB0O9d+aGeuOOv0lBUaXb0ihURkUbl6p6Bq2s3qouKsCwLW2wsRmwsls+HZZpYgQA2dyy2WHdo8eHiYlzduuHqntHYTZdGUivQ34cC+xZun/mPlHwf+t2+Hwy9T9k5pVlS9kgREWlUhs1GqzFjKJwxg0BBAY6kJKLatcO/Zw9meTmG04mjXTusPRVUFxdj93hoNXpM00/rLvWmJtCvWruWqLS0UM/s/9QE9tG9sg4c2JumFk4/mnUaCB2P1z2Wo4aCNhERaXTuY/uTMnVqxDpt9jZJ2P63TptZXobldBLdK4tWo5tBOnepV3UF+kS7qCgvIfi/wD519Kj9B/ZblobW8ipa979Mg67QPKgTtEbaUaUmO6fIUUBBm4iINAnuY/sTk90P34Y8TG8pNk8Czm5d8W/cFH7s6p6hHjYBIgP9knWr8ZYXU2mrZntyFMtOjsFR/gqjC+1kp2RH7rhlaWi9t8qS0FpejphQRsFtq0Lbh96vwE1EmhwFbSIi0mQYNhvRPSOzuu37WKSG+9j+rG9v8cLb9xP0VhOdmER5x9ZUmT6KinOZuWwmUwZM+SlwM81QD1tlCbTu+tPiy844aB0bSlTx9TOhYXX6ckBEmhAFbSIiInJk/YL5YlZ1Nb6v3scs3oEtqS2uE4ZiOOr+uGJaJvPXv0xekp9OXXpSYRjYALfdTZojjYKyAl7KfYm+yX2xGbZQm4rWhXrY9poHB4Qex6fAztxQPQ2rE5EmREGbiIiIHDm/YL5YxXsvsnvO3/Ft241VbWI4bLjaTafVFVfjPuvSWvXzSvLIL8knOSY5IhkJhNZraxPThk0lm8gryaNHqx6hILLaFxoSWRdHDFQXhuqJiDQh6vsXEZGjnmmZrN+9nmXbl7F+93pMy2zsJh2dauaLbfsGohMgsXPod818sS1L97trxXsvUjhjBlVbirFHRxHV2o09OoqqLcUUzphBxXsv1trH6/PiN/1EO6LrPKbL4cJv+vH6vKENMYmhILK6su5GVFeGymMSD/OJi4jUL/W0iYjIUS2nMIf5ufPJL8nHb/px2pykJ6YzOnN07SQVcnj2Hgbp8sDSv/+s+WJWdTW75/ydYGU1UW1iw71mRrSNKJeDQNEeds/9OzFnXhIxVNLj8uC0OamqrsId5a7VPF+1D6fNicflCW1Izgr1+m1bFWrT3r1zlgVlhaG1vJKzjuRVEhH5xdTTJiIiR62cwhxmLpvJ2uK1xDvj6RDXgXhnPLn/S1KRU5jT2E1svrYshdevgjeuhrcnw2tXwMYPICrm4PPF9uH76n1823bjiHfVOczREe/Ct3U3vq/ejyjLSMwgPTGdosrQwux7syyLosoiuiZ2JSPxf+u12WyhYZoxCaEg0l8OZjD0e1d+qIft+KuUhEREmhy9K4mIyFHJtEzm586n1FdKp/hOuKPc2Awb7ig3afFpeH1eXsp9SUMlf466hkE6oiFQAbu/h8rdtfdxxITmk9UxX8ws3hGaw+a013k6w2nHqjYxi3dEbLcZNkZnjsbj8lBQVkBFoIKgFaQiUEFBWQEel4dRmaNCSUhqdBoYSuvfri9UlULJ96Hf7fvB0PuU7l9EmiQNjxQRkaPSYSepkEOzv7T50R6wuyDoh5ItEJ0Y2eN2gPlitqS2GA4blj+IEV37+2TLH8Rw2LAlta1Vlp2SzZQBU8JDYIurinHanGQlZTEqc1TdQ2A7DQwN0/yZGS5FRBqagjYREal3lmlGLJrdEItkH0qSiuKq4p+SVMih2V/afGccuOJDQZCvPDTk0BUfKjvIfDHXCUNxtZtO1ZZiolyOiCDbsiyqy3xEd07CdcLQOpuUnZJN3+S+5JXk4fV58bg8ZCRmRPaw7ctmU1p/EWk2FLSJiEi9qlixkt3z5uHbtBHL78dwOnF17UarMWNwH9u/3s572EkqpBbTMmsHQvtLm28YkNgJ/HsgUAk+L0S5Qz1sZYUHnC9mOBy0uuJqCmfMIFC0JzS3zWnH8gepLvNhd0fRatzV+12vDUJDJdVjKiJHKwVtIiJSbypWrKRwxgyCpaU4kpMxXC4sn4+qtWspnDGDlKlT6y1wq0lSkVucS5ojrVbvTVFlEVlJWT8lqZAI+826mXIi2TVp851xkTvFtIJWXULzxAJVod8OV6iH7firDjhfzH3WpaTAT+u0lfswHDaiOyfRalzd67SJiLQUCtpERKReWKbJ7nnzCJaWEtWp009p3N1uotLSCBQUsHv+PGKy+9XLUMmaJBUzl82koKyANjFtcDlc+Kp9FFUW1Z2kQoCfsm6W+kpJjkkm2hFNVXVVKOtm2Y9MadWe7MJ8zFZu8gw/XiuIx7CTYTmxBaog40z41WSo8h7WfDH3WZcSc+Yl+L56H7N4B7aktrhOGHrAHjYRkUNV5+iBZvJ/gN4FRUSkXvg25OHbtDHUw1ZXGvekJHwbN+LbkEd0z/oZ1vazklS0cPtm3ay5d+4oN2mONArKCnjJk4xZHs3LlevJj7LjNwyclkV6IMhodyLZJ/wBUo/5Wec3HA6iTxpxJJ+SiEizX7NTQZuIiNQL01samsPmctVZbkRHYxYXUfXd6npNUPKzklS0YIeSdXN1xXbyEuLwV1SRXB0g2jKpMmzkupzMjE9kSrSL7MZpvohILQccPbBsJlMGTGnygZuCNhERqRc2TwKG04nl82G4aycCqd65k2BRETuffgaqq6kOVhJI8eAcfTY9zrkam/3I/RelJBWH7mBZN50OJ8VVxcRHxdOj3fEYgT0QDOC2R5EWFUtB+Q+8lPsSfZP7KjAWkUZ3SKMHmsF7VtNtmYiINGuu7hm4unajuqgIy7IiyqpLSvDn52P5A/h3FVJR+AP+ncWwOp/yux5jzpSTyPl2XiO1vGXbO+tmXUqqSqgOVpMUnRTqFXXFg7s1uOIxbLaI9e9ERBrb4azZ2ZQpaBMRkXph2Gy0GjMGu8dDoKAAc88erGCQYHk5vg0bsEwTkyCBygr8NghEQXUUuPzQ9+MyXnrzAQVujaAm62ZRZe1g27IsdlXtwmF30Cq6VZ37uxwu/KZf69+JSJNwKGt2Nof3LAVtIiJSb9zH9idl6lSis7IIlpcR2Poj1cVFYLNhxEQTCAbwO8BmMzAMA8tmEIiCaD8MXFLNSzlPYwarG/tptCg1WTc9Lg8FZQVUBCoIWkEqAhUUlBUQ74wnKToJX9BX5/5a/05EmpKDjR5oLu9ZCtpERKReuY/tT/u/zaD9Xx+g3bRpJF31B+wJCVgBPwE72CJHq2DZwTSg7W4o37aLvPyFjdPwFqwm62ZmUiZl/jK2lm+lzF9GVlIWfx74Z3q36b3fnriiyiK6JnbV+nci0iQcbPRAc3nPUiISERGpd4bNFk7rb/MkYNhtWMEgph3s7DPHwATLALsJUZUW3vIdjdHkFu9AWTdthk3r34lIs3C0rNmpoE1ERBqUq3sGzk6dCWz9EZsFlmFhhAM3C3swNL+tygWBGANPXNtGbW9Ltr+sm1r/TkSak6PhPUtBm4iINCjDZiPp6qup/PZbor0lVEUBdgvDBHsQTBsEHQZbkyCuXWsy0s9s7CZLHbT+nYg0J839PUtBm4iINLjYAceRPHky22c9gLOiEisYGhIZiIJqh0FJnMU3xzoZlf2HI7pemxxZWv9ORJqT5vyepf8JRUSkUbS+5GJc3TPI/9tdlH+fT9A0qXLBzjbww/GtGHXORLKPGdPYzRQREWl0CtpERKTRxB53HL3nv0XVuly2rPuQclslHTN7cVG3YephExFpiUwz9HvLlxDXGpKzwNY8hjDWJ/2PKCIijcqw2YjJ6kXPrF6HtZ9pmc12boKIiNRhy1L46nmIGgELbgG7AW16wgl/gE4DG7t1jUpBm4iINDs5hTnhLGB+04/T5iQ9MZ3RmaObRRYwUNApIhJhy1J4/89QVQFpIyChE1R7Yduq0Pah97fowE1Bm4iINCs5hTnMXDaTUl8pyTHJRDuiqaquIrc4l5nLZjJlwJQmH7gdDUGniMgRY5rw1dNQWQKt/5coxGYDZxy0joVd+fD1M9Dx+BY7VLJlPmsREWmWTMtkfu58Sn2ldIrvhDvKjc2w4Y5ykxafhtfn5aXclzAts7Gbul81Qefa4rXEO+PpENeBeGd8OOjMKcxp7CaKiDSsnWuhaB3EtwXDiCwzDIhPgZ25oXotlII2ERFpNvJK8ti8axNZu920zyuh9Y/lYFoAGIZBm5g2bCrZRF5JXiO3tG5HQ9ApInLEVZZAtQ8cMXWXO2JC5ZUlDdmqJkXDI0VEpNkoX76M81/aQodiC3vAJOiwsSfBxeY+SWzLaEUwNZpi04/X523sptYprySP/JJ8kmOSMfb5NnnfoLO5riUkInLYYhLB4YLqSnC6apdXV4bKYxIbumVNhoI2ERFpFipWrCTmqX/RYYePioRonA4bnqJKWu3YQ4f1uylv5WJbmpsvTkzAc5qnsZtbJ6/Pi9/0E+2IrrPc5XBRXFXcZINOEZF6kZwVyhK5bRW0TogssywoK4T2/UL1WqjDDtosy2L58uVs3rwZwzBIT0+nf//+tb4xFBEROVIs02T3vHk49/ipTE3E8nppVViNLWgScNqwV1s4K6tpu6mEC7b5Se60Buu3GRhNbMK6x+XBaXNSVV2FO8pdq9xX7cNpc+JxNc2gU0SkXthsobT+7/8Zdn8PcYSSk1SXhwK2mEQ4/qq6k5CYZmiuW2VJqN5Ruq7bYQVtH330EePHj+f777/Hsn6aQ5Cens7zzz/PqaeeWi+NFBGRls23IQ/fpo04kpPpYE9kz+Zd2ALVBKPsgIGJSXRFAIcNnOWVFP5lOns+/YzWl16K+9j+QNNIsZ+RmEF6Yjq5xbmkOdIivvC0LIuiyiKykrLISMxo0HaJiDS6TgNDaf2/ej70uHRLaJ229v1CAVtd6f63LA1lnSxa9785ca6jdl23Qw7a8vLyOOeccxg4cCAPPfQQmZmZWJbFmjVreOSRRxgxYgSrVq2ia9eu9dleERFpgUxvKZbfj+FyEbPTi63CwjLBHgwCYFhgAE6XE7sjCqs6QOWqVRTOmEHK1Kmsb2/x3qK/Y+ZuJGhVs6NjHLGZWYzuNaZBU+zbDBujM0czc9lMCsoKaBPTBpfDha/aR1FlER6Xh1GZo7Rem4i0TJ0GQttsWLAAhv8V4lrvv+esZl23ypJQ1klHTGju21G6rtshB22zZ8/mxBNPZNGiRRHbMzMzOf/88xkyZAgPPfQQjz766BFvpIiItGw2TwJEReH/4QcCW7diBIMYdjsYYFUHqemvMqr9YPnBtOGIc/L/7d15fFTV/f/x172zZkgmCySsCQQDJCgQEEWqdWlVtHzbWm2rQi2tVqpftEWKqF+tVq3V8sOtFUVtq/ZbcOm31talKmrVWnFhiRtEiERIxRCyTtbZ7v39MWQkJEACWSbh/XzII2bumTvnzpkk85lzzucTDQTYesetfFZXyullTbgjsVUiYVclZSN38OiZW+A7v+jVwK0wq5DF0xfH67RVtVThNt0UDC7g/PzzVadNRA5vrQFaznHgcnXcpk1dt7FflAkYwHXdOh20vfrqq9x6660dHjMMg4ULF3LNNdd0W8dERERaRRvqseoCRMrLv7jRssAw2HNHtW0RK2ZjW7Q0bCfqzMAuKiXbtrFNg7DbBAycYYvcT4P4nyjlJd9yJv/g/l6d3SrMKmRy5uQ+X64pItIvdaWu29Aj+6aP3azTQdv27duZNGnSPo8fddRRbNu2rVs6JSIi0qpp/QZ2/b9l2OFw2wO2HfvXygAssKLQ5DX4jzvC0J0V+CMQMSHiNDEwsE0Ie0ycIYu02gijnn+fLd/YzITB+b16XaZhKq2/iMjB6FRdt4oBVdet0x/pNTQ04PO1z3TVyufz0dTU1C2dEhERgS+yRkZqa3FkZIDDjG1g+6LF7n+7v7MhZEBFKiSFTQa1xGI5hw2elijulgjuliimZRN1Gpi2zbD/NNFQvLG3L01ERA7WnnXdOjIA67p1KXvkxo0bKd9zacoeKisru6VDIiIirYJbSmj+8AOs+gaspkaIRLENMGKrHMFid8xmg21gmbArHUhy4KuN4ozGDlvsbg+YURtXS5SwM3Y3dzhC8r8fguyRA2rTuojIgNWmrtugtkskB2hdty4FbV/96lfjqf73ZBgGtm2rVpuIiHToYNPtN61dS6R8J5YBQYI4TDCtL46bTjCi0Drb1uQ1CA4y8QQt/HV2fB7OMMDe/SfKtmOTdc4IRE0wnAY5TZ8NyGxjIiID0p513apLY3vYWrNHHqiuWz/V6aCttLS0J/shIiIDVFFFUTxTYsgK4Tbd5KblMid/zn4zJdqWRcNrr2FZUZqdUaIG2G5wh8CwYsFYNGrgMGycbghb0OKB9ABg21gmhDzgCseCtPhHjkYscDOtWNCWMsyHNy8Xaj4dcNnGREQGrHhdt9Y6bRWxJZH7q+vWj3U6aBs9enRP9kNERAagoooilq1dRl2wjsykTLxOLy2RFoqrilm2dhmLpy/eZ+AW3FJCpKKCZq+JoyUKLnZngLRxhmMzbKYNIRekZEWwjgzz+LA0BreYZFZFmPauRTA5icE7gzhDUUz7i9k2c3ddN9cgB7kzhmGY5oDMNiYiMqDlzIh90LZrUyzpSFLavuu69XPddkVPPvkkkydP7q7TiYhIP2fZFquKV1EXrCMnJQefy4dpmPhcPrJTsgkEAzxa/CiWbXV8/0AdwZYGdqU7sBxGLFCzYjNoYRdYDrBMWHO0k6bTTcZnBBmUZlOUbbMrJ5mo10vU46ZqZDJBnwuM2Oyaw4r98TOckDVtCEmjdifZcibFspENoGxjIiIDnmnGPmgbc3zs6wAM2KCLQdv999/Pt7/9bebMmcPbb78NwCuvvMLUqVO54IILOP7443ukkyIi0v+U1JZQWltKZlJmuz3PhmEwJGkIW2u3UlJb0uH9TX8qUadJxAE1w5MJeQxMC5zhWPAV8kB9qsGGI13UJ6Vg5p7InGN/hj/jCN4bk8muYT58gSCNXoNPR7n4z+gkSDUwPQaYYJom9Rvr2PHkdprKGgdktjERERkYOh203XbbbVx++eV8+umn/P3vf+crX/kKv/rVr5g7dy7nnnsu//nPf7jvvvt6sq8iItKPBIIBQlYIr9Pb4XGP00PIChEIBjo+Pi4PR+4Y/A1RmpJMdmWnUDnUpCrToDLLIOg1+Xy4SW1GBL/bD19eTGHhD1g883omZBbw7+NSqffYpO5qIs1OYpR3JM5mEztsYzgN3FkeHF4HLeUtVLz4OU2bP4fM/AGVbUxERAaGTu9pe+ihh3jwwQeZN28e//rXvzjppJN48803KSkpYdCgQT3ZRxER6Yf8Hj9u001LpAWfq32dz2AkiNt04/f4O7y/YZrk/HA+Fdd9gH9XA6G0QYR9g3C2NOOrjxL0Wrw61UmuZzB5X741vum8MKuQyZmTKZlUQsPEtST97TXc23cS3v4fbNvA4TVw+w0cHgNMA1eqSbi6mZqNXpLmXxTb3yYiIpJAOh20bd++na985SsAfPnLX8blcnHjjTcqYBMRkQ7lpeWRm5ZLcVUx2c7sNkskbdumsrmSgsEF5KXl7fMcg6YdTdrPFrL5d3eRXt5IsmViOz2U5zh5dbqbmnFDuGjGdZjDprW5n2mYjE8fD6eOx/7KedSvfomK22/H9PtxDnJg1G6HUANELQzDxJmWQjCcRjA4mI7nBRODbVkEt5RgBeqwBiX3dXdERKSXdDpoCwaDeL1f/Clzu91kZGT0SKdERKT/Mw2TOflzWLZ2GWX1ZQxJGoLH6SEYCVLZXInf4+f8/PMPWK9tyle/i31kHv945QGqKrYT8FrUDksmN+MILso/f79lAyA2Y+fMSMdwOXGmp2M4HLF9a8EGsMJgujCcSdg7dmAF6rrvCehOlkXjy09S9cjjhD6vBMOJnZ4O35tL83vv45p+dF/3UEREelCXimv//Oc/x+eLLXEJhUL88pe/JDU1tU2bO+64o/t6JyIi/VphViGLpy+O12mraqnCbbopGFzA+Z0IuOLnGTaNyeffe1AFuiGW1MRwu7GDQQyfDzDAkxI/bjc2YrjdmP7UfZ+kj1hb/0359ddQV7QL2wLDBMM0sEPNAOy66y6cixbhmza1j3sqIiI9pdNB24knnsjHH38c//5LX/oSW7dubdNm7+xgIiIi8T1mBxlwtYoveTwInnF5eMYeQcumTbiy2y/VjFRV4Z1YgGfcvpdq9oXqe2/j8wcfwWj+4jbLgqjTxmhqACBcWUnNqpUkFU7RfjwRkQGq00Hbq6++2oPdEBGRgexQAq7uYJgm6XPnUrF0KeGyMpyDB2N4vdgtLUSqqnD4/aTPmZtQQU/1o49Sft8fIRz73iZWENwAnBFo2d3ObmkhWPIJwS0leCf03XMsIiI956D/OlVWVlJZWdmdfREREekxvmlTyVqyBG9BAdGGesI7PiPaUI93YgFZS5Yk1PJCKxKhasW9WBEbe/dte69lcUV2t21pxmpoSNz9eCIicsi6tKettraWa6+9lscff5yamhoA0tPTOe+88/jlL39JWlpaT/RRREQOI5ZtHfJSyn3xTZtKUuGUeAZG05+KZ1xeQs2wATS8/AqR6lrCDnBH9tFodzRnRyNgmpjJg2Dj3yGwA/wjYMLXwNGlP/MiIpKgOv1Xqrq6mhkzZvDII49wzjnncPvtt3P77bdz9tln8/DDDzNz5sx4INdZt956K8cccwwpKSlkZWVx1llntdk3B9DS0sKCBQsYPHgwycnJnHPOOezcubNNm+3btzN79mx8Ph9ZWVlceeWVRCJt/8q9+uqrTJs2DY/HQ15eHg8//HC7/ixfvpwxY8bg9XqZMWMG77zzTpf7IiIiB6+oooir/3U11/7rWm5+62au/de1XP2vqymqKOq2xzBME++E8fiOOQbvhPEJF7ABRCp2Yts2lhmLzez9tLVtG3e6A88/vgNPXgwvXhf7+ptCePcPvdRjERHpSZ3+S3XTTTfhdrv55JNPuP/++1m4cCELFy7kgQceoKSkBJfLxU033dSlB3/ttddYsGABb731FqtXryYcDnP66afT2NgYb3PFFVfw9NNP8+c//5nXXnuNHTt2cPbZZ8ePR6NRZs+eTSgU4s033+SRRx7h4Ycf5vrrr4+3KS0tZfbs2ZxyyikUFRWxcOFCfvSjH/HCCy/E2zz++OMsWrSIG264gfXr1zNlyhRmzZpFRUVFp/siIiIHr6iiiGVrl7GpahMp7hRGJo8kxZ1CcVUxy9Yu69bALdE5s4bGgkkbLMf+gzbD7WTwsA8wGnaCww0eP7bppqVsF01/uoGWJ3+NbVm91ncREel+nV438dRTT3H//fczdOjQdseGDRvG0qVLueSSS7jzzjs7/eDPP/98m+8ffvhhsrKyWLduHSeeeCJ1dXX8/ve/Z9WqVfHC3g899BAFBQW89dZbHHfccbz44ots3LiRl156iaFDh1JYWMjNN9/MVVddxS9+8QvcbjcrVqwgNzeX22+/HYCCggLeeOMN7rzzTmbNmgXEShVcfPHF/PCHPwRgxYoVPPvss/zhD3/g6quv7lRf9hYMBgkGg/HvA4EAAOFwmHA43OnnSQ5N63Ot5zwxaXwSV2+OjWVbPL7pcZqCTeQm58azO7qcLpKTk/ms4TOe2PQEBWkF3bZUMpF5TvwyxogRuCp20uKw8UZiWSP33NdmeTwApE8Dd6ZN2JsFhkFzhUFtsUmwDuyIhfH+o3jWVJJ27nkkTZncNxd0GNLvtsSm8Ulch9PYdOUaDdu29/cBXpzH4+GTTz5h1KhRHR7/z3/+Q15eHi0tLR0e74ySkhLGjRvHBx98wFFHHcUrr7zCV7/6VWpqatrslxs9ejQLFy7kiiuu4Prrr+fvf/87RUVF8eOlpaWMHTuW9evXM3XqVE488USmTZvGXXfdFW/z0EMPsXDhQurq6giFQvh8Pv7v//6Ps846K95m3rx51NbW8re//a1TfdnbL37xC2688cZ2t69atSpe705ERERERA4/TU1NzJkzh7q6Ovx+/37bdnqmbciQIXz66af7DNpKS0vJyMjoWk/3YFkWCxcu5Pjjj+eoo44CoLy8HLfb3S7BydChQykvL4+32Xv2r/X7A7UJBAI0NzdTU1NDNBrtsE1xcXGn+7K3a665hkWLFsW/DwQCZGdnc/rppx9wYKT7hMNhVq9ezWmnnYbL5err7sheND6JqzfHZsPODSxdu5Thg4Z3OJMWtaOUN5azZPoSpg5NnCyP+1LzlyepfvhhotXV2JaFYZo4MjLI+MEPSD+n88vqa/7yJDt//wBWTQ1GxMKwwTKgKc1L0oR8tn3tW4y/+ybcRpghR1vUfWzSUg2uZIhNVtpgRbAzxhFuNPHmT2DYTTcl5D6+gUa/2xKbxidxHU5j07oKrzM6HbTNmjWLa6+9ltWrV+N2u9scCwaD/PznP+eMM87ofC/3smDBAj788EPeeOONgz5HovF4PHh2L1/Zk8vlGvAvwkSk5z2xaXwSV2+MTdqgNAzToDHaiM/VfiVCU6QJwzRIG5SW8K+T6scep3rpUuxwGIfXi+FyYUci2J99RvXSpTiBjPPO7dS5ss47lyHfPofAS6v5/L57iFZW4x43lnRvCpbTyTbA627Gqo5Qt94g3AgeD5itubhsK/bPdGL6k4ls3oz16TbVc+tF+t2W2DQ+ietwGJuuXF+ng7abbrqJ6dOnM27cOBYsWEB+fj62bbNp0ybuvfdegsEg//u//3tQHb7ssst45plneP3119vM5A0bNoxQKERtbW2bGa6dO3cybNiweJu9szy2ZnTcs83eWR537tyJ3+8nKSkJh8OBw+HosM2e5zhQX0RE5ODkpeWRm5ZLcVUx2c7s+J42iGVHrGyupGBwAXlpeX3YywOzIhGqHngAOxzGTE6Oz2gZbje204nV0EDVAw+Q9u1zMJ2d+xNsOp14c4/AY7pxHDEe09s2qDUcbpyeIKGAE9syMAbtsevBioLTC4OyMCwLu7pK9dxEEkxPljmRgaPTr4hRo0axZs0aJk6cyDXXXMNZZ53Ft771La699lomTpzIv//9b7Kzs7v04LZtc9lll/HXv/6VV155hdzc3DbHjz76aFwuFy+//HL8to8//pjt27czc+ZMAGbOnMkHH3zQJsvj6tWr8fv9TJw4Md5mz3O0tmk9h9vt5uijj27TxrIsXn755XibzvRFREQOjmmYzMmfg9/jp6y+jKZwE1E7SlO4ibL6MvweP+fnn5/wb2QaXn6FaFUVhtfbbgmiYZoYHg/RqioaXn6lS+e1AnXYoRBGB6s3SM/FcBsQtTGwsCN2bHYtGgbThIyxYBjYLS0YbjemP/VQLlFEulFvlDmRgaFLVTdzc3P5xz/+QU1NDVu2bAEgLy/voPeyLViwgFWrVvG3v/2NlJSU+N6w1NRUkpKSSE1N5aKLLmLRokVkZGTg9/u5/PLLmTlzZjxb4+mnn87EiRO54IILWLp0KeXl5Vx33XUsWLAgvjTxkksu4Z577mHJkiVceOGFvPLKKzzxxBM8++yz8b4sWrSIefPmMX36dI499ljuuusuGhsb49kkO9MXERE5eIVZhSyevphVxasorS2lqqUKt+mmYHAB5+efT2FWYV938YAiFTuxLWufs2iGy4UVDBKp6FqNT9OfGputCwYx9k5klTYSu6ERs6UMpydEuMHElWxhOL2xgC0tG9u2iVRV4Z1YgGdcYs9WiiQsy4Jdm6C5FpLSILMg9sHIQWotc1IXrCMzKROv00tLpCVe5mTx9MX94vee9I4uBW2tDMPA3P0iNQ/hxXrfffcBcPLJJ7e5/aGHHuIHP/gBAHfeeSemaXLOOecQDAaZNWsW9957b7ytw+HgmWee4dJLL2XmzJkMGjSIefPmtakZl5uby7PPPssVV1zB3XffzahRo/jd734XT/cPcO6557Jr1y6uv/56ysvLKSws5Pnnn2+TnORAfRERkUNTmFXI5MzJ/XapUGt9NTsSwdhr/zeAHQ5jmCbOrPblc/bHMy4Pz9gjaNm0CVf23stHIRpy4T3ua6TNzGHXQ08RboniHDoGw+vFbmwkUlWFw+8nfc5cJSEROYAOlyuWvQvvPACVH0MkCE4PDJkAx86HnBkH9RirildRF6wjJyUn/jPtc/nIdmZTVl/Go8WPMjlzcr/5/Sc9q0tB26effsqCBQt44YUXaK0UYBgGZ5xxBvfccw9jxozp0oN3ptqA1+tl+fLlLF++fJ9tRo8ezXPPPbff85x88sls2LBhv20uu+wyLrvsskPqi4iIHBrTMBmf3j8TZSR/9Ss4Bg8msmsXttPZJkCyLQs7GMSZmUnyV7/SpfMapkn63LlULF1KuKwM5+DB2MnJAIT/8x/cfj/pc7+Hb9pUjLEnUrNyJcGtn2BXV2G43XgnFpA+Zy6+aYmfeVOkLxVVFMVn+0NWCLfpJtflZ86OLRQ2NUHKUHAmQaQZPn8fXrwWTr+ly4FbSW0JpbWlZCZltvkQBmLvrYckDWFr7VZKakv67e9D6V6dDtrKyso47rjjcLlc3HzzzRQUFACwceNG7rvvPmbOnMm77767z5IAIiIiA53pdDJ4/nwqli7FamjA8Hhi2SPD4djSRpeLwfPndzoJyZ5806aStWRJPCCL1MdSRXvzJzDk3PPiAZlv2lSSCqcQ3FKCFajD9KfiGZenGTaRA+hwuWK4meJd77OMIIvTcyg0B8Uau5MhYxBUl8K7D8KoY7q0VDIQDBCyQnid3g6Pe5weqlqqCAQ7nxJeBrZO/9X4xS9+wYQJE3jhhRfwer94gZ111llcccUVnHHGGfziF7/gd7/7XY90VEREpD9oTedf9cADRKuqsILB2JLIzEwGz5/f6XT/HdkzIAvV1rCpvJxhN92Ee68EJYZpKq2/SBfsc7mibZEdCVPmcPCoVcNkw4fZOjNmGJCSBbuKY3vdhh7Z6cfze/y4TTctkZYOy5wEI0Hcphu/R3V9JabTQdvzzz/P448/3iZga5WUlMTNN9/Meeed162dExER6Y8yzjuXtG+fQ8PLrxCp2IkzayjJX/3KQc2w7a01IHOEw/Dcc5pBE+kG+1yuGA1j2DZDDDdb7SAlBBnPHu+FnUkQqYglJ+mCgVLmRHpPp/96VFZW7nfP2tixY6muru6OPomIiPR7ptOJf9bpffLYVjRCSelqAg078ScPJS/3NEzHoQeMIgPVPpcrOlxgmHhsiyrDJmBHYc8taJHmWFKSpLQuPV5rmZNla5dRVl/GkKQheJwegpEglc2V/abMifSeTv8GHz58OBs3btznnrUPP/xQRaZFRET6WNEHK1n13gOUhmsJ2TZuwyD3rduYM2U+hZPmtm3czSnMRfqrfS5XdCeDO5lgSx1ulxu/4fjimG1DfQWMmBL72emigVDmRHpPp4O2s846i8WLF/Pyyy+TmZnZ5lhFRQVXXXUVZ511Vnf3T0RERDqp6IOVsUQKdpRM04XXdNJiRygO1cTqPsEXgdv2t7s1hblIf7bP5YqGgZ2aTWW4noJQmDw7DE5XbIatviL2YccxFx/0hx39vcyJ9J5OB2033HADzz33HEcccQTf+973yM/Px7ZtNm3axKpVqxg2bBjXX399T/ZVRERk4OjmWS4rGmHVew9QZ0fJcfi+SKRguMk2XJRFm3j0vQeZPPFczM/WxVKVN9d2Wwpzkf5sv8sVIw3400ZzfsiDWbMDIrtiH3KMmBIL2A7xZ6U/lzmR3tPpoC09PZ23336b//mf/+Gxxx6jtrYWgLS0NObMmcOvfvUrMjIyeqqfIiIiA0cPzHKVlK6mNFxLpunquO6T6WJruIaSrS8w/r0nYwFbxthYBjw45BTmIv3dAZcrDpms5cTSZ7q0Kzk9PZ377ruPe++9l127dgGQmdm+KKCIiIjsw/a3e2SWK9Cwk5Bt4zU7/tPuMZxUWWEC5e/HgsWUoV8EbK26mMLcsi0t65KE0F2vxQMuV+xCWn+R7tTpoK25uZnVq1dzyimnkJKSQlZWVvxYIBDg1VdfZdasWXj2qhUjIiIiu1lWbIatB2a5/MlDcRsGLXYEn+FudzxoR3AbBn6Hd/fsXlLHJ+pkCvOiiqL4jETICuE23eSm5TInf44SKEiv6u7XopYrSiLq9F+EBx54gLvvvpuUlJR2x/x+P7/5zW9UWFtERGR/dm3q/CxXF+XlnkauK41KK4xt222O2bZNpRVmrCudvDFfiS3HjDR3fKJOpDAvqihi2dplbKraRIo7hZHJI0lxp1BcVcyytcsoqijqcv9FDoZei3K46HTQtnLlShYuXLjP4wsXLuSRRx7pjj6JiIgMTM21nZjlCna5UC+A6XAyZ8p8/IaDsmgTTVaIqG3RZIUoizbhN5ycP+VizGGTYvvn6itiKcv31JrCPDN/nynMLdtiVfEq6oJ15KTk4HP5MA0Tn8tHdko2gWCAR4sfxbKtLl+DSFfotSiHk04HbVu2bGHKlCn7PD558mS2bNnSLZ0SEREZkJLSDnmWa38KJ81l8fTF5LvTqbcj7Ig2U29HKHBnsHj6z2Lp/k0zlvAkKTW2HDPUAFY09rW69IApzEtqSyitLSUzqf2edsMwGJI0hK21WympLTmoaxDpLL0W5XDS6T1tkUiEXbt2kZOT0+HxXbt2EYlEuq1jIiIiA05mQWyW6/P3Y3vY9nyjeYiFelsVTprL5InnUlK6mkDDTvzJQ8nLPQ3Tscef/JwZsYQn8QyWFZ1OYR4IBghZIbxOb9u+hxogGsZjOqiKBgkEAwd9DSKd0eFrcQ8ep4eqliq9FmVA6HTQduSRR/LSSy9x9NFHd3j8xRdf5MgjlVFHRERkn1pnuV68NjarlZL1RfbIbijUG38Yh5PxeWfuv1HOjFjCky6mMPd7/LhNNy2RFnwuHzTXQO32WNBmWwQNA7fTg796GwybfkjXIbI/7V6LewlGgrhNN36Pvw96J9K9Ov1X4cILL+Tmm2/mmWeeaXfs6aef5pZbbuHCCy/s1s6JiIgMOK2zXMMnQ0sd1G6LfR0xBU7/Ze8WtTbNWArzMcfHvnYiWMxLyyM3LZfK5krspupY4pSWAJhObKeXStNgbLCFvDfvjZU3EOkhbV6LrfszbRuC9diNVVQ2fMbY1LHkpeX1bUdFukGnZ9rmz5/P66+/zje+8Q3y8/OZMGECAMXFxWzevJnvfve7zJ8/v8c6KiIiMmAc5CxXIjANkzn5c1j27v+jrGozQ6JhPC4fQWwqieA3XJyflIVZs1NFuqVHxV+La5dRVl/GENOFJ7CTYLiBSiz8mJwfLcUse7d3PwzpRVY0sv+l0DJgdGlU//SnP/GNb3yDVatWsXnzZmzbZsKECdx4441897vf7ak+ioiIDDyts1z9UGFWIYuPOIdV5b+k1OmkijBuDAoML+ebGRSavi4V6T4QFfGWdiwLdm2isLmRxWPPZlXps5SWr6fKjuA2XRQYPs63fRRWlB5S0fpEVvTBSla99wCl4VpCto3bMMh96zbmTJkfSzokA0qXQ/Hvfve7nQrQbrvtNi655BLS0tIOpl8iIiKSwAq9Q5ncbFKSOpyAYeM3HOThwWxNrtLJIt0HoiLe0s72t/dIohOk0OFhckstJaZNYHBu29diRsYhFa1PVEUfrGTZ2mXU2VEyTRde00mLHaE4VMOytctYDArcBpgee+X+6le/orq6uqdOLyIiIn0pKQ3T6WV81GK6OYjxhveLgA0OuXwBqHCydGD727GZs8/fA28qpI0GhxOzoYLxjXVMD4bavhYPsWh9IrKiEVa99wB1dpQchw+f6Y7VpzPdZDt8BOwoj773IFZUWd0Hkh4L2uy9C3aKiIjIwNFavuAgi3QfiAonSzuWFZtha66FjLHgTgbTAaYLDAfY0Vgm071fj4dQtD4RlZSupjRcS6bp6rg+nelia7iGktLVfdRD6QkDY45YRERkgLAti5aPN9P07ru0fLwZ2/oiKLFsi801m1lbvrbvCwYfYpHuA1HhZGln16bYksiUoW1rHDpc4HCA6Yy9/kINbe/XDbO+iSTQsJOQbeM1Ot7l5DGchGybQMPOXu6Z9CSllxEREUkQTes3ULNyJcFPPsFqaADTxD1mDIN/PJ8t2Y42e7sGGYM4l3P5R+k/GOEf0W0JOmzLIrilBCtQh+lPxTMuD2NfgdchFOk+EBVOlnaaa2MzZs6ktre7k2P/mutiwVw0/MWxbipan0j8yUNxGwYtdgSf4W53PGhHcBsG/uShfdA76SkK2kRERBJA0/oNVCxdSriiArulBSvYgh21iJSX01C0npdOz2DT0W4yPUMYuStKqLYOxsDSt29jUFIKfrf/kBN0xIPGrZ9gh0IYbjeesUeQPncuvmlTO75TD5UvUOFkaScpLfahQKQ5FqS1MgxIy4HgR7GALRqKvRZDjRAMQHJWtxStTxR5uaeR+9ZtFIdqyDbaLpG0bZtKK0yBO4O83NP6sJfS3Tr96t2xY0dP9kNEROSwZVsWNStXEq6oIFpfj9XcjOFy4/D5IMmL1djISc/9hzPfDfHNPxbzlUfe57S/lQFw4bNBRpU2kuxOPqQEHa1BY/NHH2E4nJiDkjEcTpo3bqRi6VKa1m/Y950Pokj3gXRYOHk327apbK5kbJoKJx9W9reP0psGSemx5CTVW2HHBqjcDE01EGqCjX+FjX+HAZCcw3Q4mTNlPn7DQVm0iSYrRNS2aLJClEWb8BtOzp9ycdfrtVkW7PwIPv137Kul/aKJpNOjeeSRR7J8+XLmzJnTqfZf/vKXSUpKOnBDERGRw1xwSwnBTz7BbmmBSAQzKSm+Z8c2DVrc4G2xmPnsdpp8sCsZmn0efEDe9ihHlFaz6fMydkwaTl1NOf+ovZ9J5/4WRyfftMWDxp07sSMRohU7sS0LwzQxBiUTbmlm253X0PitkfjTR5N3whJMV8fLFrtLu8LJSUPwOD0EI0Eqmyvxe/ycn3++6rUdTlr3Ub54bWzfZErW7iQjzbFAzp0MrkEQborttQw2QOAzqNgY+/fu7yF5KJywCAov6OurOSSFk+ayGOJ12qqsMG7DoMCdwflTLu56uv+9yijg9MQC5GPnD7j6dv1Vp4O2W265hR//+Mf89a9/5f777ycjI2O/7Z977rlD7pyIiMhAcKB9YlagDquhASvYguHxtEmyYEXDWLaNaYMrDA2DDJrdkFEPLUB6IziCNpnPfUb0hc9o9jlpSKlk85oFjP7hJfte1riH4JYSmj/8AKuuBjsSwjCsWBeiEKlpJmTY1DfD/xaXUjPkDXI3/S9zsk+j8Ov39sCz9YXCrEIWT18c38tX1VKF23RTMLiA8/PPV522w9G+9lEOnwxNlVD3GWQVQF3Z7kyS1heZJW0b6sth9XVgGcD+38smusJJc5k88VxKSlcTaNiJP3koebmnxWfYOl2UvrWMQnNtLMlLayD8+fsDtjB5f9TpoO2///u/OfPMM7nooouYOHEiDz74IF//+td7sm8iIiL9Xmf2iZn+VDBN7KiF6dnzTZWNGQ3hsAAbLBMM2yCjzmJ4A5QCFuDY3dqMwqCGCM1uiH68hYqlS8lasuSAgVu0tobIrgoIBTGcdiygNAwiVpRGw8YVgeRGyGm0iGRAsctk2Y6XWPz0f/dK4DY5c3Ln3nzK4aGjfZS2BU9dGgs6bDu2RLI1YDNNsA3AAlcKhBthzXLI/XkfX8ihMx1Oxued2e72Thel37uMQusHRu5kyBg0IAuT91ddWuyam5vLK6+8wj333MPZZ59NQUEBTmfbU6xfv75bOygiItJfte4Ti9bV4czMxPB4sINBWjZtahNQecbl4R4zhkh5OVY0itn6t9WKYkYjuKKx95yWCTYWQ2ugNdt3mxDPAMOGtLoojnHDiVbUUrNqJUmFU/adARKI1tRCKAimjeFwxG9vwcY2wTbBEYWkZvAB2RGLMqfJo2WrmRxu6ZWlkuPTx/foY0g/07qPstWn//4is2RjRSwZSWvA1soGDMCVBE27ervHvaa1KH1dsI7MpEy8Ti8tkZb4ntfF0xd/Ebh1UEbBsm1KCBKwo/hT0sjbtQlz16a2z7f0ui5nj9y2bRtPPvkk6enpfPOb32wXtImIiMgX+8SidXW4cnLiGd4Mnw9XdjbhsrI2AdXgH8+n5f33iTY2Yvt8sbpTkTB2BJwmRG0IucAVMXBFbSKuDh7UMLCwcUZtPIEWHIMHE/zkE4JbSvBOaB/0tC6fagi8R5Jpx6btdr+xjVpRogaYNphWLGBsSYo/DEOiFludJiVvLGX8Kdf32PMo0il7ZpaMtMRm24y92hjEXryGC8KhPuhkz9u7KH3r7x2fy0e2M5uy+jIeLX6UyZmTY7PVe5VRKLKaWGVVU2oHCWHjNgxynWHmlK+jUEFbn+pSxPXggw/ys5/9jFNPPZWPPvqIzMzMnuqXiIhIvxbcUkJw6yexGbYOikM79wqoBh19NEMWLqTyrruINjXFZsZMA9NlYDoMiAJOMMOxjG57J8+zDbCN2I2GbcSWYg4ejF1dhRWoa9e/PZdPpe/cxQWDwN8IrrCFw2lg2bFZu9ZZvuZBENxjQs1jQ5UBgbrt3fq8iRyU1sySn78fm0nb62cO24oV3zadsSDFdHR8nn6uK0Xpx6ePbxPsFjlNlkV3UkeUTJx4MWixwxQ7YNmnT7F4+GTtI+1DnV6cesYZZ3DVVVdxzz338OSTTypgExER2Q8rUBcLnDyeDo8bXi92KNQmoMo471xG3nMPg2bMwDk0C0fGYBx+L4OGGww73k+mJ8LQhigGNg72SoMPGBg4DDM2oeB2Y7e0YLjdsT1ze2hdPrWpahMp7hScY0ZRMcykwQv1bpto1MaMgsOCoAuCXpudWTbVg784R9AAtw3+1JzuespEDl5rZsmkVAg2xoIzOwrW7n+GEQvmbBvCzeAbmO9jO1OUPmSFvihKvzvYtep3ssqqpo4oObjwGSamYeCLRMh2phCwIjxa/CiWrTIAfaXTM23RaJT333+fUaNG9WR/REREBgTTnxoLnIJBDF/74tD7CqgGTT8a37QVX2SbbNqGZ/0vMALFMNpL6P0ULL5Y+WVgAzYOm9gaSgxwuzAHDyby2Wd4JxbgGfdFLbMOl085k9h0bArpL9YRCRoEU0xGmS52hZuwIwZRD3w4xYo/qG1DpdOkIGyRd8KSnnj6RLpuz8ySkSao/3x3MhLn7oDNgpa62MzSzAVQ3tcd7n5dLkq/O9gteXEJpZEaMk1XbJLSikAkBA4XRvpohjg9bWfopNd1eqZt9erVCthEREQ6yTMuD8/YI4hU7lkc2oZgPXZTFZGdO/CMPaJNQNXKME28E8bjO+YYvGNGYrTUYVs2zRUenB4L56C2BYLbLoKycSVFiH5agsPvJ33O3DZJSDpcPmUYlE86gje/4qEyCyKWRTAYZbBtUpFl89eTYevI2ArNJqDMaeK3bM7PPq3Hk5CIdEnODDj7Qfje/8UCs+Ss2P7QcHMsOUnKcDjtZpj2vb7uaY84qKL0OTOoPeYiGhwuglaEhkgTthUGrx8yJ0BSevsZOul1yiIiIiLSAwzTJH3uXCqWLiVcVoYz2YXRvBO7MUCkycLhNUkfkY7xn3f3XQPJsuBft2OHW6ivSKe5xo3DFcHlsbAj4Q7vYrqimKaFJz1M+pWL26X73+fyqaR0yqceyWejPyVaHuCSgMlEbyrh9BDvGgHKTQdVu5dEFoQtzu+FOm0iB6U1s+SsW+DUG+Hj5yCwA/wjYMLXwOGEcMc/P/3dwRSlL6oo4qFda9hlGlSaThyGic+ZxMiUHFK9aUAHM3TS6xS0iYiI9BDftKlkLVlCzYN3E/zgXexQGMMB3rQo6RNC+IJr4OmfwNd/03HgtmsTjR9upuodPy21TqLNBmHTicNl4ciIfYruTQtjNEfAtLHCJoPHN+AbHsUzJgVjVPtZsP0un0pKJ5jppj55F8njv48380gKMwuYHA1R8sZSAnXb8afmkHfCEs2wSf/gcMLEb/R1L3pVV4rS71kewOfy0Rxpxunw0BBt4ZPAVo4wjsDv9lPZXEnB4IK2M3TSqxS0iYiI9CBf4RSSjqsm6KvBCpuYSS48GSYGjtiekZpP4dVb4XtPtiteW/1/T1H5jzDR8O78/jZgQTRsEgnEbnMmWTgcUaywQRQL39AQXn8Uoi2xdN57aV0+VVxVTLYzu02GOdu2qWypomDIkeQd+W3Y/Wm8aXqV1l+kH+lMUfq997cGPAG21m0lZIVwGS7CVpjtge343X5SvantZuikd+mZFxER6UkVH2F8XoQ33cI3yoN3iAPDNGLZ7VxJgAE71kPFR23u1rhuHZWP/I1oeHemctfuulO2AZaBtTuJm23H/kVaTDypETypEWLRnRlL572X1uVTfo+fsvoymsJNRO0oTeEmyurLOlw+JSL9T2tR+unDpjM+fXy7n+m997emelIZmzqWZFcyUaLYtk1juJFR/lFtC3JLn9BMm4iISE/6/D0It3RcO8owYpnsws2xdsMmAbHC3FX3P4DVEsRwOzCIAjamy8YKGfEZN4Boi4nV5MDhtkgf1/jFQ6TnxtJ5d6Ary6dEZGDqaH9rqicVv8dPY7iRUDREdUs1Fx51oX4nJAAFbSIiIj3EtiyC2yuwdjoxBxl4BreP2zoS3FJC6NNPsU0Th8cD4UawwDB3B24RIzbjBkTDBskZYdLHNeIbsju5gsMDU+e0W265p72XT6W4UoiGhlLfEKXYCjA+KwXT7ERnRaRf2tf+VgODZFcyTTSR4koh1ZO6n7NIb1HQJiIi0gOa1m+gZuVKgh9/hL0rBcO08KSbpE+08A3dIxV3JBibhRs2JX6TFagDy8JwmNiGA8OdHJuNsyIYThvTsIiasXNkTqonfVjd7mDQBKc3ltRk0ncP2MfW5VPrtlWz/J/bKKn4gFAkitvpIC8rmXlfGs3RozO6+ZkRkURwwP2tSj6SULRgXUREpJs1rd9AxdKltGzciCMjE9fgZBwui5ZKm4q3DZrKiRWvDTZiYbN5+ETW0sLmms1YtoXpT8VMTsb0eLFDodimNm9KrG6SJwVcg2j9E548IQMjdRSkHwH+UbFU5ydfs99Ztj2t21bNLc9u4sPP6vB7nYxK9+H3OvloRx23PLuJdduqe+6JEpFDY1mw8yP49N+xr62bXTtB+1v7F820iYiIdCPbsqhZuZJoXR2unJzYp9eZ4zCsj3C5WgjXG9R8ZJOUHuQ9r5tVaemUJhuE3v4lbtNNblouc8afR+YRRxANBCAcxmppwXC5MBwOrKiNHYrgSE0BwBiUAeH62N64zHw45uJ91n2zLJvNFfXUNYVJ9bnIG5LMI29uo7YpzJjBvvgn7YM8TnxuB9uqm/jjm9uYmp2upZIiiWb72/DOA1D5cWzG3umBIRPg2Pn7rv24F+1v7T8UtImIiHSj4JYSgls/wZmZ+cVyo6R0GHokRu12nHYdwXoH71spLBvqpc6bQuagYXidXloiLRRXFbNs/R1c+bVvkPrZZwDYLS1YwRasYBDDsnAkDyLtsp/Ezv1fd0M4EMsUmVmwzxm2dduqeeTNbZRUNMSXQGalePi0qpFhfm+bpVEAhmGQmexhS0UDmyvqyR+moroiicLatoaS1VcTCNXj9w0mzzEUM9oCn78PL14Lp9/SpcDtQOUBpO8paBMREelGVqAOOxTC8HjaHkhKh6Q0jNQA9uef89KQLOqSm8hJyYkHTD6Xj2xnNmX1ZaxKXsf1SxZTu/JRgp98gtXQAKaJe8wYBv94Pu7Jk+G55yArH1yu/fapdQlkbVOYrBQPXpeHlnCUzTvrqW4MkT7IzaAO7ud1OahsCFLXFO6mZ0dEusyyYNcmaKqG5hqKQtWseu8BSs16QoPcuKkh125ijjODwoxcqC6Fdx+EUcd0epl06/5WSVwK2kRERLqR6U/FcLuxg0EMn2+vowa27STkTWKroyleH6lNC8NgSNIQttZu5bNJKYz7f0sJbinBCtRh+lPxjMvDME3C4c4FUpZl73MJ5Kj0JCobgmyvaiTd52bvBZAt4diMXKpv/0GhiPSQ1iWQO9ZDwy6KnDbL0lKoMyATE68BLaaDYruFZdGdLHYMpTAlC3YVxwK9oUf29RVIN1HQJiIi0o084/LwjD2Clk2bcGW3z8gWqaoinDuMzzIrGbFHfaQ253B6qGqpIhAMYJgm3gkH/wn45op6SioayErxtAsQkz1OUrwu6lsiNLSESfF+EZzZts2uhiBHjUhlfFbKQT++iHRR68zatjdh3cPQXAstdVh2lFUpfuoMyIlEMAwTrEZ87mSyTRdlhHnUqmayYxhmpCJ2PxkwtFhVRESkGxmmSfrcuTj8fsJlZViNjdjRKFZjI+GyMhx+P57vfhOX00NLpKXDcwQjQdymG78r5aAzw7WqawoTikTxuhzt+2oY5GT4MAz4T00zjcEIUcumMRhhW3UTqUkuvv+l0UpCItJbtr8NT14MT86Hl26EXR9DYyVYYUqSBlHqcpJpG7FZcduO/Ys0x2bocbLVDlISDcSSkiSl9fHFSHfSTJuIiEg3802bStaSJbE6bVs/wa6uwnC78U4sIH3OXLxTp5D7r3/vvz6SN5O8l2/D2vk+JXYLAacH/+Dx5B33U8zRMzvdl1SfC7fTQUs4yiBP+z/7HqfJ8FQvYwYPoqI+SGVDELfTwVEjUvm+6rSJ9J7tb8eSiDTXgicZsMHhhnATGCYBLEIGeDEAI3YcI1Y+xIrgMRxUYRNoqoahU2OJiWTAUNAmIiLSA3zTppJUOKXD/WgAc/LnsGztMsrqyxiSNASP00MwEqSyuRI/Bud/+h7vN+5ilc9DqctByGjGHXiP3NWXMmfGlRyZf+Di2QDjs1LIy0rmox11+NyOdgHiroYgU0alcft3plBS2RAvBzA+K0UzbCK9xbJie9eaayFjLDTXxGbRTCcYJtg2/lALbjuJFgN8piMWrGHFYjfbIoiF2wrjd2fESn90MgmJ9A8aTRERkR7Suh/Nd8wxeCeMjwds8EV9pPzB+dSH6tnRsIP6UD0FGQUsDrRA/ecs8yexye0kBYORUUixLIrtIMvW38kHO9/rVB9M02Del0aTmuRiW3XTPpdAOp0m+cP8zBg7mPxhfgVsIr1p16ZYvbWUoWAY4HDtDrrs2HHDJC/UQm4kSqVpYGOA4YgFdIAdCVFpRxjrziDvtFs7ne5f+g/NtImIiPSRDusjtTTDmke52u+jzjTJsWILoTAMfDjIjkYoCzfxfx8+xAxO79TjHD06g2tnF8TrtCXCEkjbsvY5Cyly2Gmu3V0gOyn2vTs59q+5DkwHWFFMy2ZOY4hlfi9lDhhiO3EbJrUuD1VuH35PCufOvBFz+PQ+vRTpGQraRERE+lC7+kgb/sRmIpS6k8m0aZeG3zBMhkSjfFq3lRkdJ5/s0NGjM5ianc7mivo+XwLZtH7DF/v9QiEMtxvP2CNInzsX37Spvd4fkT6XlBZLHhJpjgVrhgFpORD+GMIWEAVsCltaWBwNsyoliY/cDqocEDEtnHYIN/DYlicwHU4Kswr79HKk++kjLRERkQQTMA1CgNfu+LjHtgnZ0S6f1zSNPl8C2bR+AxVLl9KycSOOFD+uESNxpPhp2bSJiqVLaVq/odf7JNLnMgtgyASor4jtZQNISofMCbGAzjBjM252lMKozXmWD69rECneDPLSxzM1aypDfUMpripm2dplFFUU9eXVSA9Q0CYiIpJIhk3Bb7pw2xYtHcVUtkXQNHG7B/V61w6VbVnUrFxJtK4OV04Ops+H4XBg+ny4srOJBgLUrFqJfRClDUT6NdOEY+dDUipUl0KoAaxobG+bOyUWvM36FZz9INa5K3ls3AxCKVmMH3IUQ5KG4DAc+Fw+slOyCQQDPFr8KJatn6OBREGbiIhIIhl6JHmZU8gNR6jExm791N22wYpiA5UeH2My+l867+CWEoJbP8GZmdmu0LdhGDgHDyb4yScEt5T0UQ/3z7ItNtdsZm35WjbXbNabYuleOTPg9Ftg+GRoqYPabbGvIwth9h0w48cw8RuUpA+ntKWazKSOf46GJA1ha+1WSmoT8+dIDo72tImIiCQS08Q85X+Y8+xlLLMbYgkHolE8NgRNqHR68fuz+fb4b1P2bllf97ZLrEBdbA+bx9PhccPrxa6uwgrU9XLPDqyooohVxasorS0lZIVwm25y03KZkz9H+4ek++TMgFHHxLJJNtfGlkZmFrRJ3x8IBghZIbzOjje1epweqlqqCAQDvdNn6RWaaRMREUk0OTMonH0Pi/1HkW+7qXe62OF2U+9No2D4MSw+/kYmZU7q6152melPxXC7sYPBDo/bLS0YbjemP7WXe7Z/RRVFLFu7jE1Vm0hxpzAyeSQp7hTtH5KeYZow9EgYc3zs615ZVf0eP27TTUukpcO7ByNB3KYbv8ffG72VXqKZNhER6Xcsy06ILIg9KmcGhaMeZ3LFR5RUbiLgMPFnTSIvYxymYRIOh/u6h13mGZeHZ+wRtGzahCs7u12h70hVFd6JBXjG5fVhL9uybItVxauoC9aRk5IT77PP5SPbmU1ZfRmPFj/K5MzJmIY+C5eel5eWR25aLsVVxWQ72/8cVTZXUjC4gLy0xPk5kkOnoE1ERPqVdduq4/XGQpEobqeDvKxk5vVRvbEeZZqYwyYxflj/m1XriGGapM+dS8XSpYTLynAOHhxbEtnSQqSqCoffT/qcuQlVr62ktoTS2tJO7R9qU7pBpIeYhsmc/DksW7uMsvoyhiQNweP0EIwEqWyuxO/xc37++foQYYDRaIqISL+xbls1tzy7iQ8/q8PvdTIq3Yff6+SjHXXc8uwm1m2r7usuygH4pk0la8kSvAUFRBvqCe/4jGhDPd6JBWQtWZJwddo6s38oZIW0f0h6VWFWIYunLyZ/cD71oXp2NOygPlRPweACFk9frH2WA5Bm2kREpF+wLJtH3txGbVOYMYN98VmPQR4nPreDbdVN/PHNbUzNTh94SyUHGN+0qSQVTiG4pQQrUIfpT8UzLi+hZtha7bl/yOfytTuu/UPSVwqzCpmcOZmS2hICwQB+j5+8tDzNsA1QCtpERKRf2FxRT0lFA1kpng6XqWUme9hS0cDminryh+kNdKIzTBPvhMRfTqj9Q5LITMPUstzDhEJxERHpF+qawoQiUbwuR4fHvS4HoUiUuqb+l6BDElfr/iG/x09ZfRlN4SaidpSmcBNl9WXaPyQivUK/YUREpF9I9blwOx20hKMdHm8Jx5KSpPpcvdyzgcOybIrLA7y9tYri8gCWZfd1lxKC9g+JSF/T8kgREekXxmelkJeVzEc76vC5He2Wqe1qCHLUiFTGZ6X0YS/7r4PJynlYlF7YTfuHRKQvKWgTEZF+wTQN5n1pNLc8u4lt1U1kJnvwumIzb7sagqQmufj+l0YP2KChJ7Vm5axtCpOV4sHr8tASjsazcl47u6Bd4HZYlV7YTfuHRKSv6OMhERHpN44encG1sws4ckQqgZYI/6lpItAS4agRqR0GFnJge2flHORx4jANBnmcjM7wUdcc5o9vbmuzVFKlF0REepdm2kREpF85enQGU7PTD5tleT2tq1k5VXpBRKT3KWgTEZF+xzQNpfXvJl9k5fR0eNzrclDZEIxn5VTpBRGR3qflkSIiIoexrmblVOkFEZHep6BNRETkMNaalXNXQxDbbpvivzUr57is5HhWTpVeEBHpfQraREREDmOtWTlTk1xsq26iMRghatk0BiNsq25ql5Wzq0GeiIgcOgVtIiIih7muZOXsapAnIiKHTolIREREpEtZOVuDvNY6bZUNQdxOB0eNSOX7A7hOm4hIX1HQJiIiIkDXsnKq9IKISO9R0CYiIiIHRaUXRER6h/a0iYiIiIiIJDAFbSIiIiIiIglMQZuIiIiIiEgC69Og7fXXX+frX/86I0aMwDAMnnrqqTbHGxoauOyyyxg1ahRJSUlMnDiRFStWtGnT0tLCggULGDx4MMnJyZxzzjns3LmzTZvt27cze/ZsfD4fWVlZXHnllUQikTZtXn31VaZNm4bH4yEvL4+HH364XX+XL1/OmDFj8Hq9zJgxg3feeadbngcREREREZF96dOgrbGxkSlTprB8+fIOjy9atIjnn3+eP/3pT2zatImFCxdy2WWX8fe//z3e5oorruDpp5/mz3/+M6+99ho7duzg7LPPjh+PRqPMnj2bUCjEm2++ySOPPMLDDz/M9ddfH29TWlrK7NmzOeWUUygqKmLhwoX86Ec/4oUXXoi3efzxx1m0aBE33HAD69evZ8qUKcyaNYuKiooeeGZERERERERi+jR75JlnnsmZZ565z+Nvvvkm8+bN4+STTwZg/vz53H///bzzzjt84xvfoK6ujt///vesWrWKr3zlKwA89NBDFBQU8NZbb3Hcccfx4osvsnHjRl566SWGDh1KYWEhN998M1dddRW/+MUvcLvdrFixgtzcXG6//XYACgoKeOONN7jzzjuZNWsWAHfccQcXX3wxP/zhDwFYsWIFzz77LH/4wx+4+uqrO+x/MBgkGAzGvw8EAgCEw2HC4fChPXnSaa3PtZ7zxKTxSVwam8Sm8UlsGp/EpvFJXIfT2HTlGhM65f+XvvQl/v73v3PhhRcyYsQIXn31VTZv3sydd94JwLp16wiHw5x66qnx++Tn55OTk8OaNWs47rjjWLNmDZMmTWLo0KHxNrNmzeLSSy/lo48+YurUqaxZs6bNOVrbLFy4EIBQKMS6deu45ppr4sdN0+TUU09lzZo1++z/rbfeyo033tju9hdffBGfz3dQz4kcvNWrV/d1F2Q/ND6JS2OT2DQ+iU3jk9g0PonrcBibpqamTrdN6KDtt7/9LfPnz2fUqFE4nU5M0+TBBx/kxBNPBKC8vBy3201aWlqb+w0dOpTy8vJ4mz0Dttbjrcf21yYQCNDc3ExNTQ3RaLTDNsXFxfvs/zXXXMOiRYvi3wcCAbKzszn99NPx+1XXpreEw2FWr17Naaedhsvl6uvuyF40PolLY5PYND6JTeOT2DQ+ietwGpvWVXidkfBB21tvvcXf//53Ro8ezeuvv86CBQsYMWJEu5mxROTxePB4PO1ud7lcA/5FmIj0vCc2jU/i0tgkNo1PYtP4JDaNT+I6HMamK9eXsEFbc3Mz//M//8Nf//pXZs+eDcDkyZMpKipi2bJlnHrqqQwbNoxQKERtbW2b2badO3cybNgwAIYNG9Yuy2Nrdsk92+ydcXLnzp34/X6SkpJwOBw4HI4O27SeQ0REREREpCckbJ221mQdptm2iw6HA8uyADj66KNxuVy8/PLL8eMff/wx27dvZ+bMmQDMnDmTDz74oE2Wx9WrV+P3+5k4cWK8zZ7naG3Teg63283RRx/dpo1lWbz88svxNiIiIiIiIj2hT2faGhoaKCkpiX9fWlpKUVERGRkZ5OTkcNJJJ3HllVeSlJTE6NGjee211/jjH//IHXfcAUBqaioXXXQRixYtIiMjA7/fz+WXX87MmTM57rjjADj99NOZOHEiF1xwAUuXLqW8vJzrrruOBQsWxJcuXnLJJdxzzz0sWbKECy+8kFdeeYUnnniCZ599Nt63RYsWMW/ePKZPn86xxx7LXXfdRWNjYzybpIiIiIiISE/o06Bt7dq1nHLKKfHvW5N2zJs3j4cffpjHHnuMa665hrlz51JdXc3o0aO55ZZbuOSSS+L3ufPOOzFNk3POOYdgMMisWbO4995748cdDgfPPPMMl156KTNnzmTQoEHMmzePm266Kd4mNzeXZ599liuuuIK7776bUaNG8bvf/S6e7h/g3HPPZdeuXVx//fWUl5dTWFjI888/3y45iYiIiIiISHfq06Dt5JNPxrbtfR4fNmwYDz300H7P4fV6Wb58+T4LdAOMHj2a55577oB92bBhw37bXHbZZVx22WX7bSMiIiIiItKdEnZPm4iIiIiIiChoExERERERSWgK2kRERERERBKYgjYREREREZEEpqBNREREREQkgSloExERERERSWAK2kRERERERBKYgjYREREREZEEpqBNREREREQkgSloExERERERSWAK2kRERERERBKYgjYREREREZEEpqBNREREREQkgSloExERERERSWAK2kRERERERBKYs687ICL9nGXBrk3QXAtJaZBZAKY+DxIRERHpLgraROTgbX8b3nkAKj+GSBCcHhgyAY6dDzkz+rp3IiIiIgOCPg4XkYOz/W148Vr4/D3wpkLa6NjXz9+P3b797b7uoYiIiMiAoKBNRLrOsmIzbM21kDEW3MlgOmJfM3KhuQ7efTDWTkREREQOiYI2Eem6XZtiSyJThoJhtD/uGQSfrYPiZxS4iYiIiBwi7WkTka5rrt29hy1pr9troGYbtATACsHz18BHT8GMH2uPm4iIiMhB0kybiHRdUlos6Uik+Yvbmmtg50fQuAsiLWBFoakKtrwIT/9Ue9xEREREDpKCNhHpusyCWJbI+gqw7di/qhIIN4FtgQE43LHAzopCTSm8emvbpZKWFQvytr/1xfcihxHbsmj5eDNN775Ly8ebsfUzICIi+6DlkSLSdaYZS+v/4rVQXQpuX2zJpG2DYcb2ubmSwOGK/Qs2wI4NsSBt+KQ2pQIi0SiMuponnjyXrHGnc8q0+ThN/WqSga1p/QZqVq4kuPUT7FAIw+3GM/YI0ufOxTdtal93T0REEoxm2kTk4OTMgNNvgeGTobES7GgsWDOdsSySDtcXbZ0eCDdD+XttSgU84TX5drIN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Wh65abkUVxWT7cxus+TUtm0qmyspGFww4JZGioiIiIj0d30607Z27VqmTp3K1KlTAVi0aBFTp07l+uuv7/Q5Vq5cSX5+Pl/96lf52te+xgknnBAPtiCW5fHFF1+ktLSUo48+mp/97Gdcf/318XT/AF/60pdYtWoVDzzwAFOmTOH//u//eOqpp+I12gCWLFnC5Zdfzvz58znmmGNoaGjg+eef7zc12kzDZE7+HPweP2X1ZTSFm4jaUZrCTZTVl+H3+Dk//3zVaxMRERERSTB9OtN28sknY9t2p9t/+umn7W7LyMiIF9Lel8mTJ/Ovf/1rv22+853v8J3vfGefxw3D4KabbuKmm27qVF8TUWFWIYunL47XaatqqcJtuikYXMD5+eerTpuIiIiISAJK2EQk0jMKswqZnDmZktoSAsEAfo+fvLQ8zbCJiIiIiCQoBW2HIdMwGZ8+vq+70a9YtqVAV0RERET6hII2kQMoqiiKLykNWSHcppvctFzm5M/RklIRERER6XGaKhDZj6KKIpatXcamqk2kuFMYmTySFHcKxVXFLFu7jKKKor7uooiIiIgMcAraRPbBsi1WFa+iLlhHTkoOPpcP0zDxuXxkp2QTCAZ4tPhRLNvq666KiIiIyACmoE1kH0pqSyitLSUzKbNNXTuIZRMdkjSErbVbKakt2ccZREREREQOnYI2kX0IBAOErBBeZ8e1+DxODyErRCAY6OWeiYiIiMjhREGbyD74PX7cppuWSEuHx4ORIG7Tjd/j7+WeiYiIiMjhREGbyD7kpeWRm5ZLZXNluyLwtm1T2VzJ2LSx5KXl9VEPRURERORwoKBNZB9Mw2RO/hz8Hj9l9WU0hZuI2lGawk2U1Zfh9/g5P/981WsTERERkR6ld5si+1GYVcji6YvJH5xPfaieHQ07qA/VUzC4gMXTF6tOm4iIiIj0OBXXFjmAwqxCJmdOpqS2hEAwgN/jJy8tTzNsIiIiItIrFLSJdIJpmIxPH9/X3RARERGRw5CmCkRERERERBKYgjYREREREZEEpqBNREREREQkgSloExERERERSWAK2kRERERERBKYgjYREREREZEEpqBNREREREQkgSloExERERERSWAK2kRERERERBKYgjYREREREZEEpqBNREREREQkgSloExERERERSWAK2kRERERERBKYgjYREREREZEEpqBN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hwPLsrr3AqSNmTNnthlLgNWrV8fH8lDGWw7dgcYHwLZtLrvsMv7617/yyiuvkJub29vdPGwdaHz03qDvdOZn57B9X9DXmVBEuuKxxx6zPR6P/fDDD9sbN26058+fb6elpdnl5eW2bdv2BRdcYF999dXx9m+99Zb9l7/8xf7kk0/s119/3f7KV75i5+bm2jU1Nft8DGWIOng9MT7vvPOO7XQ67VtuucXesmWLvXLlStvn89l/+tOfevvy+r2eGJ958+bZI0eOtJ955hm7tLTUfvLJJ+0hQ4bYS5Ys6e3L69fq6+vtDRs22Bs2bLAB+4477rA3bNhgb9u2zbZt27766qvtCy64IN5+69atts/ns6+88kp706ZN9vLly22Hw2E///zz8TYHGm/pvJ4Yn0svvdROTU21X331Vfvzzz+P/2tqaur16+vvemJ89qb3BgenJ8bmcH1foKBN+p3f/va3dk5Oju12u+1jjz3Wfuutt+LHTjrpJHvevHnx71999VW7oKDA9ng89uDBg+0LLrjA/uyzz/Z7fv1iPjQ9MT5PP/20fdRRR9kej8fOz8+3H3jggd64lAGpu8cnEAjYP/3pT+2cnBzb6/XaY8eOta+99lo7GAz21iUNCP/85z9toN2/1vGYN2+efdJJJ7W7T2Fhoe12u+2xY8faDz30ULvz7m+8pfN6Ynw6Oh/Q4TjK/vXUz8+e9N7g4PTU2ByO7wsM27bt3pjRExERERERka7TnjYREREREZEEpqBNREREREQkgSloExERERERSWAK2kRERERERBKYgjYREREREZEEpqBNREREREQkgSloExERERERSWAK2kRERERERPby+uuv8/Wvf50RI0ZgGAZPPfVUl89h2zbLli1j/PjxeDweRo4cyS233NLl8zi7fA8REREREZEBrrGxkSlTpnDhhRdy9tlnH9Q5fvrTn/Liiy+ybNkyJk2aRHV1NdXV1V0+j2baRETksBKNRvnSl77U7g9wXV0d2dnZXHvttZ06z1/+8hdOPvlkUlNTSU5OZvLkydx0001t/hg3Nzdzww03xD9hHTJkCN/5znf46KOP2p2vurqahQsXMnr0aNxuNyNGjODCCy9k+/btbdr94Ac/wDAMDMPA5XKRm5vLkiVLaGlpadOutY1hGAwaNIhx48bxgx/8gHXr1nX2qRIROaydeeaZ/PKXv+Rb3/pWh8eDwSCLFy9m5MiRDBo0iBkzZvDqq6/Gj2/atIn77ruPv/3tb3zjG98gNzeXo48+mtNOO63LfVHQJiIihxWHw8HDDz/M888/z8qVK+O3X3755WRkZHDDDTcc8BzXXnst5557Lscccwz/+Mc/+PDDD7n99tt57733+N///V8g9sf81FNP5Q9/+AO//OUv2bx5M8899xyRSIQZM2bw1ltvxc9XXV3Ncccdx0svvcSKFSsoKSnhscceo6SkhGOOOYatW7e2efwzzjiDzz//nK1bt3LnnXdy//33d9jvhx56iM8//5yPPvqI5cuX09DQwIwZM/jjH/94sE+fiIjsdtlll7FmzRoee+wx3n//fb7zne9wxhlnsGXLFgCefvppxo4dyzPPPENubi5jxozhRz/60UHNtGGLiIgchu6++247PT3d3rFjh/3UU0/ZLpfLLioqOuD93n77bRuw77rrrg6P19TU2LZt27fddpttGEa7c0ajUXv69On2xIkTbcuybNu27UsuucQeNGiQ/fnnn7dp29TUZI8cOdI+44wz4rfNmzfP/uY3v9mm3dlnn21PnTq1zW2A/de//rVd/77//e/bKSkpdnV19QGvVUREYvb+nbpt2zbb4XDYn332WZt2X/3qV+1rrrnGtm3b/vGPf2x7PB57xowZ9uuvv27/85//tAsLC+1TTjmly4+vmTYRETksXX755UyZMoULLriA+fPnc/311zNlypQD3m/lypUkJyfz3//93x0eT0tLA2DVqlWcdtpp7c5pmiZXXHEFGzdu5L333sOyLB577DHmzp3LsGHD2rRNSkriv//7v3nhhRf2+cnshx9+yJtvvonb7e7EVcMVV1xBfX09q1ev7lR7ERFp74MPPiAajTJ+/HiSk5Pj/1577TU++eQTACzLIhgM8sc//pEvf/nLnHzyyfz+97/nn//8Jx9//HGXHk+JSERE5LBkGAb33XcfBQUFTJo0iauvvrpT99uyZQtjx47F5XLtt93mzZs55ZRTOjxWUFAQbzN8+HBqa2vjt3XU1rZtSkpKOPbYYwF45plnSE5OJhKJEAwGMU2Te+65p1P9z8/PB+DTTz/tVHsREWmvoaEBh8PBunXrcDgcbY4lJycDMHz4cJxOJ+PHj48fa/1dv337diZMmNDpx1PQJiIih60//OEP+Hw+SktL+c9//sOYMWMOeJ/YKpnO6am2p5xyCvfddx+NjY3ceeedOJ1OzjnnnC49jmEYnX48ERFpa+rUqUSjUSoqKvjyl7/cYZvjjz+eSCTCJ598whFHHAHEPqwDGD16dJceT8sjRUTksPTmm29y55138swzz3Dsscdy0UUXdSpwGj9+PFu3biUcDh+w3aZNmzo81nr7+PHjyczMJC0tbb9tDcMgLy8vftugQYPIy8tjypQp/OEPf+Dtt9/m97///QH7vudj5+bmdqq9iMjhqqGhgaKiIoqKigAoLS2lqKiI7du3M378eObOncv3v/99nnzySUpLS3nnnXe49dZbefbZZwE49dRTmTZtGhdeeCEbNmxg3bp1/PjHP+a0005rM/vWGQraRETksNPU1MQPfvADLr30Uk455RR+//vf884777BixYoD3nfOnDk0NDRw7733dni8trYWgPPOO4+XXnqJ9957r81xy7K48847mThxIlOmTME0Tb773e+yatUqysvL27Rtbm7m3nvvZdasWWRkZHT4eKZp8j//8z9cd911NDc3H7D/d911F36/n1NPPfWAbUVEDmdr165l6tSpTJ06FYBFixYxdepUrr/+eiCWoff73/8+P/vZz5gwYQJnnXUW7777Ljk5OUDs9/PTTz/NkCFDOPHEE5k9ezYFBQU89thjXe6LYXdlPYaIiMgA8NOf/pTnnnuO9957D5/PB8D999/P4sWL+eCDDw64TPKqq67i9ttvZ9GiRXzrW99ixIgRlJSUsGLFCk444QR++tOf0tLSwsknn8yOHTu4/fbbmTFjBjt37uRXv/oVq1ev5qWXXuK4444DoKqqihkzZpCUlMTSpUs56qijKC0t5brrruPjjz9mzZo1jB07FojVaautreWpp56K9ycSiTBmzBgWLlzI4sWLgdjyx4ceeogzzjiDYDDI5s2buf/++3nqqaf44x//yJw5c7r/iRURkR6hoE1ERA4rr732Gl/96ld59dVXOeGEE9ocmzVrFpFIhJdeeumAe76eeOIJli9fzoYNG7AsiyOOOIJvf/vbXH755fEMkk1NTfzqV7/i8ccfZ9u2baSkpHDKKafwi1/8gqOOOqrN+SorK7npppt46qmnKC8vJyMjgzPPPJMbb7wx/qktdBy0Adx2223ccccdlJaWMmjQoDb993q9jBw5khNOOIGf/OQnTJs27SCeORER6SsK2kRERERERBKY9rSJiIiIiIgkMAVtIiIie7jkkkvaFErd898ll1zS190TEZHDkJZHioiI7KGiooJAINDhMb/fT1ZWVi/3SEREDncK2kRERERERBKYlkeKiIiIiIgkMAVtIiIiIiIiCUxBm4iIiIiISAJT0CYiIiIiIpLAFLSJiIiIiIgkMAVtIiIiIiIiCUxBm4iIiIiISAL7/1eHexw2cchuAAAAAElFTkSuQmCC\n"},"metadata":{}}],"source":["import matplotlib.pyplot as plt\n","coordinates_df = df_sorted[['X_COORD', 'Y_COORD', 'RESULT']][:200]\n","\n","\n","grouped = coordinates_df.groupby('RESULT')\n","\n","plt.figure(figsize=(10, 8))\n","\n","for label, group in grouped:\n","    plt.scatter(group['X_COORD'], group['Y_COORD'], label=label, alpha=0.7)\n","\n","plt.title('Coordinates Grouped by RESULT')\n","plt.xlabel('X_COORD')\n","plt.ylabel('Y_COORD')\n","plt.legend(title='RESULT')\n","plt.grid(True)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":100,"status":"error","timestamp":1733711882592,"user":{"displayName":"Divyansh Chamria","userId":"15997290894504102173"},"user_tz":360},"id":"zkrNQOlmevV2","colab":{"base_uri":"https://localhost:8080/","height":141},"outputId":"96acef61-7b23-4739-9521-3f7967507b29"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'sanitationdf' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-28-4b097bbef3cb>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0msanitationdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'MONTH'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_datetime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msanitationdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'MONTH'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstrftime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'%Y/%m'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'sanitationdf' is not defined"]}],"source":["sanitationdf['MONTH'] = pd.to_datetime(sanitationdf['MONTH']).dt.strftime('%Y/%m')"]},{"cell_type":"markdown","metadata":{"id":"IhV8VSo-LfAp"},"source":["Since our rodent inspection data only goes back to 2009. We are removing any years of sanitation data before 2009."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"32LY5_EhLJRD"},"outputs":[],"source":["sanitationdf['Year'] = sanitationdf['MONTH'].str[:4].astype(int)  # Extract and convert year to int\n","sanitationdf = sanitationdf[sanitationdf['Year'] >= 2009]  # Keep rows where year is 2009 or later\n","sanitationdf.drop(columns='Year')  # Drop the temporary Year column"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":155,"status":"error","timestamp":1733711873053,"user":{"displayName":"Divyansh Chamria","userId":"15997290894504102173"},"user_tz":360},"id":"vBoQ7ZGpgS5d","colab":{"base_uri":"https://localhost:8080/","height":159},"outputId":"6e32e8a7-aa90-4299-c82d-461e3295dd4f"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'sanitationdf' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-26-b860a2c0821b>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mdf_sorted\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'BORO_CODE'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf_sorted\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'BORO_CODE'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'category'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0msanitationdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'BOROUGH_ID'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msanitationdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'BOROUGH_ID'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'category'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'sanitationdf' is not defined"]}],"source":["df_sorted['BORO_CODE'] = df_sorted['BORO_CODE'].astype('category')\n","sanitationdf['BOROUGH_ID'] = sanitationdf['BOROUGH_ID'].astype('category')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6822,"status":"ok","timestamp":1733711328331,"user":{"displayName":"Divyansh Chamria","userId":"15997290894504102173"},"user_tz":360},"id":"hr2tC6mnjXnR","outputId":"4d56c36f-dee3-4e84-8cce-1ad2051e59c7"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/numpy/core/fromnumeric.py:59: FutureWarning: 'DataFrame.swapaxes' is deprecated and will be removed in a future version. Please use 'DataFrame.transpose' instead.\n","  return bound(*args, **kwds)\n"]}],"source":["import numpy as np\n","chunk_size = 100  # Set the chunk size based on available memory\n","n_chunks = int(np.ceil(len(df_sorted) / chunk_size))  # Calculate the number of chunks\n","\n","# Split dataset1 into chunks using numpy's array_split\n","chunks = np.array_split(df_sorted, n_chunks)\n","\n","# Initialize an empty list to store merged chunks\n","merged_chunks = []\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZrzGQBtJhdRi"},"outputs":[],"source":["for chunk in chunks:\n","    merged_chunk= pd.merge(chunk, sanitationdf[['BOROUGH_ID', 'MONTH', 'REFUSETONSCOLLECTED', 'PAPERTONSCOLLECTED', 'MGPTONSCOLLECTED']],\n","                      left_on=['BORO_CODE', 'Year_Month'],\n","                      right_on=['BOROUGH_ID', 'MONTH'],\n","                      how='left')\n","    merged_chunks.append(merged_chunk)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":141},"executionInfo":{"elapsed":144,"status":"error","timestamp":1733711703403,"user":{"displayName":"Divyansh Chamria","userId":"15997290894504102173"},"user_tz":360},"id":"grrYtRPtheKV","outputId":"19626283-671e-42f7-8d28-ec06839c0fd1"},"outputs":[{"ename":"NameError","evalue":"name 'pd' is not defined","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-eaf11fd12dde>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mmerged_df\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconcat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmerged_chunks\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mignore_index\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'pd' is not defined"]}],"source":["merged_df = pd.concat(merged_chunks, ignore_index=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4OjZzdxafo8W"},"outputs":[],"source":["final_merged_df = merged_df.drop(columns=['BOROUGH_ID', 'Year_Month'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jR51i8KbdrSL"},"outputs":[],"source":["final_merged_df['REFUSETONSCOLLECTED']"]},{"cell_type":"markdown","metadata":{"id":"6wLc4SXmD7ZE"},"source":["# Business Type Data (This is New Content Added After Milestone 1 to Improve Final Model!)"]},{"cell_type":"markdown","metadata":{"id":"NxuwUlLEUHBc"},"source":["Adding information on the type of business inspections are performed at. Let's first look at information directly from the city, and whether it is suitable for our purposes. If not, we may need to generalize to \"industrial, mixed, residential, etc\" zoning codes."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KC0INSE-UGFt"},"outputs":[],"source":["bd_csv = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Issued_Licenses_20241022.csv')\n","print(bd_csv.columns.tolist())"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vFzFeJdWUGTG"},"outputs":[],"source":["print(bd_csv.columns)\n","print(bd_csv.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MCoyrPsDW87B"},"outputs":[],"source":["bd_csv.head(5)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IY3hZut0UGV6"},"outputs":[],"source":["bd_csv['Business Category'].unique()"]},{"cell_type":"markdown","metadata":{"id":"y0c1Kr4NY6g4"},"source":["Wow, it seems like the license data provided might not be the best fit for gathering highly useful information. To that end, let's consider pulling zoning information (from an alternate source) instead!"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"X8JvjOz0UGYQ"},"outputs":[],"source":["We ended up removing this data because the information was quite difficult to match up with our original inspection data without having to remove a lot of the data not associated with a business address."]},{"cell_type":"markdown","metadata":{"id":"yVW5xoHYT-4B"},"source":["# One Hot Encoding\n"]},{"cell_type":"markdown","metadata":{"id":"kwYbq-r1DUTM"},"source":["After adding all of the features, we are performing one hot encoding for borough and month of inspection and then saving dataset into a pickle"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gGZ0r8IQ9fKn"},"outputs":[],"source":["one_hot_full = pd.get_dummies(final_merged_df['BOROUGH'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"f_8wUuf694Jg"},"outputs":[],"source":["full_df_one_hot= pd.concat([final_merged_df,one_hot_full],axis=1)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"I4HEWpYM7Ij2"},"outputs":[],"source":["full_df_one_hot['MONTH'] = full_df_one_hot['INSPECTION_DATE'].dt.month"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"v3NXhvel7Sr9"},"outputs":[],"source":["one_hot_months_full = pd.get_dummies(full_df_one_hot['MONTH'], prefix='month', drop_first=False)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uW8tBkm37Ury"},"outputs":[],"source":["df_one_hot_full = pd.concat([full_df_one_hot, one_hot_months_full], axis=1)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DXT_Oroq7Wc5"},"outputs":[],"source":["df_one_hot_full.columns"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"rE0g3BLE8AuI"},"outputs":[],"source":["df_one_hot_full.to_pickle('full_dataset_one_hot_encoded.pkl')"]},{"cell_type":"markdown","metadata":{"id":"WF6AtfkQQrCI"},"source":["Saving debugging dataset now that all features have been added."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sVoaG-cOQcWU"},"outputs":[],"source":["total_debugging_df = df_one_hot_full.sample(n=200, random_state=0)\n","total_debugging_df.to_pickle('debugging_dataset_one_hot_encoded.pkl')"]},{"cell_type":"markdown","metadata":{"id":"2yVW90yvAoor"},"source":["#"]}],"metadata":{"colab":{"provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}